{
  "cells": [
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000,
          "resources": {
            "http://localhost:8080/nbextensions/google.colab/files.js": {
              "data": "Ly8gQ29weXJpZ2h0IDIwMTcgR29vZ2xlIExMQwovLwovLyBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgIkxpY2Vuc2UiKTsKLy8geW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLgovLyBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXQKLy8KLy8gICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjAKLy8KLy8gVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZQovLyBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiAiQVMgSVMiIEJBU0lTLAovLyBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC4KLy8gU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZAovLyBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS4KCi8qKgogKiBAZmlsZW92ZXJ2aWV3IEhlbHBlcnMgZm9yIGdvb2dsZS5jb2xhYiBQeXRob24gbW9kdWxlLgogKi8KKGZ1bmN0aW9uKHNjb3BlKSB7CmZ1bmN0aW9uIHNwYW4odGV4dCwgc3R5bGVBdHRyaWJ1dGVzID0ge30pIHsKICBjb25zdCBlbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc3BhbicpOwogIGVsZW1lbnQudGV4dENvbnRlbnQgPSB0ZXh0OwogIGZvciAoY29uc3Qga2V5IG9mIE9iamVjdC5rZXlzKHN0eWxlQXR0cmlidXRlcykpIHsKICAgIGVsZW1lbnQuc3R5bGVba2V5XSA9IHN0eWxlQXR0cmlidXRlc1trZXldOwogIH0KICByZXR1cm4gZWxlbWVudDsKfQoKLy8gTWF4IG51bWJlciBvZiBieXRlcyB3aGljaCB3aWxsIGJlIHVwbG9hZGVkIGF0IGEgdGltZS4KY29uc3QgTUFYX1BBWUxPQURfU0laRSA9IDEwMCAqIDEwMjQ7CgpmdW5jdGlvbiBfdXBsb2FkRmlsZXMoaW5wdXRJZCwgb3V0cHV0SWQpIHsKICBjb25zdCBzdGVwcyA9IHVwbG9hZEZpbGVzU3RlcChpbnB1dElkLCBvdXRwdXRJZCk7CiAgY29uc3Qgb3V0cHV0RWxlbWVudCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKG91dHB1dElkKTsKICAvLyBDYWNoZSBzdGVwcyBvbiB0aGUgb3V0cHV0RWxlbWVudCB0byBtYWtlIGl0IGF2YWlsYWJsZSBmb3IgdGhlIG5leHQgY2FsbAogIC8vIHRvIHVwbG9hZEZpbGVzQ29udGludWUgZnJvbSBQeXRob24uCiAgb3V0cHV0RWxlbWVudC5zdGVwcyA9IHN0ZXBzOwoKICByZXR1cm4gX3VwbG9hZEZpbGVzQ29udGludWUob3V0cHV0SWQpOwp9CgovLyBUaGlzIGlzIHJvdWdobHkgYW4gYXN5bmMgZ2VuZXJhdG9yIChub3Qgc3VwcG9ydGVkIGluIHRoZSBicm93c2VyIHlldCksCi8vIHdoZXJlIHRoZXJlIGFyZSBtdWx0aXBsZSBhc3luY2hyb25vdXMgc3RlcHMgYW5kIHRoZSBQeXRob24gc2lkZSBpcyBnb2luZwovLyB0byBwb2xsIGZvciBjb21wbGV0aW9uIG9mIGVhY2ggc3RlcC4KLy8gVGhpcyB1c2VzIGEgUHJvbWlzZSB0byBibG9jayB0aGUgcHl0aG9uIHNpZGUgb24gY29tcGxldGlvbiBvZiBlYWNoIHN0ZXAsCi8vIHRoZW4gcGFzc2VzIHRoZSByZXN1bHQgb2YgdGhlIHByZXZpb3VzIHN0ZXAgYXMgdGhlIGlucHV0IHRvIHRoZSBuZXh0IHN0ZXAuCmZ1bmN0aW9uIF91cGxvYWRGaWxlc0NvbnRpbnVlKG91dHB1dElkKSB7CiAgY29uc3Qgb3V0cHV0RWxlbWVudCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKG91dHB1dElkKTsKICBjb25zdCBzdGVwcyA9IG91dHB1dEVsZW1lbnQuc3RlcHM7CgogIGNvbnN0IG5leHQgPSBzdGVwcy5uZXh0KG91dHB1dEVsZW1lbnQubGFzdFByb21pc2VWYWx1ZSk7CiAgcmV0dXJuIFByb21pc2UucmVzb2x2ZShuZXh0LnZhbHVlLnByb21pc2UpLnRoZW4oKHZhbHVlKSA9PiB7CiAgICAvLyBDYWNoZSB0aGUgbGFzdCBwcm9taXNlIHZhbHVlIHRvIG1ha2UgaXQgYXZhaWxhYmxlIHRvIHRoZSBuZXh0CiAgICAvLyBzdGVwIG9mIHRoZSBnZW5lcmF0b3IuCiAgICBvdXRwdXRFbGVtZW50Lmxhc3RQcm9taXNlVmFsdWUgPSB2YWx1ZTsKICAgIHJldHVybiBuZXh0LnZhbHVlLnJlc3BvbnNlOwogIH0pOwp9CgovKioKICogR2VuZXJhdG9yIGZ1bmN0aW9uIHdoaWNoIGlzIGNhbGxlZCBiZXR3ZWVuIGVhY2ggYXN5bmMgc3RlcCBvZiB0aGUgdXBsb2FkCiAqIHByb2Nlc3MuCiAqIEBwYXJhbSB7c3RyaW5nfSBpbnB1dElkIEVsZW1lbnQgSUQgb2YgdGhlIGlucHV0IGZpbGUgcGlja2VyIGVsZW1lbnQuCiAqIEBwYXJhbSB7c3RyaW5nfSBvdXRwdXRJZCBFbGVtZW50IElEIG9mIHRoZSBvdXRwdXQgZGlzcGxheS4KICogQHJldHVybiB7IUl0ZXJhYmxlPCFPYmplY3Q+fSBJdGVyYWJsZSBvZiBuZXh0IHN0ZXBzLgogKi8KZnVuY3Rpb24qIHVwbG9hZEZpbGVzU3RlcChpbnB1dElkLCBvdXRwdXRJZCkgewogIGNvbnN0IGlucHV0RWxlbWVudCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKGlucHV0SWQpOwogIGlucHV0RWxlbWVudC5kaXNhYmxlZCA9IGZhbHNlOwoKICBjb25zdCBvdXRwdXRFbGVtZW50ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQob3V0cHV0SWQpOwogIG91dHB1dEVsZW1lbnQuaW5uZXJIVE1MID0gJyc7CgogIGNvbnN0IHBpY2tlZFByb21pc2UgPSBuZXcgUHJvbWlzZSgocmVzb2x2ZSkgPT4gewogICAgaW5wdXRFbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2NoYW5nZScsIChlKSA9PiB7CiAgICAgIHJlc29sdmUoZS50YXJnZXQuZmlsZXMpOwogICAgfSk7CiAgfSk7CgogIGNvbnN0IGNhbmNlbCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2J1dHRvbicpOwogIGlucHV0RWxlbWVudC5wYXJlbnRFbGVtZW50LmFwcGVuZENoaWxkKGNhbmNlbCk7CiAgY2FuY2VsLnRleHRDb250ZW50ID0gJ0NhbmNlbCB1cGxvYWQnOwogIGNvbnN0IGNhbmNlbFByb21pc2UgPSBuZXcgUHJvbWlzZSgocmVzb2x2ZSkgPT4gewogICAgY2FuY2VsLm9uY2xpY2sgPSAoKSA9PiB7CiAgICAgIHJlc29sdmUobnVsbCk7CiAgICB9OwogIH0pOwoKICAvLyBXYWl0IGZvciB0aGUgdXNlciB0byBwaWNrIHRoZSBmaWxlcy4KICBjb25zdCBmaWxlcyA9IHlpZWxkIHsKICAgIHByb21pc2U6IFByb21pc2UucmFjZShbcGlja2VkUHJvbWlzZSwgY2FuY2VsUHJvbWlzZV0pLAogICAgcmVzcG9uc2U6IHsKICAgICAgYWN0aW9uOiAnc3RhcnRpbmcnLAogICAgfQogIH07CgogIGNhbmNlbC5yZW1vdmUoKTsKCiAgLy8gRGlzYWJsZSB0aGUgaW5wdXQgZWxlbWVudCBzaW5jZSBmdXJ0aGVyIHBpY2tzIGFyZSBub3QgYWxsb3dlZC4KICBpbnB1dEVsZW1lbnQuZGlzYWJsZWQgPSB0cnVlOwoKICBpZiAoIWZpbGVzKSB7CiAgICByZXR1cm4gewogICAgICByZXNwb25zZTogewogICAgICAgIGFjdGlvbjogJ2NvbXBsZXRlJywKICAgICAgfQogICAgfTsKICB9CgogIGZvciAoY29uc3QgZmlsZSBvZiBmaWxlcykgewogICAgY29uc3QgbGkgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdsaScpOwogICAgbGkuYXBwZW5kKHNwYW4oZmlsZS5uYW1lLCB7Zm9udFdlaWdodDogJ2JvbGQnfSkpOwogICAgbGkuYXBwZW5kKHNwYW4oCiAgICAgICAgYCgke2ZpbGUudHlwZSB8fCAnbi9hJ30pIC0gJHtmaWxlLnNpemV9IGJ5dGVzLCBgICsKICAgICAgICBgbGFzdCBtb2RpZmllZDogJHsKICAgICAgICAgICAgZmlsZS5sYXN0TW9kaWZpZWREYXRlID8gZmlsZS5sYXN0TW9kaWZpZWREYXRlLnRvTG9jYWxlRGF0ZVN0cmluZygpIDoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJ24vYSd9IC0gYCkpOwogICAgY29uc3QgcGVyY2VudCA9IHNwYW4oJzAlIGRvbmUnKTsKICAgIGxpLmFwcGVuZENoaWxkKHBlcmNlbnQpOwoKICAgIG91dHB1dEVsZW1lbnQuYXBwZW5kQ2hpbGQobGkpOwoKICAgIGNvbnN0IGZpbGVEYXRhUHJvbWlzZSA9IG5ldyBQcm9taXNlKChyZXNvbHZlKSA9PiB7CiAgICAgIGNvbnN0IHJlYWRlciA9IG5ldyBGaWxlUmVhZGVyKCk7CiAgICAgIHJlYWRlci5vbmxvYWQgPSAoZSkgPT4gewogICAgICAgIHJlc29sdmUoZS50YXJnZXQucmVzdWx0KTsKICAgICAgfTsKICAgICAgcmVhZGVyLnJlYWRBc0FycmF5QnVmZmVyKGZpbGUpOwogICAgfSk7CiAgICAvLyBXYWl0IGZvciB0aGUgZGF0YSB0byBiZSByZWFkeS4KICAgIGxldCBmaWxlRGF0YSA9IHlpZWxkIHsKICAgICAgcHJvbWlzZTogZmlsZURhdGFQcm9taXNlLAogICAgICByZXNwb25zZTogewogICAgICAgIGFjdGlvbjogJ2NvbnRpbnVlJywKICAgICAgfQogICAgfTsKCiAgICAvLyBVc2UgYSBjaHVua2VkIHNlbmRpbmcgdG8gYXZvaWQgbWVzc2FnZSBzaXplIGxpbWl0cy4gU2VlIGIvNjIxMTU2NjAuCiAgICBsZXQgcG9zaXRpb24gPSAwOwogICAgZG8gewogICAgICBjb25zdCBsZW5ndGggPSBNYXRoLm1pbihmaWxlRGF0YS5ieXRlTGVuZ3RoIC0gcG9zaXRpb24sIE1BWF9QQVlMT0FEX1NJWkUpOwogICAgICBjb25zdCBjaHVuayA9IG5ldyBVaW50OEFycmF5KGZpbGVEYXRhLCBwb3NpdGlvbiwgbGVuZ3RoKTsKICAgICAgcG9zaXRpb24gKz0gbGVuZ3RoOwoKICAgICAgY29uc3QgYmFzZTY0ID0gYnRvYShTdHJpbmcuZnJvbUNoYXJDb2RlLmFwcGx5KG51bGwsIGNodW5rKSk7CiAgICAgIHlpZWxkIHsKICAgICAgICByZXNwb25zZTogewogICAgICAgICAgYWN0aW9uOiAnYXBwZW5kJywKICAgICAgICAgIGZpbGU6IGZpbGUubmFtZSwKICAgICAgICAgIGRhdGE6IGJhc2U2NCwKICAgICAgICB9LAogICAgICB9OwoKICAgICAgbGV0IHBlcmNlbnREb25lID0gZmlsZURhdGEuYnl0ZUxlbmd0aCA9PT0gMCA/CiAgICAgICAgICAxMDAgOgogICAgICAgICAgTWF0aC5yb3VuZCgocG9zaXRpb24gLyBmaWxlRGF0YS5ieXRlTGVuZ3RoKSAqIDEwMCk7CiAgICAgIHBlcmNlbnQudGV4dENvbnRlbnQgPSBgJHtwZXJjZW50RG9uZX0lIGRvbmVgOwoKICAgIH0gd2hpbGUgKHBvc2l0aW9uIDwgZmlsZURhdGEuYnl0ZUxlbmd0aCk7CiAgfQoKICAvLyBBbGwgZG9uZS4KICB5aWVsZCB7CiAgICByZXNwb25zZTogewogICAgICBhY3Rpb246ICdjb21wbGV0ZScsCiAgICB9CiAgfTsKfQoKc2NvcGUuZ29vZ2xlID0gc2NvcGUuZ29vZ2xlIHx8IHt9OwpzY29wZS5nb29nbGUuY29sYWIgPSBzY29wZS5nb29nbGUuY29sYWIgfHwge307CnNjb3BlLmdvb2dsZS5jb2xhYi5fZmlsZXMgPSB7CiAgX3VwbG9hZEZpbGVzLAogIF91cGxvYWRGaWxlc0NvbnRpbnVlLAp9Owp9KShzZWxmKTsK",
              "ok": true,
              "headers": [
                [
                  "content-type",
                  "application/javascript"
                ]
              ],
              "status": 200,
              "status_text": ""
            }
          }
        },
        "id": "MXZlPbwtDO65",
        "outputId": "490a57c1-606b-4fbf-dde6-50822b3cc85b"
      },
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "\n",
              "     <input type=\"file\" id=\"files-a6c67fb1-a926-48ad-8d27-d64776d2d41d\" name=\"files[]\" multiple disabled\n",
              "        style=\"border:none\" />\n",
              "     <output id=\"result-a6c67fb1-a926-48ad-8d27-d64776d2d41d\">\n",
              "      Upload widget is only available when the cell has been executed in the\n",
              "      current browser session. Please rerun this cell to enable.\n",
              "      </output>\n",
              "      <script src=\"/nbextensions/google.colab/files.js\"></script> "
            ]
          },
          "metadata": {}
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\u001b[1;30;43mStreaming output truncated to the last 5000 lines.\u001b[0m\n",
            "  inflating: data/train/benign/420.jpg  \n",
            "  inflating: data/train/benign/421.jpg  \n",
            "  inflating: data/train/benign/422.jpg  \n",
            "  inflating: data/train/benign/423.jpg  \n",
            "  inflating: data/train/benign/424.jpg  \n",
            "  inflating: data/train/benign/425.jpg  \n",
            "  inflating: data/train/benign/426.jpg  \n",
            "  inflating: data/train/benign/429.jpg  \n",
            "  inflating: data/train/benign/43.jpg  \n",
            "  inflating: data/train/benign/430.jpg  \n",
            "  inflating: data/train/benign/431.jpg  \n",
            "  inflating: data/train/benign/432.jpg  \n",
            "  inflating: data/train/benign/434.jpg  \n",
            "  inflating: data/train/benign/435.jpg  \n",
            "  inflating: data/train/benign/438.jpg  \n",
            "  inflating: data/train/benign/439.jpg  \n",
            "  inflating: data/train/benign/440.jpg  \n",
            "  inflating: data/train/benign/441.jpg  \n",
            "  inflating: data/train/benign/442.jpg  \n",
            "  inflating: data/train/benign/443.jpg  \n",
            "  inflating: data/train/benign/445.jpg  \n",
            "  inflating: data/train/benign/446.jpg  \n",
            "  inflating: data/train/benign/447.jpg  \n",
            "  inflating: data/train/benign/448.jpg  \n",
            "  inflating: data/train/benign/450.jpg  \n",
            "  inflating: data/train/benign/451.jpg  \n",
            "  inflating: data/train/benign/452.jpg  \n",
            "  inflating: data/train/benign/453.jpg  \n",
            "  inflating: data/train/benign/455.jpg  \n",
            "  inflating: data/train/benign/456.jpg  \n",
            "  inflating: data/train/benign/458.jpg  \n",
            "  inflating: data/train/benign/459.jpg  \n",
            "  inflating: data/train/benign/46.jpg  \n",
            "  inflating: data/train/benign/460.jpg  \n",
            "  inflating: data/train/benign/461.jpg  \n",
            "  inflating: data/train/benign/463.jpg  \n",
            "  inflating: data/train/benign/464.jpg  \n",
            "  inflating: data/train/benign/465.jpg  \n",
            "  inflating: data/train/benign/466.jpg  \n",
            "  inflating: data/train/benign/467.jpg  \n",
            "  inflating: data/train/benign/468.jpg  \n",
            "  inflating: data/train/benign/469.jpg  \n",
            "  inflating: data/train/benign/47.jpg  \n",
            "  inflating: data/train/benign/470.jpg  \n",
            "  inflating: data/train/benign/471.jpg  \n",
            "  inflating: data/train/benign/472.jpg  \n",
            "  inflating: data/train/benign/473.jpg  \n",
            "  inflating: data/train/benign/474.jpg  \n",
            "  inflating: data/train/benign/476.jpg  \n",
            "  inflating: data/train/benign/477.jpg  \n",
            "  inflating: data/train/benign/478.jpg  \n",
            "  inflating: data/train/benign/48.jpg  \n",
            "  inflating: data/train/benign/480.jpg  \n",
            "  inflating: data/train/benign/481.jpg  \n",
            "  inflating: data/train/benign/482.jpg  \n",
            "  inflating: data/train/benign/483.jpg  \n",
            "  inflating: data/train/benign/485.jpg  \n",
            "  inflating: data/train/benign/486.jpg  \n",
            "  inflating: data/train/benign/487.jpg  \n",
            "  inflating: data/train/benign/488.jpg  \n",
            "  inflating: data/train/benign/489.jpg  \n",
            "  inflating: data/train/benign/49.jpg  \n",
            "  inflating: data/train/benign/490.jpg  \n",
            "  inflating: data/train/benign/491.jpg  \n",
            "  inflating: data/train/benign/492.jpg  \n",
            "  inflating: data/train/benign/493.jpg  \n",
            "  inflating: data/train/benign/494.jpg  \n",
            "  inflating: data/train/benign/496.jpg  \n",
            "  inflating: data/train/benign/497.jpg  \n",
            "  inflating: data/train/benign/498.jpg  \n",
            "  inflating: data/train/benign/499.jpg  \n",
            "  inflating: data/train/benign/50.jpg  \n",
            "  inflating: data/train/benign/500.jpg  \n",
            "  inflating: data/train/benign/501.jpg  \n",
            "  inflating: data/train/benign/502.jpg  \n",
            "  inflating: data/train/benign/503.jpg  \n",
            "  inflating: data/train/benign/504.jpg  \n",
            "  inflating: data/train/benign/505.jpg  \n",
            "  inflating: data/train/benign/506.jpg  \n",
            "  inflating: data/train/benign/507.jpg  \n",
            "  inflating: data/train/benign/508.jpg  \n",
            "  inflating: data/train/benign/509.jpg  \n",
            "  inflating: data/train/benign/51.jpg  \n",
            "  inflating: data/train/benign/510.jpg  \n",
            "  inflating: data/train/benign/511.jpg  \n",
            "  inflating: data/train/benign/512.jpg  \n",
            "  inflating: data/train/benign/513.jpg  \n",
            "  inflating: data/train/benign/514.jpg  \n",
            "  inflating: data/train/benign/515.jpg  \n",
            "  inflating: data/train/benign/516.jpg  \n",
            "  inflating: data/train/benign/517.jpg  \n",
            "  inflating: data/train/benign/518.jpg  \n",
            "  inflating: data/train/benign/519.jpg  \n",
            "  inflating: data/train/benign/52.jpg  \n",
            "  inflating: data/train/benign/521.jpg  \n",
            "  inflating: data/train/benign/522.jpg  \n",
            "  inflating: data/train/benign/523.jpg  \n",
            "  inflating: data/train/benign/524.jpg  \n",
            "  inflating: data/train/benign/525.jpg  \n",
            "  inflating: data/train/benign/526.jpg  \n",
            "  inflating: data/train/benign/528.jpg  \n",
            "  inflating: data/train/benign/529.jpg  \n",
            "  inflating: data/train/benign/53.jpg  \n",
            "  inflating: data/train/benign/530.jpg  \n",
            "  inflating: data/train/benign/531.jpg  \n",
            "  inflating: data/train/benign/533.jpg  \n",
            "  inflating: data/train/benign/534.jpg  \n",
            "  inflating: data/train/benign/537.jpg  \n",
            "  inflating: data/train/benign/538.jpg  \n",
            "  inflating: data/train/benign/539.jpg  \n",
            "  inflating: data/train/benign/540.jpg  \n",
            "  inflating: data/train/benign/541.jpg  \n",
            "  inflating: data/train/benign/542.jpg  \n",
            "  inflating: data/train/benign/543.jpg  \n",
            "  inflating: data/train/benign/544.jpg  \n",
            "  inflating: data/train/benign/546.jpg  \n",
            "  inflating: data/train/benign/547.jpg  \n",
            "  inflating: data/train/benign/549.jpg  \n",
            "  inflating: data/train/benign/55.jpg  \n",
            "  inflating: data/train/benign/550.jpg  \n",
            "  inflating: data/train/benign/551.jpg  \n",
            "  inflating: data/train/benign/553.jpg  \n",
            "  inflating: data/train/benign/554.jpg  \n",
            "  inflating: data/train/benign/555.jpg  \n",
            "  inflating: data/train/benign/556.jpg  \n",
            "  inflating: data/train/benign/557.jpg  \n",
            "  inflating: data/train/benign/56.jpg  \n",
            "  inflating: data/train/benign/563.jpg  \n",
            "  inflating: data/train/benign/564.jpg  \n",
            "  inflating: data/train/benign/565.jpg  \n",
            "  inflating: data/train/benign/567.jpg  \n",
            "  inflating: data/train/benign/568.jpg  \n",
            "  inflating: data/train/benign/569.jpg  \n",
            "  inflating: data/train/benign/570.jpg  \n",
            "  inflating: data/train/benign/571.jpg  \n",
            "  inflating: data/train/benign/576.jpg  \n",
            "  inflating: data/train/benign/577.jpg  \n",
            "  inflating: data/train/benign/578.jpg  \n",
            "  inflating: data/train/benign/579.jpg  \n",
            "  inflating: data/train/benign/58.jpg  \n",
            "  inflating: data/train/benign/581.jpg  \n",
            "  inflating: data/train/benign/582.jpg  \n",
            "  inflating: data/train/benign/583.jpg  \n",
            "  inflating: data/train/benign/584.jpg  \n",
            "  inflating: data/train/benign/585.jpg  \n",
            "  inflating: data/train/benign/586.jpg  \n",
            "  inflating: data/train/benign/587.jpg  \n",
            "  inflating: data/train/benign/589.jpg  \n",
            "  inflating: data/train/benign/59.jpg  \n",
            "  inflating: data/train/benign/590.jpg  \n",
            "  inflating: data/train/benign/591.jpg  \n",
            "  inflating: data/train/benign/592.jpg  \n",
            "  inflating: data/train/benign/593.jpg  \n",
            "  inflating: data/train/benign/594.jpg  \n",
            "  inflating: data/train/benign/595.jpg  \n",
            "  inflating: data/train/benign/597.jpg  \n",
            "  inflating: data/train/benign/598.jpg  \n",
            "  inflating: data/train/benign/599.jpg  \n",
            "  inflating: data/train/benign/6.jpg  \n",
            "  inflating: data/train/benign/60.jpg  \n",
            "  inflating: data/train/benign/600.jpg  \n",
            "  inflating: data/train/benign/601.jpg  \n",
            "  inflating: data/train/benign/602.jpg  \n",
            "  inflating: data/train/benign/604.jpg  \n",
            "  inflating: data/train/benign/605.jpg  \n",
            "  inflating: data/train/benign/606.jpg  \n",
            "  inflating: data/train/benign/607.jpg  \n",
            "  inflating: data/train/benign/608.jpg  \n",
            "  inflating: data/train/benign/609.jpg  \n",
            "  inflating: data/train/benign/610.jpg  \n",
            "  inflating: data/train/benign/611.jpg  \n",
            "  inflating: data/train/benign/613.jpg  \n",
            "  inflating: data/train/benign/614.jpg  \n",
            "  inflating: data/train/benign/615.jpg  \n",
            "  inflating: data/train/benign/616.jpg  \n",
            "  inflating: data/train/benign/617.jpg  \n",
            "  inflating: data/train/benign/618.jpg  \n",
            "  inflating: data/train/benign/619.jpg  \n",
            "  inflating: data/train/benign/62.jpg  \n",
            "  inflating: data/train/benign/620.jpg  \n",
            "  inflating: data/train/benign/621.jpg  \n",
            "  inflating: data/train/benign/622.jpg  \n",
            "  inflating: data/train/benign/625.jpg  \n",
            "  inflating: data/train/benign/627.jpg  \n",
            "  inflating: data/train/benign/628.jpg  \n",
            "  inflating: data/train/benign/629.jpg  \n",
            "  inflating: data/train/benign/630.jpg  \n",
            "  inflating: data/train/benign/632.jpg  \n",
            "  inflating: data/train/benign/633.jpg  \n",
            "  inflating: data/train/benign/637.jpg  \n",
            "  inflating: data/train/benign/638.jpg  \n",
            "  inflating: data/train/benign/639.jpg  \n",
            "  inflating: data/train/benign/64.jpg  \n",
            "  inflating: data/train/benign/640.jpg  \n",
            "  inflating: data/train/benign/641.jpg  \n",
            "  inflating: data/train/benign/643.jpg  \n",
            "  inflating: data/train/benign/645.jpg  \n",
            "  inflating: data/train/benign/646.jpg  \n",
            "  inflating: data/train/benign/648.jpg  \n",
            "  inflating: data/train/benign/649.jpg  \n",
            "  inflating: data/train/benign/65.jpg  \n",
            "  inflating: data/train/benign/650.jpg  \n",
            "  inflating: data/train/benign/651.jpg  \n",
            "  inflating: data/train/benign/652.jpg  \n",
            "  inflating: data/train/benign/653.jpg  \n",
            "  inflating: data/train/benign/654.jpg  \n",
            "  inflating: data/train/benign/655.jpg  \n",
            "  inflating: data/train/benign/656.jpg  \n",
            "  inflating: data/train/benign/657.jpg  \n",
            "  inflating: data/train/benign/66.jpg  \n",
            "  inflating: data/train/benign/661.jpg  \n",
            "  inflating: data/train/benign/662.jpg  \n",
            "  inflating: data/train/benign/665.jpg  \n",
            "  inflating: data/train/benign/666.jpg  \n",
            "  inflating: data/train/benign/667.jpg  \n",
            "  inflating: data/train/benign/669.jpg  \n",
            "  inflating: data/train/benign/67.jpg  \n",
            "  inflating: data/train/benign/671.jpg  \n",
            "  inflating: data/train/benign/672.jpg  \n",
            "  inflating: data/train/benign/673.jpg  \n",
            "  inflating: data/train/benign/674.jpg  \n",
            "  inflating: data/train/benign/675.jpg  \n",
            "  inflating: data/train/benign/677.jpg  \n",
            "  inflating: data/train/benign/679.jpg  \n",
            "  inflating: data/train/benign/68.jpg  \n",
            "  inflating: data/train/benign/680.jpg  \n",
            "  inflating: data/train/benign/682.jpg  \n",
            "  inflating: data/train/benign/683.jpg  \n",
            "  inflating: data/train/benign/684.jpg  \n",
            "  inflating: data/train/benign/685.jpg  \n",
            "  inflating: data/train/benign/686.jpg  \n",
            "  inflating: data/train/benign/687.jpg  \n",
            "  inflating: data/train/benign/688.jpg  \n",
            "  inflating: data/train/benign/69.jpg  \n",
            "  inflating: data/train/benign/691.jpg  \n",
            "  inflating: data/train/benign/692.jpg  \n",
            "  inflating: data/train/benign/693.jpg  \n",
            "  inflating: data/train/benign/694.jpg  \n",
            "  inflating: data/train/benign/695.jpg  \n",
            "  inflating: data/train/benign/696.jpg  \n",
            "  inflating: data/train/benign/697.jpg  \n",
            "  inflating: data/train/benign/698.jpg  \n",
            "  inflating: data/train/benign/699.jpg  \n",
            "  inflating: data/train/benign/7.jpg  \n",
            "  inflating: data/train/benign/70.jpg  \n",
            "  inflating: data/train/benign/701.jpg  \n",
            "  inflating: data/train/benign/702.jpg  \n",
            "  inflating: data/train/benign/703.jpg  \n",
            "  inflating: data/train/benign/704.jpg  \n",
            "  inflating: data/train/benign/705.jpg  \n",
            "  inflating: data/train/benign/706.jpg  \n",
            "  inflating: data/train/benign/707.jpg  \n",
            "  inflating: data/train/benign/708.jpg  \n",
            "  inflating: data/train/benign/709.jpg  \n",
            "  inflating: data/train/benign/710.jpg  \n",
            "  inflating: data/train/benign/711.jpg  \n",
            "  inflating: data/train/benign/713.jpg  \n",
            "  inflating: data/train/benign/714.jpg  \n",
            "  inflating: data/train/benign/715.jpg  \n",
            "  inflating: data/train/benign/716.jpg  \n",
            "  inflating: data/train/benign/718.jpg  \n",
            "  inflating: data/train/benign/719.jpg  \n",
            "  inflating: data/train/benign/72.jpg  \n",
            "  inflating: data/train/benign/722.jpg  \n",
            "  inflating: data/train/benign/723.jpg  \n",
            "  inflating: data/train/benign/726.jpg  \n",
            "  inflating: data/train/benign/727.jpg  \n",
            "  inflating: data/train/benign/728.jpg  \n",
            "  inflating: data/train/benign/729.jpg  \n",
            "  inflating: data/train/benign/73.jpg  \n",
            "  inflating: data/train/benign/730.jpg  \n",
            "  inflating: data/train/benign/731.jpg  \n",
            "  inflating: data/train/benign/732.jpg  \n",
            "  inflating: data/train/benign/733.jpg  \n",
            "  inflating: data/train/benign/734.jpg  \n",
            "  inflating: data/train/benign/735.jpg  \n",
            "  inflating: data/train/benign/736.jpg  \n",
            "  inflating: data/train/benign/737.jpg  \n",
            "  inflating: data/train/benign/738.jpg  \n",
            "  inflating: data/train/benign/739.jpg  \n",
            "  inflating: data/train/benign/740.jpg  \n",
            "  inflating: data/train/benign/741.jpg  \n",
            "  inflating: data/train/benign/742.jpg  \n",
            "  inflating: data/train/benign/743.jpg  \n",
            "  inflating: data/train/benign/744.jpg  \n",
            "  inflating: data/train/benign/745.jpg  \n",
            "  inflating: data/train/benign/746.jpg  \n",
            "  inflating: data/train/benign/747.jpg  \n",
            "  inflating: data/train/benign/748.jpg  \n",
            "  inflating: data/train/benign/749.jpg  \n",
            "  inflating: data/train/benign/75.jpg  \n",
            "  inflating: data/train/benign/750.jpg  \n",
            "  inflating: data/train/benign/752.jpg  \n",
            "  inflating: data/train/benign/753.jpg  \n",
            "  inflating: data/train/benign/754.jpg  \n",
            "  inflating: data/train/benign/755.jpg  \n",
            "  inflating: data/train/benign/756.jpg  \n",
            "  inflating: data/train/benign/757.jpg  \n",
            "  inflating: data/train/benign/759.jpg  \n",
            "  inflating: data/train/benign/76.jpg  \n",
            "  inflating: data/train/benign/760.jpg  \n",
            "  inflating: data/train/benign/761.jpg  \n",
            "  inflating: data/train/benign/764.jpg  \n",
            "  inflating: data/train/benign/765.jpg  \n",
            "  inflating: data/train/benign/766.jpg  \n",
            "  inflating: data/train/benign/767.jpg  \n",
            "  inflating: data/train/benign/769.jpg  \n",
            "  inflating: data/train/benign/77.jpg  \n",
            "  inflating: data/train/benign/771.jpg  \n",
            "  inflating: data/train/benign/772.jpg  \n",
            "  inflating: data/train/benign/775.jpg  \n",
            "  inflating: data/train/benign/776.jpg  \n",
            "  inflating: data/train/benign/777.jpg  \n",
            "  inflating: data/train/benign/779.jpg  \n",
            "  inflating: data/train/benign/78.jpg  \n",
            "  inflating: data/train/benign/780.jpg  \n",
            "  inflating: data/train/benign/781.jpg  \n",
            "  inflating: data/train/benign/782.jpg  \n",
            "  inflating: data/train/benign/783.jpg  \n",
            "  inflating: data/train/benign/784.jpg  \n",
            "  inflating: data/train/benign/785.jpg  \n",
            "  inflating: data/train/benign/786.jpg  \n",
            "  inflating: data/train/benign/787.jpg  \n",
            "  inflating: data/train/benign/788.jpg  \n",
            "  inflating: data/train/benign/789.jpg  \n",
            "  inflating: data/train/benign/79.jpg  \n",
            "  inflating: data/train/benign/791.jpg  \n",
            "  inflating: data/train/benign/792.jpg  \n",
            "  inflating: data/train/benign/793.jpg  \n",
            "  inflating: data/train/benign/794.jpg  \n",
            "  inflating: data/train/benign/795.jpg  \n",
            "  inflating: data/train/benign/796.jpg  \n",
            "  inflating: data/train/benign/797.jpg  \n",
            "  inflating: data/train/benign/798.jpg  \n",
            "  inflating: data/train/benign/799.jpg  \n",
            "  inflating: data/train/benign/80.jpg  \n",
            "  inflating: data/train/benign/800.jpg  \n",
            "  inflating: data/train/benign/801.jpg  \n",
            "  inflating: data/train/benign/803.jpg  \n",
            "  inflating: data/train/benign/804.jpg  \n",
            "  inflating: data/train/benign/807.jpg  \n",
            "  inflating: data/train/benign/808.jpg  \n",
            "  inflating: data/train/benign/809.jpg  \n",
            "  inflating: data/train/benign/81.jpg  \n",
            "  inflating: data/train/benign/810.jpg  \n",
            "  inflating: data/train/benign/811.jpg  \n",
            "  inflating: data/train/benign/812.jpg  \n",
            "  inflating: data/train/benign/814.jpg  \n",
            "  inflating: data/train/benign/815.jpg  \n",
            "  inflating: data/train/benign/816.jpg  \n",
            "  inflating: data/train/benign/817.jpg  \n",
            "  inflating: data/train/benign/818.jpg  \n",
            "  inflating: data/train/benign/82.jpg  \n",
            "  inflating: data/train/benign/821.jpg  \n",
            "  inflating: data/train/benign/822.jpg  \n",
            "  inflating: data/train/benign/827.jpg  \n",
            "  inflating: data/train/benign/829.jpg  \n",
            "  inflating: data/train/benign/831.jpg  \n",
            "  inflating: data/train/benign/832.jpg  \n",
            "  inflating: data/train/benign/833.jpg  \n",
            "  inflating: data/train/benign/834.jpg  \n",
            "  inflating: data/train/benign/835.jpg  \n",
            "  inflating: data/train/benign/836.jpg  \n",
            "  inflating: data/train/benign/837.jpg  \n",
            "  inflating: data/train/benign/838.jpg  \n",
            "  inflating: data/train/benign/839.jpg  \n",
            "  inflating: data/train/benign/841.jpg  \n",
            "  inflating: data/train/benign/842.jpg  \n",
            "  inflating: data/train/benign/843.jpg  \n",
            "  inflating: data/train/benign/844.jpg  \n",
            "  inflating: data/train/benign/845.jpg  \n",
            "  inflating: data/train/benign/846.jpg  \n",
            "  inflating: data/train/benign/847.jpg  \n",
            "  inflating: data/train/benign/848.jpg  \n",
            "  inflating: data/train/benign/849.jpg  \n",
            "  inflating: data/train/benign/85.jpg  \n",
            "  inflating: data/train/benign/850.jpg  \n",
            "  inflating: data/train/benign/851.jpg  \n",
            "  inflating: data/train/benign/852.jpg  \n",
            "  inflating: data/train/benign/853.jpg  \n",
            "  inflating: data/train/benign/855.jpg  \n",
            "  inflating: data/train/benign/856.jpg  \n",
            "  inflating: data/train/benign/857.jpg  \n",
            "  inflating: data/train/benign/858.jpg  \n",
            "  inflating: data/train/benign/859.jpg  \n",
            "  inflating: data/train/benign/86.jpg  \n",
            "  inflating: data/train/benign/860.jpg  \n",
            "  inflating: data/train/benign/861.jpg  \n",
            "  inflating: data/train/benign/862.jpg  \n",
            "  inflating: data/train/benign/863.jpg  \n",
            "  inflating: data/train/benign/864.jpg  \n",
            "  inflating: data/train/benign/865.jpg  \n",
            "  inflating: data/train/benign/866.jpg  \n",
            "  inflating: data/train/benign/867.jpg  \n",
            "  inflating: data/train/benign/868.jpg  \n",
            "  inflating: data/train/benign/87.jpg  \n",
            "  inflating: data/train/benign/870.jpg  \n",
            "  inflating: data/train/benign/871.jpg  \n",
            "  inflating: data/train/benign/872.jpg  \n",
            "  inflating: data/train/benign/873.jpg  \n",
            "  inflating: data/train/benign/875.jpg  \n",
            "  inflating: data/train/benign/876.jpg  \n",
            "  inflating: data/train/benign/877.jpg  \n",
            "  inflating: data/train/benign/879.jpg  \n",
            "  inflating: data/train/benign/881.jpg  \n",
            "  inflating: data/train/benign/882.jpg  \n",
            "  inflating: data/train/benign/883.jpg  \n",
            "  inflating: data/train/benign/884.jpg  \n",
            "  inflating: data/train/benign/885.jpg  \n",
            "  inflating: data/train/benign/886.jpg  \n",
            "  inflating: data/train/benign/889.jpg  \n",
            "  inflating: data/train/benign/89.jpg  \n",
            "  inflating: data/train/benign/890.jpg  \n",
            "  inflating: data/train/benign/891.jpg  \n",
            "  inflating: data/train/benign/896.jpg  \n",
            "  inflating: data/train/benign/897.jpg  \n",
            "  inflating: data/train/benign/898.jpg  \n",
            "  inflating: data/train/benign/899.jpg  \n",
            "  inflating: data/train/benign/900.jpg  \n",
            "  inflating: data/train/benign/901.jpg  \n",
            "  inflating: data/train/benign/902.jpg  \n",
            "  inflating: data/train/benign/904.jpg  \n",
            "  inflating: data/train/benign/905.jpg  \n",
            "  inflating: data/train/benign/907.jpg  \n",
            "  inflating: data/train/benign/908.jpg  \n",
            "  inflating: data/train/benign/91.jpg  \n",
            "  inflating: data/train/benign/910.jpg  \n",
            "  inflating: data/train/benign/911.jpg  \n",
            "  inflating: data/train/benign/913.jpg  \n",
            "  inflating: data/train/benign/914.jpg  \n",
            "  inflating: data/train/benign/915.jpg  \n",
            "  inflating: data/train/benign/917.jpg  \n",
            "  inflating: data/train/benign/918.jpg  \n",
            "  inflating: data/train/benign/92.jpg  \n",
            "  inflating: data/train/benign/920.jpg  \n",
            "  inflating: data/train/benign/921.jpg  \n",
            "  inflating: data/train/benign/922.jpg  \n",
            "  inflating: data/train/benign/923.jpg  \n",
            "  inflating: data/train/benign/924.jpg  \n",
            "  inflating: data/train/benign/926.jpg  \n",
            "  inflating: data/train/benign/927.jpg  \n",
            "  inflating: data/train/benign/928.jpg  \n",
            "  inflating: data/train/benign/929.jpg  \n",
            "  inflating: data/train/benign/93.jpg  \n",
            "  inflating: data/train/benign/930.jpg  \n",
            "  inflating: data/train/benign/931.jpg  \n",
            "  inflating: data/train/benign/932.jpg  \n",
            "  inflating: data/train/benign/933.jpg  \n",
            "  inflating: data/train/benign/934.jpg  \n",
            "  inflating: data/train/benign/935.jpg  \n",
            "  inflating: data/train/benign/937.jpg  \n",
            "  inflating: data/train/benign/938.jpg  \n",
            "  inflating: data/train/benign/939.jpg  \n",
            "  inflating: data/train/benign/94.jpg  \n",
            "  inflating: data/train/benign/940.jpg  \n",
            "  inflating: data/train/benign/941.jpg  \n",
            "  inflating: data/train/benign/942.jpg  \n",
            "  inflating: data/train/benign/945.jpg  \n",
            "  inflating: data/train/benign/947.jpg  \n",
            "  inflating: data/train/benign/948.jpg  \n",
            "  inflating: data/train/benign/949.jpg  \n",
            "  inflating: data/train/benign/950.jpg  \n",
            "  inflating: data/train/benign/951.jpg  \n",
            "  inflating: data/train/benign/952.jpg  \n",
            "  inflating: data/train/benign/953.jpg  \n",
            "  inflating: data/train/benign/954.jpg  \n",
            "  inflating: data/train/benign/955.jpg  \n",
            "  inflating: data/train/benign/956.jpg  \n",
            "  inflating: data/train/benign/957.jpg  \n",
            "  inflating: data/train/benign/959.jpg  \n",
            "  inflating: data/train/benign/96.jpg  \n",
            "  inflating: data/train/benign/960.jpg  \n",
            "  inflating: data/train/benign/961.jpg  \n",
            "  inflating: data/train/benign/963.jpg  \n",
            "  inflating: data/train/benign/965.jpg  \n",
            "  inflating: data/train/benign/966.jpg  \n",
            "  inflating: data/train/benign/967.jpg  \n",
            "  inflating: data/train/benign/968.jpg  \n",
            "  inflating: data/train/benign/969.jpg  \n",
            "  inflating: data/train/benign/970.jpg  \n",
            "  inflating: data/train/benign/971.jpg  \n",
            "  inflating: data/train/benign/973.jpg  \n",
            "  inflating: data/train/benign/974.jpg  \n",
            "  inflating: data/train/benign/975.jpg  \n",
            "  inflating: data/train/benign/976.jpg  \n",
            "  inflating: data/train/benign/977.jpg  \n",
            "  inflating: data/train/benign/978.jpg  \n",
            "  inflating: data/train/benign/979.jpg  \n",
            "  inflating: data/train/benign/980.jpg  \n",
            "  inflating: data/train/benign/981.jpg  \n",
            "  inflating: data/train/benign/983.jpg  \n",
            "  inflating: data/train/benign/984.jpg  \n",
            "  inflating: data/train/benign/985.jpg  \n",
            "  inflating: data/train/benign/986.jpg  \n",
            "  inflating: data/train/benign/987.jpg  \n",
            "  inflating: data/train/benign/988.jpg  \n",
            "  inflating: data/train/benign/989.jpg  \n",
            "  inflating: data/train/benign/99.jpg  \n",
            "  inflating: data/train/benign/990.jpg  \n",
            "  inflating: data/train/benign/991.jpg  \n",
            "  inflating: data/train/benign/992.jpg  \n",
            "  inflating: data/train/benign/994.jpg  \n",
            "  inflating: data/train/benign/995.jpg  \n",
            "  inflating: data/train/benign/996.jpg  \n",
            "  inflating: data/train/benign/997.jpg  \n",
            "  inflating: data/train/benign/999.jpg  \n",
            "  inflating: data/train/malignant/10.jpg  \n",
            "  inflating: data/train/malignant/100.jpg  \n",
            "  inflating: data/train/malignant/1000.jpg  \n",
            "  inflating: data/train/malignant/1001.jpg  \n",
            "  inflating: data/train/malignant/1002.jpg  \n",
            "  inflating: data/train/malignant/1004.jpg  \n",
            "  inflating: data/train/malignant/1006.jpg  \n",
            "  inflating: data/train/malignant/1008.jpg  \n",
            "  inflating: data/train/malignant/101.jpg  \n",
            "  inflating: data/train/malignant/1010.jpg  \n",
            "  inflating: data/train/malignant/1011.jpg  \n",
            "  inflating: data/train/malignant/1013.jpg  \n",
            "  inflating: data/train/malignant/1014.jpg  \n",
            "  inflating: data/train/malignant/1015.jpg  \n",
            "  inflating: data/train/malignant/1016.jpg  \n",
            "  inflating: data/train/malignant/1017.jpg  \n",
            "  inflating: data/train/malignant/1018.jpg  \n",
            "  inflating: data/train/malignant/102.jpg  \n",
            "  inflating: data/train/malignant/1020.jpg  \n",
            "  inflating: data/train/malignant/1021.jpg  \n",
            "  inflating: data/train/malignant/1023.jpg  \n",
            "  inflating: data/train/malignant/1024.jpg  \n",
            "  inflating: data/train/malignant/1025.jpg  \n",
            "  inflating: data/train/malignant/1028.jpg  \n",
            "  inflating: data/train/malignant/1029.jpg  \n",
            "  inflating: data/train/malignant/103.jpg  \n",
            "  inflating: data/train/malignant/1030.jpg  \n",
            "  inflating: data/train/malignant/1031.jpg  \n",
            "  inflating: data/train/malignant/1032.jpg  \n",
            "  inflating: data/train/malignant/1033.jpg  \n",
            "  inflating: data/train/malignant/1034.jpg  \n",
            "  inflating: data/train/malignant/1035.jpg  \n",
            "  inflating: data/train/malignant/1036.jpg  \n",
            "  inflating: data/train/malignant/1039.jpg  \n",
            "  inflating: data/train/malignant/104.jpg  \n",
            "  inflating: data/train/malignant/1040.jpg  \n",
            "  inflating: data/train/malignant/1041.jpg  \n",
            "  inflating: data/train/malignant/1042.jpg  \n",
            "  inflating: data/train/malignant/1043.jpg  \n",
            "  inflating: data/train/malignant/1044.jpg  \n",
            "  inflating: data/train/malignant/1045.jpg  \n",
            "  inflating: data/train/malignant/1047.jpg  \n",
            "  inflating: data/train/malignant/1048.jpg  \n",
            "  inflating: data/train/malignant/105.jpg  \n",
            "  inflating: data/train/malignant/1050.jpg  \n",
            "  inflating: data/train/malignant/1051.jpg  \n",
            "  inflating: data/train/malignant/1052.jpg  \n",
            "  inflating: data/train/malignant/1053.jpg  \n",
            "  inflating: data/train/malignant/1054.jpg  \n",
            "  inflating: data/train/malignant/1055.jpg  \n",
            "  inflating: data/train/malignant/1057.jpg  \n",
            "  inflating: data/train/malignant/1059.jpg  \n",
            "  inflating: data/train/malignant/106.jpg  \n",
            "  inflating: data/train/malignant/1060.jpg  \n",
            "  inflating: data/train/malignant/1061.jpg  \n",
            "  inflating: data/train/malignant/1062.jpg  \n",
            "  inflating: data/train/malignant/1063.jpg  \n",
            "  inflating: data/train/malignant/1064.jpg  \n",
            "  inflating: data/train/malignant/1066.jpg  \n",
            "  inflating: data/train/malignant/1067.jpg  \n",
            "  inflating: data/train/malignant/1068.jpg  \n",
            "  inflating: data/train/malignant/1069.jpg  \n",
            "  inflating: data/train/malignant/107.jpg  \n",
            "  inflating: data/train/malignant/1070.jpg  \n",
            "  inflating: data/train/malignant/1071.jpg  \n",
            "  inflating: data/train/malignant/1072.jpg  \n",
            "  inflating: data/train/malignant/1073.jpg  \n",
            "  inflating: data/train/malignant/1075.jpg  \n",
            "  inflating: data/train/malignant/1076.jpg  \n",
            "  inflating: data/train/malignant/1077.jpg  \n",
            "  inflating: data/train/malignant/1078.jpg  \n",
            "  inflating: data/train/malignant/1079.jpg  \n",
            "  inflating: data/train/malignant/108.jpg  \n",
            "  inflating: data/train/malignant/1081.jpg  \n",
            "  inflating: data/train/malignant/1082.jpg  \n",
            "  inflating: data/train/malignant/1084.jpg  \n",
            "  inflating: data/train/malignant/1085.jpg  \n",
            "  inflating: data/train/malignant/1086.jpg  \n",
            "  inflating: data/train/malignant/1087.jpg  \n",
            "  inflating: data/train/malignant/1088.jpg  \n",
            "  inflating: data/train/malignant/109.jpg  \n",
            "  inflating: data/train/malignant/1090.jpg  \n",
            "  inflating: data/train/malignant/1092.jpg  \n",
            "  inflating: data/train/malignant/1093.jpg  \n",
            "  inflating: data/train/malignant/1095.jpg  \n",
            "  inflating: data/train/malignant/1096.jpg  \n",
            "  inflating: data/train/malignant/1097.jpg  \n",
            "  inflating: data/train/malignant/1098.jpg  \n",
            "  inflating: data/train/malignant/1099.jpg  \n",
            "  inflating: data/train/malignant/11.jpg  \n",
            "  inflating: data/train/malignant/1100.jpg  \n",
            "  inflating: data/train/malignant/1101.jpg  \n",
            "  inflating: data/train/malignant/1102.jpg  \n",
            "  inflating: data/train/malignant/1103.jpg  \n",
            "  inflating: data/train/malignant/1104.jpg  \n",
            "  inflating: data/train/malignant/1105.jpg  \n",
            "  inflating: data/train/malignant/1106.jpg  \n",
            "  inflating: data/train/malignant/1107.jpg  \n",
            "  inflating: data/train/malignant/1108.jpg  \n",
            "  inflating: data/train/malignant/1109.jpg  \n",
            "  inflating: data/train/malignant/111.jpg  \n",
            "  inflating: data/train/malignant/1110.jpg  \n",
            "  inflating: data/train/malignant/1111.jpg  \n",
            "  inflating: data/train/malignant/1114.jpg  \n",
            "  inflating: data/train/malignant/1115.jpg  \n",
            "  inflating: data/train/malignant/1116.jpg  \n",
            "  inflating: data/train/malignant/1117.jpg  \n",
            "  inflating: data/train/malignant/1118.jpg  \n",
            "  inflating: data/train/malignant/112.jpg  \n",
            "  inflating: data/train/malignant/1121.jpg  \n",
            "  inflating: data/train/malignant/1122.jpg  \n",
            "  inflating: data/train/malignant/1123.jpg  \n",
            "  inflating: data/train/malignant/1124.jpg  \n",
            "  inflating: data/train/malignant/1125.jpg  \n",
            "  inflating: data/train/malignant/1126.jpg  \n",
            "  inflating: data/train/malignant/1127.jpg  \n",
            "  inflating: data/train/malignant/1129.jpg  \n",
            "  inflating: data/train/malignant/113.jpg  \n",
            "  inflating: data/train/malignant/1130.jpg  \n",
            "  inflating: data/train/malignant/1131.jpg  \n",
            "  inflating: data/train/malignant/1132.jpg  \n",
            "  inflating: data/train/malignant/1133.jpg  \n",
            "  inflating: data/train/malignant/1134.jpg  \n",
            "  inflating: data/train/malignant/1136.jpg  \n",
            "  inflating: data/train/malignant/1137.jpg  \n",
            "  inflating: data/train/malignant/1138.jpg  \n",
            "  inflating: data/train/malignant/1139.jpg  \n",
            "  inflating: data/train/malignant/114.jpg  \n",
            "  inflating: data/train/malignant/1140.jpg  \n",
            "  inflating: data/train/malignant/1142.jpg  \n",
            "  inflating: data/train/malignant/1143.jpg  \n",
            "  inflating: data/train/malignant/1144.jpg  \n",
            "  inflating: data/train/malignant/1145.jpg  \n",
            "  inflating: data/train/malignant/1146.jpg  \n",
            "  inflating: data/train/malignant/1147.jpg  \n",
            "  inflating: data/train/malignant/1148.jpg  \n",
            "  inflating: data/train/malignant/1149.jpg  \n",
            "  inflating: data/train/malignant/115.jpg  \n",
            "  inflating: data/train/malignant/1152.jpg  \n",
            "  inflating: data/train/malignant/1153.jpg  \n",
            "  inflating: data/train/malignant/1154.jpg  \n",
            "  inflating: data/train/malignant/1157.jpg  \n",
            "  inflating: data/train/malignant/1158.jpg  \n",
            "  inflating: data/train/malignant/1159.jpg  \n",
            "  inflating: data/train/malignant/116.jpg  \n",
            "  inflating: data/train/malignant/1161.jpg  \n",
            "  inflating: data/train/malignant/1162.jpg  \n",
            "  inflating: data/train/malignant/1163.jpg  \n",
            "  inflating: data/train/malignant/1165.jpg  \n",
            "  inflating: data/train/malignant/1167.jpg  \n",
            "  inflating: data/train/malignant/1168.jpg  \n",
            "  inflating: data/train/malignant/1169.jpg  \n",
            "  inflating: data/train/malignant/117.jpg  \n",
            "  inflating: data/train/malignant/1171.jpg  \n",
            "  inflating: data/train/malignant/1172.jpg  \n",
            "  inflating: data/train/malignant/1174.jpg  \n",
            "  inflating: data/train/malignant/1175.jpg  \n",
            "  inflating: data/train/malignant/1177.jpg  \n",
            "  inflating: data/train/malignant/1178.jpg  \n",
            "  inflating: data/train/malignant/1179.jpg  \n",
            "  inflating: data/train/malignant/118.jpg  \n",
            "  inflating: data/train/malignant/1180.jpg  \n",
            "  inflating: data/train/malignant/1181.jpg  \n",
            "  inflating: data/train/malignant/1182.jpg  \n",
            "  inflating: data/train/malignant/1183.jpg  \n",
            "  inflating: data/train/malignant/1184.jpg  \n",
            "  inflating: data/train/malignant/1188.jpg  \n",
            "  inflating: data/train/malignant/119.jpg  \n",
            "  inflating: data/train/malignant/1190.jpg  \n",
            "  inflating: data/train/malignant/1191.jpg  \n",
            "  inflating: data/train/malignant/1192.jpg  \n",
            "  inflating: data/train/malignant/1193.jpg  \n",
            "  inflating: data/train/malignant/1195.jpg  \n",
            "  inflating: data/train/malignant/1196.jpg  \n",
            "  inflating: data/train/malignant/1199.jpg  \n",
            "  inflating: data/train/malignant/12.jpg  \n",
            "  inflating: data/train/malignant/120.jpg  \n",
            "  inflating: data/train/malignant/1200.jpg  \n",
            "  inflating: data/train/malignant/1201.jpg  \n",
            "  inflating: data/train/malignant/1202.jpg  \n",
            "  inflating: data/train/malignant/1203.jpg  \n",
            "  inflating: data/train/malignant/1204.jpg  \n",
            "  inflating: data/train/malignant/1205.jpg  \n",
            "  inflating: data/train/malignant/1206.jpg  \n",
            "  inflating: data/train/malignant/1207.jpg  \n",
            "  inflating: data/train/malignant/1208.jpg  \n",
            "  inflating: data/train/malignant/1209.jpg  \n",
            "  inflating: data/train/malignant/121.jpg  \n",
            "  inflating: data/train/malignant/1210.jpg  \n",
            "  inflating: data/train/malignant/1212.jpg  \n",
            "  inflating: data/train/malignant/1213.jpg  \n",
            "  inflating: data/train/malignant/1214.jpg  \n",
            "  inflating: data/train/malignant/1217.jpg  \n",
            "  inflating: data/train/malignant/1219.jpg  \n",
            "  inflating: data/train/malignant/122.jpg  \n",
            "  inflating: data/train/malignant/1222.jpg  \n",
            "  inflating: data/train/malignant/1223.jpg  \n",
            "  inflating: data/train/malignant/1224.jpg  \n",
            "  inflating: data/train/malignant/1225.jpg  \n",
            "  inflating: data/train/malignant/1226.jpg  \n",
            "  inflating: data/train/malignant/123.jpg  \n",
            "  inflating: data/train/malignant/1230.jpg  \n",
            "  inflating: data/train/malignant/1231.jpg  \n",
            "  inflating: data/train/malignant/1232.jpg  \n",
            "  inflating: data/train/malignant/1233.jpg  \n",
            "  inflating: data/train/malignant/1235.jpg  \n",
            "  inflating: data/train/malignant/1236.jpg  \n",
            "  inflating: data/train/malignant/1237.jpg  \n",
            "  inflating: data/train/malignant/1239.jpg  \n",
            "  inflating: data/train/malignant/124.jpg  \n",
            "  inflating: data/train/malignant/1240.jpg  \n",
            "  inflating: data/train/malignant/1241.jpg  \n",
            "  inflating: data/train/malignant/1243.jpg  \n",
            "  inflating: data/train/malignant/1244.jpg  \n",
            "  inflating: data/train/malignant/1245.jpg  \n",
            "  inflating: data/train/malignant/1246.jpg  \n",
            "  inflating: data/train/malignant/1247.jpg  \n",
            "  inflating: data/train/malignant/1248.jpg  \n",
            "  inflating: data/train/malignant/1249.jpg  \n",
            "  inflating: data/train/malignant/125.jpg  \n",
            "  inflating: data/train/malignant/1250.jpg  \n",
            "  inflating: data/train/malignant/1252.jpg  \n",
            "  inflating: data/train/malignant/1253.jpg  \n",
            "  inflating: data/train/malignant/1255.jpg  \n",
            "  inflating: data/train/malignant/1257.jpg  \n",
            "  inflating: data/train/malignant/1258.jpg  \n",
            "  inflating: data/train/malignant/1259.jpg  \n",
            "  inflating: data/train/malignant/126.jpg  \n",
            "  inflating: data/train/malignant/1260.jpg  \n",
            "  inflating: data/train/malignant/1261.jpg  \n",
            "  inflating: data/train/malignant/1263.jpg  \n",
            "  inflating: data/train/malignant/1264.jpg  \n",
            "  inflating: data/train/malignant/1265.jpg  \n",
            "  inflating: data/train/malignant/1269.jpg  \n",
            "  inflating: data/train/malignant/127.jpg  \n",
            "  inflating: data/train/malignant/1270.jpg  \n",
            "  inflating: data/train/malignant/1271.jpg  \n",
            "  inflating: data/train/malignant/1272.jpg  \n",
            "  inflating: data/train/malignant/1273.jpg  \n",
            "  inflating: data/train/malignant/1274.jpg  \n",
            "  inflating: data/train/malignant/1275.jpg  \n",
            "  inflating: data/train/malignant/1276.jpg  \n",
            "  inflating: data/train/malignant/1277.jpg  \n",
            "  inflating: data/train/malignant/1278.jpg  \n",
            "  inflating: data/train/malignant/1279.jpg  \n",
            "  inflating: data/train/malignant/128.jpg  \n",
            "  inflating: data/train/malignant/1281.jpg  \n",
            "  inflating: data/train/malignant/1282.jpg  \n",
            "  inflating: data/train/malignant/1283.jpg  \n",
            "  inflating: data/train/malignant/1284.jpg  \n",
            "  inflating: data/train/malignant/1285.jpg  \n",
            "  inflating: data/train/malignant/1287.jpg  \n",
            "  inflating: data/train/malignant/1288.jpg  \n",
            "  inflating: data/train/malignant/1290.jpg  \n",
            "  inflating: data/train/malignant/1291.jpg  \n",
            "  inflating: data/train/malignant/1293.jpg  \n",
            "  inflating: data/train/malignant/1294.jpg  \n",
            "  inflating: data/train/malignant/1296.jpg  \n",
            "  inflating: data/train/malignant/1298.jpg  \n",
            "  inflating: data/train/malignant/1299.jpg  \n",
            "  inflating: data/train/malignant/130.jpg  \n",
            "  inflating: data/train/malignant/1301.jpg  \n",
            "  inflating: data/train/malignant/1302.jpg  \n",
            "  inflating: data/train/malignant/1303.jpg  \n",
            "  inflating: data/train/malignant/1304.jpg  \n",
            "  inflating: data/train/malignant/1305.jpg  \n",
            "  inflating: data/train/malignant/1306.jpg  \n",
            "  inflating: data/train/malignant/1307.jpg  \n",
            "  inflating: data/train/malignant/1308.jpg  \n",
            "  inflating: data/train/malignant/1309.jpg  \n",
            "  inflating: data/train/malignant/131.jpg  \n",
            "  inflating: data/train/malignant/1311.jpg  \n",
            "  inflating: data/train/malignant/1312.jpg  \n",
            "  inflating: data/train/malignant/1313.jpg  \n",
            "  inflating: data/train/malignant/1314.jpg  \n",
            "  inflating: data/train/malignant/1315.jpg  \n",
            "  inflating: data/train/malignant/1316.jpg  \n",
            "  inflating: data/train/malignant/1317.jpg  \n",
            "  inflating: data/train/malignant/1318.jpg  \n",
            "  inflating: data/train/malignant/1319.jpg  \n",
            "  inflating: data/train/malignant/132.jpg  \n",
            "  inflating: data/train/malignant/1321.jpg  \n",
            "  inflating: data/train/malignant/1323.jpg  \n",
            "  inflating: data/train/malignant/1324.jpg  \n",
            "  inflating: data/train/malignant/1325.jpg  \n",
            "  inflating: data/train/malignant/1326.jpg  \n",
            "  inflating: data/train/malignant/1327.jpg  \n",
            "  inflating: data/train/malignant/1328.jpg  \n",
            "  inflating: data/train/malignant/1329.jpg  \n",
            "  inflating: data/train/malignant/133.jpg  \n",
            "  inflating: data/train/malignant/1331.jpg  \n",
            "  inflating: data/train/malignant/1332.jpg  \n",
            "  inflating: data/train/malignant/1334.jpg  \n",
            "  inflating: data/train/malignant/1335.jpg  \n",
            "  inflating: data/train/malignant/1337.jpg  \n",
            "  inflating: data/train/malignant/1338.jpg  \n",
            "  inflating: data/train/malignant/134.jpg  \n",
            "  inflating: data/train/malignant/1340.jpg  \n",
            "  inflating: data/train/malignant/1341.jpg  \n",
            "  inflating: data/train/malignant/1343.jpg  \n",
            "  inflating: data/train/malignant/1344.jpg  \n",
            "  inflating: data/train/malignant/1345.jpg  \n",
            "  inflating: data/train/malignant/1346.jpg  \n",
            "  inflating: data/train/malignant/1348.jpg  \n",
            "  inflating: data/train/malignant/1349.jpg  \n",
            "  inflating: data/train/malignant/135.jpg  \n",
            "  inflating: data/train/malignant/1350.jpg  \n",
            "  inflating: data/train/malignant/1351.jpg  \n",
            "  inflating: data/train/malignant/1352.jpg  \n",
            "  inflating: data/train/malignant/1353.jpg  \n",
            "  inflating: data/train/malignant/1356.jpg  \n",
            "  inflating: data/train/malignant/1357.jpg  \n",
            "  inflating: data/train/malignant/136.jpg  \n",
            "  inflating: data/train/malignant/1360.jpg  \n",
            "  inflating: data/train/malignant/1361.jpg  \n",
            "  inflating: data/train/malignant/1362.jpg  \n",
            "  inflating: data/train/malignant/1363.jpg  \n",
            "  inflating: data/train/malignant/1365.jpg  \n",
            "  inflating: data/train/malignant/1367.jpg  \n",
            "  inflating: data/train/malignant/1368.jpg  \n",
            "  inflating: data/train/malignant/1369.jpg  \n",
            "  inflating: data/train/malignant/137.jpg  \n",
            "  inflating: data/train/malignant/1371.jpg  \n",
            "  inflating: data/train/malignant/1372.jpg  \n",
            "  inflating: data/train/malignant/1373.jpg  \n",
            "  inflating: data/train/malignant/1375.jpg  \n",
            "  inflating: data/train/malignant/1376.jpg  \n",
            "  inflating: data/train/malignant/1377.jpg  \n",
            "  inflating: data/train/malignant/138.jpg  \n",
            "  inflating: data/train/malignant/1381.jpg  \n",
            "  inflating: data/train/malignant/1384.jpg  \n",
            "  inflating: data/train/malignant/1385.jpg  \n",
            "  inflating: data/train/malignant/1386.jpg  \n",
            "  inflating: data/train/malignant/1387.jpg  \n",
            "  inflating: data/train/malignant/1388.jpg  \n",
            "  inflating: data/train/malignant/1389.jpg  \n",
            "  inflating: data/train/malignant/1390.jpg  \n",
            "  inflating: data/train/malignant/1391.jpg  \n",
            "  inflating: data/train/malignant/1392.jpg  \n",
            "  inflating: data/train/malignant/1393.jpg  \n",
            "  inflating: data/train/malignant/1394.jpg  \n",
            "  inflating: data/train/malignant/1396.jpg  \n",
            "  inflating: data/train/malignant/1397.jpg  \n",
            "  inflating: data/train/malignant/1398.jpg  \n",
            "  inflating: data/train/malignant/1399.jpg  \n",
            "  inflating: data/train/malignant/14.jpg  \n",
            "  inflating: data/train/malignant/140.jpg  \n",
            "  inflating: data/train/malignant/1400.jpg  \n",
            "  inflating: data/train/malignant/1403.jpg  \n",
            "  inflating: data/train/malignant/1404.jpg  \n",
            "  inflating: data/train/malignant/1405.jpg  \n",
            "  inflating: data/train/malignant/1406.jpg  \n",
            "  inflating: data/train/malignant/1407.jpg  \n",
            "  inflating: data/train/malignant/1408.jpg  \n",
            "  inflating: data/train/malignant/1409.jpg  \n",
            "  inflating: data/train/malignant/141.jpg  \n",
            "  inflating: data/train/malignant/1410.jpg  \n",
            "  inflating: data/train/malignant/1411.jpg  \n",
            "  inflating: data/train/malignant/1412.jpg  \n",
            "  inflating: data/train/malignant/1413.jpg  \n",
            "  inflating: data/train/malignant/1414.jpg  \n",
            "  inflating: data/train/malignant/1415.jpg  \n",
            "  inflating: data/train/malignant/1416.jpg  \n",
            "  inflating: data/train/malignant/1418.jpg  \n",
            "  inflating: data/train/malignant/1419.jpg  \n",
            "  inflating: data/train/malignant/142.jpg  \n",
            "  inflating: data/train/malignant/1420.jpg  \n",
            "  inflating: data/train/malignant/1421.jpg  \n",
            "  inflating: data/train/malignant/1423.jpg  \n",
            "  inflating: data/train/malignant/1424.jpg  \n",
            "  inflating: data/train/malignant/1426.jpg  \n",
            "  inflating: data/train/malignant/1428.jpg  \n",
            "  inflating: data/train/malignant/1429.jpg  \n",
            "  inflating: data/train/malignant/143.jpg  \n",
            "  inflating: data/train/malignant/1431.jpg  \n",
            "  inflating: data/train/malignant/1432.jpg  \n",
            "  inflating: data/train/malignant/1433.jpg  \n",
            "  inflating: data/train/malignant/1434.jpg  \n",
            "  inflating: data/train/malignant/1435.jpg  \n",
            "  inflating: data/train/malignant/1437.jpg  \n",
            "  inflating: data/train/malignant/1439.jpg  \n",
            "  inflating: data/train/malignant/144.jpg  \n",
            "  inflating: data/train/malignant/1440.jpg  \n",
            "  inflating: data/train/malignant/1441.jpg  \n",
            "  inflating: data/train/malignant/1442.jpg  \n",
            "  inflating: data/train/malignant/1444.jpg  \n",
            "  inflating: data/train/malignant/1445.jpg  \n",
            "  inflating: data/train/malignant/1446.jpg  \n",
            "  inflating: data/train/malignant/1448.jpg  \n",
            "  inflating: data/train/malignant/1449.jpg  \n",
            "  inflating: data/train/malignant/145.jpg  \n",
            "  inflating: data/train/malignant/1450.jpg  \n",
            "  inflating: data/train/malignant/1452.jpg  \n",
            "  inflating: data/train/malignant/1453.jpg  \n",
            "  inflating: data/train/malignant/1454.jpg  \n",
            "  inflating: data/train/malignant/1455.jpg  \n",
            "  inflating: data/train/malignant/1456.jpg  \n",
            "  inflating: data/train/malignant/1457.jpg  \n",
            "  inflating: data/train/malignant/1458.jpg  \n",
            "  inflating: data/train/malignant/1459.jpg  \n",
            "  inflating: data/train/malignant/146.jpg  \n",
            "  inflating: data/train/malignant/1460.jpg  \n",
            "  inflating: data/train/malignant/1462.jpg  \n",
            "  inflating: data/train/malignant/1463.jpg  \n",
            "  inflating: data/train/malignant/1465.jpg  \n",
            "  inflating: data/train/malignant/1466.jpg  \n",
            "  inflating: data/train/malignant/1467.jpg  \n",
            "  inflating: data/train/malignant/1468.jpg  \n",
            "  inflating: data/train/malignant/1469.jpg  \n",
            "  inflating: data/train/malignant/147.jpg  \n",
            "  inflating: data/train/malignant/1470.jpg  \n",
            "  inflating: data/train/malignant/1471.jpg  \n",
            "  inflating: data/train/malignant/1472.jpg  \n",
            "  inflating: data/train/malignant/1473.jpg  \n",
            "  inflating: data/train/malignant/1474.jpg  \n",
            "  inflating: data/train/malignant/1475.jpg  \n",
            "  inflating: data/train/malignant/1476.jpg  \n",
            "  inflating: data/train/malignant/1477.jpg  \n",
            "  inflating: data/train/malignant/1478.jpg  \n",
            "  inflating: data/train/malignant/1479.jpg  \n",
            "  inflating: data/train/malignant/148.jpg  \n",
            "  inflating: data/train/malignant/1480.jpg  \n",
            "  inflating: data/train/malignant/1481.jpg  \n",
            "  inflating: data/train/malignant/1482.jpg  \n",
            "  inflating: data/train/malignant/1483.jpg  \n",
            "  inflating: data/train/malignant/1485.jpg  \n",
            "  inflating: data/train/malignant/1486.jpg  \n",
            "  inflating: data/train/malignant/1487.jpg  \n",
            "  inflating: data/train/malignant/1488.jpg  \n",
            "  inflating: data/train/malignant/149.jpg  \n",
            "  inflating: data/train/malignant/1490.jpg  \n",
            "  inflating: data/train/malignant/1491.jpg  \n",
            "  inflating: data/train/malignant/1492.jpg  \n",
            "  inflating: data/train/malignant/1493.jpg  \n",
            "  inflating: data/train/malignant/1494.jpg  \n",
            "  inflating: data/train/malignant/1496.jpg  \n",
            "  inflating: data/train/malignant/1497.jpg  \n",
            "  inflating: data/train/malignant/1498.jpg  \n",
            "  inflating: data/train/malignant/15.jpg  \n",
            "  inflating: data/train/malignant/150.jpg  \n",
            "  inflating: data/train/malignant/1500.jpg  \n",
            "  inflating: data/train/malignant/151.jpg  \n",
            "  inflating: data/train/malignant/152.jpg  \n",
            "  inflating: data/train/malignant/153.jpg  \n",
            "  inflating: data/train/malignant/154.jpg  \n",
            "  inflating: data/train/malignant/155.jpg  \n",
            "  inflating: data/train/malignant/157.jpg  \n",
            "  inflating: data/train/malignant/158.jpg  \n",
            "  inflating: data/train/malignant/159.jpg  \n",
            "  inflating: data/train/malignant/16.jpg  \n",
            "  inflating: data/train/malignant/160.jpg  \n",
            "  inflating: data/train/malignant/162.jpg  \n",
            "  inflating: data/train/malignant/163.jpg  \n",
            "  inflating: data/train/malignant/164.jpg  \n",
            "  inflating: data/train/malignant/165.jpg  \n",
            "  inflating: data/train/malignant/166.jpg  \n",
            "  inflating: data/train/malignant/167.jpg  \n",
            "  inflating: data/train/malignant/168.jpg  \n",
            "  inflating: data/train/malignant/169.jpg  \n",
            "  inflating: data/train/malignant/170.jpg  \n",
            "  inflating: data/train/malignant/171.jpg  \n",
            "  inflating: data/train/malignant/172.jpg  \n",
            "  inflating: data/train/malignant/174.jpg  \n",
            "  inflating: data/train/malignant/175.jpg  \n",
            "  inflating: data/train/malignant/176.jpg  \n",
            "  inflating: data/train/malignant/177.jpg  \n",
            "  inflating: data/train/malignant/178.jpg  \n",
            "  inflating: data/train/malignant/18.jpg  \n",
            "  inflating: data/train/malignant/180.jpg  \n",
            "  inflating: data/train/malignant/181.jpg  \n",
            "  inflating: data/train/malignant/183.jpg  \n",
            "  inflating: data/train/malignant/187.jpg  \n",
            "  inflating: data/train/malignant/188.jpg  \n",
            "  inflating: data/train/malignant/189.jpg  \n",
            "  inflating: data/train/malignant/19.jpg  \n",
            "  inflating: data/train/malignant/191.jpg  \n",
            "  inflating: data/train/malignant/192.jpg  \n",
            "  inflating: data/train/malignant/194.jpg  \n",
            "  inflating: data/train/malignant/197.jpg  \n",
            "  inflating: data/train/malignant/198.jpg  \n",
            "  inflating: data/train/malignant/199.jpg  \n",
            "  inflating: data/train/malignant/2.jpg  \n",
            "  inflating: data/train/malignant/20.jpg  \n",
            "  inflating: data/train/malignant/201.jpg  \n",
            "  inflating: data/train/malignant/202.jpg  \n",
            "  inflating: data/train/malignant/203.jpg  \n",
            "  inflating: data/train/malignant/204.jpg  \n",
            "  inflating: data/train/malignant/205.jpg  \n",
            "  inflating: data/train/malignant/206.jpg  \n",
            "  inflating: data/train/malignant/207.jpg  \n",
            "  inflating: data/train/malignant/209.jpg  \n",
            "  inflating: data/train/malignant/21.jpg  \n",
            "  inflating: data/train/malignant/210.jpg  \n",
            "  inflating: data/train/malignant/211.jpg  \n",
            "  inflating: data/train/malignant/212.jpg  \n",
            "  inflating: data/train/malignant/213.jpg  \n",
            "  inflating: data/train/malignant/214.jpg  \n",
            "  inflating: data/train/malignant/215.jpg  \n",
            "  inflating: data/train/malignant/216.jpg  \n",
            "  inflating: data/train/malignant/217.jpg  \n",
            "  inflating: data/train/malignant/218.jpg  \n",
            "  inflating: data/train/malignant/219.jpg  \n",
            "  inflating: data/train/malignant/22.jpg  \n",
            "  inflating: data/train/malignant/220.jpg  \n",
            "  inflating: data/train/malignant/221.jpg  \n",
            "  inflating: data/train/malignant/222.jpg  \n",
            "  inflating: data/train/malignant/223.jpg  \n",
            "  inflating: data/train/malignant/224.jpg  \n",
            "  inflating: data/train/malignant/225.jpg  \n",
            "  inflating: data/train/malignant/226.jpg  \n",
            "  inflating: data/train/malignant/227.jpg  \n",
            "  inflating: data/train/malignant/228.jpg  \n",
            "  inflating: data/train/malignant/229.jpg  \n",
            "  inflating: data/train/malignant/23.jpg  \n",
            "  inflating: data/train/malignant/230.jpg  \n",
            "  inflating: data/train/malignant/233.jpg  \n",
            "  inflating: data/train/malignant/234.jpg  \n",
            "  inflating: data/train/malignant/235.jpg  \n",
            "  inflating: data/train/malignant/236.jpg  \n",
            "  inflating: data/train/malignant/239.jpg  \n",
            "  inflating: data/train/malignant/240.jpg  \n",
            "  inflating: data/train/malignant/241.jpg  \n",
            "  inflating: data/train/malignant/242.jpg  \n",
            "  inflating: data/train/malignant/243.jpg  \n",
            "  inflating: data/train/malignant/244.jpg  \n",
            "  inflating: data/train/malignant/245.jpg  \n",
            "  inflating: data/train/malignant/246.jpg  \n",
            "  inflating: data/train/malignant/248.jpg  \n",
            "  inflating: data/train/malignant/249.jpg  \n",
            "  inflating: data/train/malignant/25.jpg  \n",
            "  inflating: data/train/malignant/250.jpg  \n",
            "  inflating: data/train/malignant/251.jpg  \n",
            "  inflating: data/train/malignant/252.jpg  \n",
            "  inflating: data/train/malignant/253.jpg  \n",
            "  inflating: data/train/malignant/254.jpg  \n",
            "  inflating: data/train/malignant/255.jpg  \n",
            "  inflating: data/train/malignant/259.jpg  \n",
            "  inflating: data/train/malignant/26.jpg  \n",
            "  inflating: data/train/malignant/261.jpg  \n",
            "  inflating: data/train/malignant/262.jpg  \n",
            "  inflating: data/train/malignant/263.jpg  \n",
            "  inflating: data/train/malignant/264.jpg  \n",
            "  inflating: data/train/malignant/265.jpg  \n",
            "  inflating: data/train/malignant/266.jpg  \n",
            "  inflating: data/train/malignant/267.jpg  \n",
            "  inflating: data/train/malignant/268.jpg  \n",
            "  inflating: data/train/malignant/269.jpg  \n",
            "  inflating: data/train/malignant/27.jpg  \n",
            "  inflating: data/train/malignant/270.jpg  \n",
            "  inflating: data/train/malignant/271.jpg  \n",
            "  inflating: data/train/malignant/272.jpg  \n",
            "  inflating: data/train/malignant/273.jpg  \n",
            "  inflating: data/train/malignant/274.jpg  \n",
            "  inflating: data/train/malignant/277.jpg  \n",
            "  inflating: data/train/malignant/278.jpg  \n",
            "  inflating: data/train/malignant/279.jpg  \n",
            "  inflating: data/train/malignant/28.jpg  \n",
            "  inflating: data/train/malignant/280.jpg  \n",
            "  inflating: data/train/malignant/281.jpg  \n",
            "  inflating: data/train/malignant/282.jpg  \n",
            "  inflating: data/train/malignant/283.jpg  \n",
            "  inflating: data/train/malignant/284.jpg  \n",
            "  inflating: data/train/malignant/285.jpg  \n",
            "  inflating: data/train/malignant/286.jpg  \n",
            "  inflating: data/train/malignant/287.jpg  \n",
            "  inflating: data/train/malignant/288.jpg  \n",
            "  inflating: data/train/malignant/289.jpg  \n",
            "  inflating: data/train/malignant/29.jpg  \n",
            "  inflating: data/train/malignant/290.jpg  \n",
            "  inflating: data/train/malignant/291.jpg  \n",
            "  inflating: data/train/malignant/292.jpg  \n",
            "  inflating: data/train/malignant/293.jpg  \n",
            "  inflating: data/train/malignant/294.jpg  \n",
            "  inflating: data/train/malignant/295.jpg  \n",
            "  inflating: data/train/malignant/296.jpg  \n",
            "  inflating: data/train/malignant/297.jpg  \n",
            "  inflating: data/train/malignant/298.jpg  \n",
            "  inflating: data/train/malignant/299.jpg  \n",
            "  inflating: data/train/malignant/30.jpg  \n",
            "  inflating: data/train/malignant/300.jpg  \n",
            "  inflating: data/train/malignant/301.jpg  \n",
            "  inflating: data/train/malignant/302.jpg  \n",
            "  inflating: data/train/malignant/304.jpg  \n",
            "  inflating: data/train/malignant/305.jpg  \n",
            "  inflating: data/train/malignant/306.jpg  \n",
            "  inflating: data/train/malignant/308.jpg  \n",
            "  inflating: data/train/malignant/309.jpg  \n",
            "  inflating: data/train/malignant/31.jpg  \n",
            "  inflating: data/train/malignant/311.jpg  \n",
            "  inflating: data/train/malignant/312.jpg  \n",
            "  inflating: data/train/malignant/313.jpg  \n",
            "  inflating: data/train/malignant/314.jpg  \n",
            "  inflating: data/train/malignant/315.jpg  \n",
            "  inflating: data/train/malignant/316.jpg  \n",
            "  inflating: data/train/malignant/319.jpg  \n",
            "  inflating: data/train/malignant/32.jpg  \n",
            "  inflating: data/train/malignant/320.jpg  \n",
            "  inflating: data/train/malignant/321.jpg  \n",
            "  inflating: data/train/malignant/323.jpg  \n",
            "  inflating: data/train/malignant/324.jpg  \n",
            "  inflating: data/train/malignant/325.jpg  \n",
            "  inflating: data/train/malignant/326.jpg  \n",
            "  inflating: data/train/malignant/327.jpg  \n",
            "  inflating: data/train/malignant/328.jpg  \n",
            "  inflating: data/train/malignant/329.jpg  \n",
            "  inflating: data/train/malignant/330.jpg  \n",
            "  inflating: data/train/malignant/331.jpg  \n",
            "  inflating: data/train/malignant/332.jpg  \n",
            "  inflating: data/train/malignant/333.jpg  \n",
            "  inflating: data/train/malignant/334.jpg  \n",
            "  inflating: data/train/malignant/335.jpg  \n",
            "  inflating: data/train/malignant/336.jpg  \n",
            "  inflating: data/train/malignant/337.jpg  \n",
            "  inflating: data/train/malignant/339.jpg  \n",
            "  inflating: data/train/malignant/34.jpg  \n",
            "  inflating: data/train/malignant/340.jpg  \n",
            "  inflating: data/train/malignant/341.jpg  \n",
            "  inflating: data/train/malignant/344.jpg  \n",
            "  inflating: data/train/malignant/345.jpg  \n",
            "  inflating: data/train/malignant/346.jpg  \n",
            "  inflating: data/train/malignant/347.jpg  \n",
            "  inflating: data/train/malignant/349.jpg  \n",
            "  inflating: data/train/malignant/35.jpg  \n",
            "  inflating: data/train/malignant/350.jpg  \n",
            "  inflating: data/train/malignant/351.jpg  \n",
            "  inflating: data/train/malignant/352.jpg  \n",
            "  inflating: data/train/malignant/353.jpg  \n",
            "  inflating: data/train/malignant/354.jpg  \n",
            "  inflating: data/train/malignant/357.jpg  \n",
            "  inflating: data/train/malignant/358.jpg  \n",
            "  inflating: data/train/malignant/359.jpg  \n",
            "  inflating: data/train/malignant/36.jpg  \n",
            "  inflating: data/train/malignant/361.jpg  \n",
            "  inflating: data/train/malignant/362.jpg  \n",
            "  inflating: data/train/malignant/363.jpg  \n",
            "  inflating: data/train/malignant/365.jpg  \n",
            "  inflating: data/train/malignant/366.jpg  \n",
            "  inflating: data/train/malignant/367.jpg  \n",
            "  inflating: data/train/malignant/368.jpg  \n",
            "  inflating: data/train/malignant/369.jpg  \n",
            "  inflating: data/train/malignant/37.jpg  \n",
            "  inflating: data/train/malignant/370.jpg  \n",
            "  inflating: data/train/malignant/371.jpg  \n",
            "  inflating: data/train/malignant/372.jpg  \n",
            "  inflating: data/train/malignant/373.jpg  \n",
            "  inflating: data/train/malignant/374.jpg  \n",
            "  inflating: data/train/malignant/376.jpg  \n",
            "  inflating: data/train/malignant/377.jpg  \n",
            "  inflating: data/train/malignant/378.jpg  \n",
            "  inflating: data/train/malignant/379.jpg  \n",
            "  inflating: data/train/malignant/38.jpg  \n",
            "  inflating: data/train/malignant/380.jpg  \n",
            "  inflating: data/train/malignant/383.jpg  \n",
            "  inflating: data/train/malignant/385.jpg  \n",
            "  inflating: data/train/malignant/386.jpg  \n",
            "  inflating: data/train/malignant/387.jpg  \n",
            "  inflating: data/train/malignant/388.jpg  \n",
            "  inflating: data/train/malignant/391.jpg  \n",
            "  inflating: data/train/malignant/392.jpg  \n",
            "  inflating: data/train/malignant/393.jpg  \n",
            "  inflating: data/train/malignant/395.jpg  \n",
            "  inflating: data/train/malignant/396.jpg  \n",
            "  inflating: data/train/malignant/397.jpg  \n",
            "  inflating: data/train/malignant/398.jpg  \n",
            "  inflating: data/train/malignant/40.jpg  \n",
            "  inflating: data/train/malignant/400.jpg  \n",
            "  inflating: data/train/malignant/401.jpg  \n",
            "  inflating: data/train/malignant/403.jpg  \n",
            "  inflating: data/train/malignant/404.jpg  \n",
            "  inflating: data/train/malignant/406.jpg  \n",
            "  inflating: data/train/malignant/408.jpg  \n",
            "  inflating: data/train/malignant/41.jpg  \n",
            "  inflating: data/train/malignant/410.jpg  \n",
            "  inflating: data/train/malignant/411.jpg  \n",
            "  inflating: data/train/malignant/412.jpg  \n",
            "  inflating: data/train/malignant/413.jpg  \n",
            "  inflating: data/train/malignant/414.jpg  \n",
            "  inflating: data/train/malignant/415.jpg  \n",
            "  inflating: data/train/malignant/416.jpg  \n",
            "  inflating: data/train/malignant/417.jpg  \n",
            "  inflating: data/train/malignant/418.jpg  \n",
            "  inflating: data/train/malignant/42.jpg  \n",
            "  inflating: data/train/malignant/420.jpg  \n",
            "  inflating: data/train/malignant/422.jpg  \n",
            "  inflating: data/train/malignant/423.jpg  \n",
            "  inflating: data/train/malignant/425.jpg  \n",
            "  inflating: data/train/malignant/427.jpg  \n",
            "  inflating: data/train/malignant/429.jpg  \n",
            "  inflating: data/train/malignant/43.jpg  \n",
            "  inflating: data/train/malignant/431.jpg  \n",
            "  inflating: data/train/malignant/432.jpg  \n",
            "  inflating: data/train/malignant/433.jpg  \n",
            "  inflating: data/train/malignant/434.jpg  \n",
            "  inflating: data/train/malignant/435.jpg  \n",
            "  inflating: data/train/malignant/438.jpg  \n",
            "  inflating: data/train/malignant/439.jpg  \n",
            "  inflating: data/train/malignant/440.jpg  \n",
            "  inflating: data/train/malignant/441.jpg  \n",
            "  inflating: data/train/malignant/442.jpg  \n",
            "  inflating: data/train/malignant/443.jpg  \n",
            "  inflating: data/train/malignant/444.jpg  \n",
            "  inflating: data/train/malignant/446.jpg  \n",
            "  inflating: data/train/malignant/447.jpg  \n",
            "  inflating: data/train/malignant/448.jpg  \n",
            "  inflating: data/train/malignant/449.jpg  \n",
            "  inflating: data/train/malignant/45.jpg  \n",
            "  inflating: data/train/malignant/451.jpg  \n",
            "  inflating: data/train/malignant/452.jpg  \n",
            "  inflating: data/train/malignant/453.jpg  \n",
            "  inflating: data/train/malignant/454.jpg  \n",
            "  inflating: data/train/malignant/455.jpg  \n",
            "  inflating: data/train/malignant/456.jpg  \n",
            "  inflating: data/train/malignant/457.jpg  \n",
            "  inflating: data/train/malignant/458.jpg  \n",
            "  inflating: data/train/malignant/460.jpg  \n",
            "  inflating: data/train/malignant/461.jpg  \n",
            "  inflating: data/train/malignant/462.jpg  \n",
            "  inflating: data/train/malignant/464.jpg  \n",
            "  inflating: data/train/malignant/465.jpg  \n",
            "  inflating: data/train/malignant/466.jpg  \n",
            "  inflating: data/train/malignant/467.jpg  \n",
            "  inflating: data/train/malignant/468.jpg  \n",
            "  inflating: data/train/malignant/469.jpg  \n",
            "  inflating: data/train/malignant/47.jpg  \n",
            "  inflating: data/train/malignant/470.jpg  \n",
            "  inflating: data/train/malignant/471.jpg  \n",
            "  inflating: data/train/malignant/472.jpg  \n",
            "  inflating: data/train/malignant/473.jpg  \n",
            "  inflating: data/train/malignant/475.jpg  \n",
            "  inflating: data/train/malignant/476.jpg  \n",
            "  inflating: data/train/malignant/477.jpg  \n",
            "  inflating: data/train/malignant/478.jpg  \n",
            "  inflating: data/train/malignant/48.jpg  \n",
            "  inflating: data/train/malignant/480.jpg  \n",
            "  inflating: data/train/malignant/481.jpg  \n",
            "  inflating: data/train/malignant/482.jpg  \n",
            "  inflating: data/train/malignant/484.jpg  \n",
            "  inflating: data/train/malignant/485.jpg  \n",
            "  inflating: data/train/malignant/486.jpg  \n",
            "  inflating: data/train/malignant/487.jpg  \n",
            "  inflating: data/train/malignant/488.jpg  \n",
            "  inflating: data/train/malignant/489.jpg  \n",
            "  inflating: data/train/malignant/49.jpg  \n",
            "  inflating: data/train/malignant/490.jpg  \n",
            "  inflating: data/train/malignant/491.jpg  \n",
            "  inflating: data/train/malignant/492.jpg  \n",
            "  inflating: data/train/malignant/493.jpg  \n",
            "  inflating: data/train/malignant/494.jpg  \n",
            "  inflating: data/train/malignant/495.jpg  \n",
            "  inflating: data/train/malignant/496.jpg  \n",
            "  inflating: data/train/malignant/497.jpg  \n",
            "  inflating: data/train/malignant/498.jpg  \n",
            "  inflating: data/train/malignant/499.jpg  \n",
            "  inflating: data/train/malignant/5.jpg  \n",
            "  inflating: data/train/malignant/50.jpg  \n",
            "  inflating: data/train/malignant/500.jpg  \n",
            "  inflating: data/train/malignant/502.jpg  \n",
            "  inflating: data/train/malignant/503.jpg  \n",
            "  inflating: data/train/malignant/505.jpg  \n",
            "  inflating: data/train/malignant/506.jpg  \n",
            "  inflating: data/train/malignant/509.jpg  \n",
            "  inflating: data/train/malignant/51.jpg  \n",
            "  inflating: data/train/malignant/510.jpg  \n",
            "  inflating: data/train/malignant/512.jpg  \n",
            "  inflating: data/train/malignant/513.jpg  \n",
            "  inflating: data/train/malignant/514.jpg  \n",
            "  inflating: data/train/malignant/515.jpg  \n",
            "  inflating: data/train/malignant/516.jpg  \n",
            "  inflating: data/train/malignant/517.jpg  \n",
            "  inflating: data/train/malignant/518.jpg  \n",
            "  inflating: data/train/malignant/520.jpg  \n",
            "  inflating: data/train/malignant/521.jpg  \n",
            "  inflating: data/train/malignant/522.jpg  \n",
            "  inflating: data/train/malignant/523.jpg  \n",
            "  inflating: data/train/malignant/524.jpg  \n",
            "  inflating: data/train/malignant/525.jpg  \n",
            "  inflating: data/train/malignant/526.jpg  \n",
            "  inflating: data/train/malignant/527.jpg  \n",
            "  inflating: data/train/malignant/529.jpg  \n",
            "  inflating: data/train/malignant/53.jpg  \n",
            "  inflating: data/train/malignant/530.jpg  \n",
            "  inflating: data/train/malignant/531.jpg  \n",
            "  inflating: data/train/malignant/532.jpg  \n",
            "  inflating: data/train/malignant/533.jpg  \n",
            "  inflating: data/train/malignant/534.jpg  \n",
            "  inflating: data/train/malignant/535.jpg  \n",
            "  inflating: data/train/malignant/537.jpg  \n",
            "  inflating: data/train/malignant/538.jpg  \n",
            "  inflating: data/train/malignant/539.jpg  \n",
            "  inflating: data/train/malignant/540.jpg  \n",
            "  inflating: data/train/malignant/541.jpg  \n",
            "  inflating: data/train/malignant/542.jpg  \n",
            "  inflating: data/train/malignant/543.jpg  \n",
            "  inflating: data/train/malignant/544.jpg  \n",
            "  inflating: data/train/malignant/545.jpg  \n",
            "  inflating: data/train/malignant/547.jpg  \n",
            "  inflating: data/train/malignant/548.jpg  \n",
            "  inflating: data/train/malignant/549.jpg  \n",
            "  inflating: data/train/malignant/55.jpg  \n",
            "  inflating: data/train/malignant/550.jpg  \n",
            "  inflating: data/train/malignant/551.jpg  \n",
            "  inflating: data/train/malignant/552.jpg  \n",
            "  inflating: data/train/malignant/553.jpg  \n",
            "  inflating: data/train/malignant/555.jpg  \n",
            "  inflating: data/train/malignant/557.jpg  \n",
            "  inflating: data/train/malignant/558.jpg  \n",
            "  inflating: data/train/malignant/559.jpg  \n",
            "  inflating: data/train/malignant/56.jpg  \n",
            "  inflating: data/train/malignant/560.jpg  \n",
            "  inflating: data/train/malignant/561.jpg  \n",
            "  inflating: data/train/malignant/563.jpg  \n",
            "  inflating: data/train/malignant/564.jpg  \n",
            "  inflating: data/train/malignant/565.jpg  \n",
            "  inflating: data/train/malignant/566.jpg  \n",
            "  inflating: data/train/malignant/567.jpg  \n",
            "  inflating: data/train/malignant/569.jpg  \n",
            "  inflating: data/train/malignant/571.jpg  \n",
            "  inflating: data/train/malignant/574.jpg  \n",
            "  inflating: data/train/malignant/576.jpg  \n",
            "  inflating: data/train/malignant/577.jpg  \n",
            "  inflating: data/train/malignant/578.jpg  \n",
            "  inflating: data/train/malignant/579.jpg  \n",
            "  inflating: data/train/malignant/580.jpg  \n",
            "  inflating: data/train/malignant/581.jpg  \n",
            "  inflating: data/train/malignant/582.jpg  \n",
            "  inflating: data/train/malignant/583.jpg  \n",
            "  inflating: data/train/malignant/584.jpg  \n",
            "  inflating: data/train/malignant/585.jpg  \n",
            "  inflating: data/train/malignant/586.jpg  \n",
            "  inflating: data/train/malignant/587.jpg  \n",
            "  inflating: data/train/malignant/588.jpg  \n",
            "  inflating: data/train/malignant/589.jpg  \n",
            "  inflating: data/train/malignant/59.jpg  \n",
            "  inflating: data/train/malignant/591.jpg  \n",
            "  inflating: data/train/malignant/594.jpg  \n",
            "  inflating: data/train/malignant/595.jpg  \n",
            "  inflating: data/train/malignant/597.jpg  \n",
            "  inflating: data/train/malignant/598.jpg  \n",
            "  inflating: data/train/malignant/599.jpg  \n",
            "  inflating: data/train/malignant/6.jpg  \n",
            "  inflating: data/train/malignant/60.jpg  \n",
            "  inflating: data/train/malignant/600.jpg  \n",
            "  inflating: data/train/malignant/601.jpg  \n",
            "  inflating: data/train/malignant/604.jpg  \n",
            "  inflating: data/train/malignant/605.jpg  \n",
            "  inflating: data/train/malignant/606.jpg  \n",
            "  inflating: data/train/malignant/607.jpg  \n",
            "  inflating: data/train/malignant/608.jpg  \n",
            "  inflating: data/train/malignant/609.jpg  \n",
            "  inflating: data/train/malignant/61.jpg  \n",
            "  inflating: data/train/malignant/610.jpg  \n",
            "  inflating: data/train/malignant/611.jpg  \n",
            "  inflating: data/train/malignant/612.jpg  \n",
            "  inflating: data/train/malignant/613.jpg  \n",
            "  inflating: data/train/malignant/616.jpg  \n",
            "  inflating: data/train/malignant/617.jpg  \n",
            "  inflating: data/train/malignant/618.jpg  \n",
            "  inflating: data/train/malignant/620.jpg  \n",
            "  inflating: data/train/malignant/621.jpg  \n",
            "  inflating: data/train/malignant/622.jpg  \n",
            "  inflating: data/train/malignant/623.jpg  \n",
            "  inflating: data/train/malignant/624.jpg  \n",
            "  inflating: data/train/malignant/625.jpg  \n",
            "  inflating: data/train/malignant/626.jpg  \n",
            "  inflating: data/train/malignant/627.jpg  \n",
            "  inflating: data/train/malignant/629.jpg  \n",
            "  inflating: data/train/malignant/63.jpg  \n",
            "  inflating: data/train/malignant/630.jpg  \n",
            "  inflating: data/train/malignant/631.jpg  \n",
            "  inflating: data/train/malignant/632.jpg  \n",
            "  inflating: data/train/malignant/633.jpg  \n",
            "  inflating: data/train/malignant/634.jpg  \n",
            "  inflating: data/train/malignant/635.jpg  \n",
            "  inflating: data/train/malignant/636.jpg  \n",
            "  inflating: data/train/malignant/637.jpg  \n",
            "  inflating: data/train/malignant/639.jpg  \n",
            "  inflating: data/train/malignant/64.jpg  \n",
            "  inflating: data/train/malignant/640.jpg  \n",
            "  inflating: data/train/malignant/642.jpg  \n",
            "  inflating: data/train/malignant/644.jpg  \n",
            "  inflating: data/train/malignant/645.jpg  \n",
            "  inflating: data/train/malignant/646.jpg  \n",
            "  inflating: data/train/malignant/647.jpg  \n",
            "  inflating: data/train/malignant/648.jpg  \n",
            "  inflating: data/train/malignant/649.jpg  \n",
            "  inflating: data/train/malignant/650.jpg  \n",
            "  inflating: data/train/malignant/651.jpg  \n",
            "  inflating: data/train/malignant/652.jpg  \n",
            "  inflating: data/train/malignant/654.jpg  \n",
            "  inflating: data/train/malignant/655.jpg  \n",
            "  inflating: data/train/malignant/656.jpg  \n",
            "  inflating: data/train/malignant/657.jpg  \n",
            "  inflating: data/train/malignant/659.jpg  \n",
            "  inflating: data/train/malignant/661.jpg  \n",
            "  inflating: data/train/malignant/662.jpg  \n",
            "  inflating: data/train/malignant/663.jpg  \n",
            "  inflating: data/train/malignant/664.jpg  \n",
            "  inflating: data/train/malignant/665.jpg  \n",
            "  inflating: data/train/malignant/666.jpg  \n",
            "  inflating: data/train/malignant/668.jpg  \n",
            "  inflating: data/train/malignant/669.jpg  \n",
            "  inflating: data/train/malignant/67.jpg  \n",
            "  inflating: data/train/malignant/671.jpg  \n",
            "  inflating: data/train/malignant/672.jpg  \n",
            "  inflating: data/train/malignant/673.jpg  \n",
            "  inflating: data/train/malignant/675.jpg  \n",
            "  inflating: data/train/malignant/676.jpg  \n",
            "  inflating: data/train/malignant/677.jpg  \n",
            "  inflating: data/train/malignant/678.jpg  \n",
            "  inflating: data/train/malignant/680.jpg  \n",
            "  inflating: data/train/malignant/681.jpg  \n",
            "  inflating: data/train/malignant/682.jpg  \n",
            "  inflating: data/train/malignant/683.jpg  \n",
            "  inflating: data/train/malignant/684.jpg  \n",
            "  inflating: data/train/malignant/685.jpg  \n",
            "  inflating: data/train/malignant/687.jpg  \n",
            "  inflating: data/train/malignant/688.jpg  \n",
            "  inflating: data/train/malignant/689.jpg  \n",
            "  inflating: data/train/malignant/69.jpg  \n",
            "  inflating: data/train/malignant/690.jpg  \n",
            "  inflating: data/train/malignant/691.jpg  \n",
            "  inflating: data/train/malignant/692.jpg  \n",
            "  inflating: data/train/malignant/693.jpg  \n",
            "  inflating: data/train/malignant/695.jpg  \n",
            "  inflating: data/train/malignant/697.jpg  \n",
            "  inflating: data/train/malignant/698.jpg  \n",
            "  inflating: data/train/malignant/699.jpg  \n",
            "  inflating: data/train/malignant/7.jpg  \n",
            "  inflating: data/train/malignant/70.jpg  \n",
            "  inflating: data/train/malignant/700.jpg  \n",
            "  inflating: data/train/malignant/701.jpg  \n",
            "  inflating: data/train/malignant/702.jpg  \n",
            "  inflating: data/train/malignant/703.jpg  \n",
            "  inflating: data/train/malignant/704.jpg  \n",
            "  inflating: data/train/malignant/705.jpg  \n",
            "  inflating: data/train/malignant/707.jpg  \n",
            "  inflating: data/train/malignant/708.jpg  \n",
            "  inflating: data/train/malignant/71.jpg  \n",
            "  inflating: data/train/malignant/710.jpg  \n",
            "  inflating: data/train/malignant/711.jpg  \n",
            "  inflating: data/train/malignant/712.jpg  \n",
            "  inflating: data/train/malignant/714.jpg  \n",
            "  inflating: data/train/malignant/715.jpg  \n",
            "  inflating: data/train/malignant/716.jpg  \n",
            "  inflating: data/train/malignant/717.jpg  \n",
            "  inflating: data/train/malignant/718.jpg  \n",
            "  inflating: data/train/malignant/719.jpg  \n",
            "  inflating: data/train/malignant/72.jpg  \n",
            "  inflating: data/train/malignant/720.jpg  \n",
            "  inflating: data/train/malignant/721.jpg  \n",
            "  inflating: data/train/malignant/722.jpg  \n",
            "  inflating: data/train/malignant/723.jpg  \n",
            "  inflating: data/train/malignant/724.jpg  \n",
            "  inflating: data/train/malignant/725.jpg  \n",
            "  inflating: data/train/malignant/726.jpg  \n",
            "  inflating: data/train/malignant/727.jpg  \n",
            "  inflating: data/train/malignant/728.jpg  \n",
            "  inflating: data/train/malignant/729.jpg  \n",
            "  inflating: data/train/malignant/730.jpg  \n",
            "  inflating: data/train/malignant/731.jpg  \n",
            "  inflating: data/train/malignant/732.jpg  \n",
            "  inflating: data/train/malignant/733.jpg  \n",
            "  inflating: data/train/malignant/734.jpg  \n",
            "  inflating: data/train/malignant/736.jpg  \n",
            "  inflating: data/train/malignant/737.jpg  \n",
            "  inflating: data/train/malignant/738.jpg  \n",
            "  inflating: data/train/malignant/740.jpg  \n",
            "  inflating: data/train/malignant/741.jpg  \n",
            "  inflating: data/train/malignant/742.jpg  \n",
            "  inflating: data/train/malignant/743.jpg  \n",
            "  inflating: data/train/malignant/745.jpg  \n",
            "  inflating: data/train/malignant/746.jpg  \n",
            "  inflating: data/train/malignant/748.jpg  \n",
            "  inflating: data/train/malignant/75.jpg  \n",
            "  inflating: data/train/malignant/750.jpg  \n",
            "  inflating: data/train/malignant/751.jpg  \n",
            "  inflating: data/train/malignant/752.jpg  \n",
            "  inflating: data/train/malignant/753.jpg  \n",
            "  inflating: data/train/malignant/754.jpg  \n",
            "  inflating: data/train/malignant/755.jpg  \n",
            "  inflating: data/train/malignant/756.jpg  \n",
            "  inflating: data/train/malignant/758.jpg  \n",
            "  inflating: data/train/malignant/76.jpg  \n",
            "  inflating: data/train/malignant/760.jpg  \n",
            "  inflating: data/train/malignant/761.jpg  \n",
            "  inflating: data/train/malignant/764.jpg  \n",
            "  inflating: data/train/malignant/765.jpg  \n",
            "  inflating: data/train/malignant/766.jpg  \n",
            "  inflating: data/train/malignant/768.jpg  \n",
            "  inflating: data/train/malignant/769.jpg  \n",
            "  inflating: data/train/malignant/77.jpg  \n",
            "  inflating: data/train/malignant/770.jpg  \n",
            "  inflating: data/train/malignant/772.jpg  \n",
            "  inflating: data/train/malignant/774.jpg  \n",
            "  inflating: data/train/malignant/775.jpg  \n",
            "  inflating: data/train/malignant/777.jpg  \n",
            "  inflating: data/train/malignant/779.jpg  \n",
            "  inflating: data/train/malignant/78.jpg  \n",
            "  inflating: data/train/malignant/780.jpg  \n",
            "  inflating: data/train/malignant/781.jpg  \n",
            "  inflating: data/train/malignant/782.jpg  \n",
            "  inflating: data/train/malignant/783.jpg  \n",
            "  inflating: data/train/malignant/784.jpg  \n",
            "  inflating: data/train/malignant/785.jpg  \n",
            "  inflating: data/train/malignant/786.jpg  \n",
            "  inflating: data/train/malignant/787.jpg  \n",
            "  inflating: data/train/malignant/789.jpg  \n",
            "  inflating: data/train/malignant/79.jpg  \n",
            "  inflating: data/train/malignant/790.jpg  \n",
            "  inflating: data/train/malignant/791.jpg  \n",
            "  inflating: data/train/malignant/793.jpg  \n",
            "  inflating: data/train/malignant/795.jpg  \n",
            "  inflating: data/train/malignant/796.jpg  \n",
            "  inflating: data/train/malignant/798.jpg  \n",
            "  inflating: data/train/malignant/799.jpg  \n",
            "  inflating: data/train/malignant/80.jpg  \n",
            "  inflating: data/train/malignant/800.jpg  \n",
            "  inflating: data/train/malignant/801.jpg  \n",
            "  inflating: data/train/malignant/802.jpg  \n",
            "  inflating: data/train/malignant/803.jpg  \n",
            "  inflating: data/train/malignant/805.jpg  \n",
            "  inflating: data/train/malignant/806.jpg  \n",
            "  inflating: data/train/malignant/807.jpg  \n",
            "  inflating: data/train/malignant/809.jpg  \n",
            "  inflating: data/train/malignant/810.jpg  \n",
            "  inflating: data/train/malignant/811.jpg  \n",
            "  inflating: data/train/malignant/812.jpg  \n",
            "  inflating: data/train/malignant/813.jpg  \n",
            "  inflating: data/train/malignant/814.jpg  \n",
            "  inflating: data/train/malignant/815.jpg  \n",
            "  inflating: data/train/malignant/816.jpg  \n",
            "  inflating: data/train/malignant/818.jpg  \n",
            "  inflating: data/train/malignant/819.jpg  \n",
            "  inflating: data/train/malignant/82.jpg  \n",
            "  inflating: data/train/malignant/820.jpg  \n",
            "  inflating: data/train/malignant/821.jpg  \n",
            "  inflating: data/train/malignant/823.jpg  \n",
            "  inflating: data/train/malignant/824.jpg  \n",
            "  inflating: data/train/malignant/825.jpg  \n",
            "  inflating: data/train/malignant/827.jpg  \n",
            "  inflating: data/train/malignant/828.jpg  \n",
            "  inflating: data/train/malignant/829.jpg  \n",
            "  inflating: data/train/malignant/83.jpg  \n",
            "  inflating: data/train/malignant/830.jpg  \n",
            "  inflating: data/train/malignant/831.jpg  \n",
            "  inflating: data/train/malignant/833.jpg  \n",
            "  inflating: data/train/malignant/834.jpg  \n",
            "  inflating: data/train/malignant/835.jpg  \n",
            "  inflating: data/train/malignant/837.jpg  \n",
            "  inflating: data/train/malignant/84.jpg  \n",
            "  inflating: data/train/malignant/840.jpg  \n",
            "  inflating: data/train/malignant/841.jpg  \n",
            "  inflating: data/train/malignant/842.jpg  \n",
            "  inflating: data/train/malignant/843.jpg  \n",
            "  inflating: data/train/malignant/844.jpg  \n",
            "  inflating: data/train/malignant/845.jpg  \n",
            "  inflating: data/train/malignant/846.jpg  \n",
            "  inflating: data/train/malignant/847.jpg  \n",
            "  inflating: data/train/malignant/848.jpg  \n",
            "  inflating: data/train/malignant/849.jpg  \n",
            "  inflating: data/train/malignant/850.jpg  \n",
            "  inflating: data/train/malignant/851.jpg  \n",
            "  inflating: data/train/malignant/853.jpg  \n",
            "  inflating: data/train/malignant/854.jpg  \n",
            "  inflating: data/train/malignant/855.jpg  \n",
            "  inflating: data/train/malignant/856.jpg  \n",
            "  inflating: data/train/malignant/857.jpg  \n",
            "  inflating: data/train/malignant/858.jpg  \n",
            "  inflating: data/train/malignant/86.jpg  \n",
            "  inflating: data/train/malignant/860.jpg  \n",
            "  inflating: data/train/malignant/861.jpg  \n",
            "  inflating: data/train/malignant/862.jpg  \n",
            "  inflating: data/train/malignant/863.jpg  \n",
            "  inflating: data/train/malignant/865.jpg  \n",
            "  inflating: data/train/malignant/867.jpg  \n",
            "  inflating: data/train/malignant/869.jpg  \n",
            "  inflating: data/train/malignant/870.jpg  \n",
            "  inflating: data/train/malignant/872.jpg  \n",
            "  inflating: data/train/malignant/873.jpg  \n",
            "  inflating: data/train/malignant/875.jpg  \n",
            "  inflating: data/train/malignant/876.jpg  \n",
            "  inflating: data/train/malignant/877.jpg  \n",
            "  inflating: data/train/malignant/878.jpg  \n",
            "  inflating: data/train/malignant/879.jpg  \n",
            "  inflating: data/train/malignant/88.jpg  \n",
            "  inflating: data/train/malignant/880.jpg  \n",
            "  inflating: data/train/malignant/882.jpg  \n",
            "  inflating: data/train/malignant/883.jpg  \n",
            "  inflating: data/train/malignant/884.jpg  \n",
            "  inflating: data/train/malignant/885.jpg  \n",
            "  inflating: data/train/malignant/886.jpg  \n",
            "  inflating: data/train/malignant/888.jpg  \n",
            "  inflating: data/train/malignant/889.jpg  \n",
            "  inflating: data/train/malignant/89.jpg  \n",
            "  inflating: data/train/malignant/890.jpg  \n",
            "  inflating: data/train/malignant/891.jpg  \n",
            "  inflating: data/train/malignant/892.jpg  \n",
            "  inflating: data/train/malignant/895.jpg  \n",
            "  inflating: data/train/malignant/896.jpg  \n",
            "  inflating: data/train/malignant/897.jpg  \n",
            "  inflating: data/train/malignant/898.jpg  \n",
            "  inflating: data/train/malignant/899.jpg  \n",
            "  inflating: data/train/malignant/9.jpg  \n",
            "  inflating: data/train/malignant/90.jpg  \n",
            "  inflating: data/train/malignant/900.jpg  \n",
            "  inflating: data/train/malignant/901.jpg  \n",
            "  inflating: data/train/malignant/902.jpg  \n",
            "  inflating: data/train/malignant/903.jpg  \n",
            "  inflating: data/train/malignant/904.jpg  \n",
            "  inflating: data/train/malignant/906.jpg  \n",
            "  inflating: data/train/malignant/907.jpg  \n",
            "  inflating: data/train/malignant/908.jpg  \n",
            "  inflating: data/train/malignant/909.jpg  \n",
            "  inflating: data/train/malignant/910.jpg  \n",
            "  inflating: data/train/malignant/911.jpg  \n",
            "  inflating: data/train/malignant/912.jpg  \n",
            "  inflating: data/train/malignant/913.jpg  \n",
            "  inflating: data/train/malignant/914.jpg  \n",
            "  inflating: data/train/malignant/915.jpg  \n",
            "  inflating: data/train/malignant/916.jpg  \n",
            "  inflating: data/train/malignant/917.jpg  \n",
            "  inflating: data/train/malignant/918.jpg  \n",
            "  inflating: data/train/malignant/919.jpg  \n",
            "  inflating: data/train/malignant/920.jpg  \n",
            "  inflating: data/train/malignant/921.jpg  \n",
            "  inflating: data/train/malignant/922.jpg  \n",
            "  inflating: data/train/malignant/923.jpg  \n",
            "  inflating: data/train/malignant/924.jpg  \n",
            "  inflating: data/train/malignant/925.jpg  \n",
            "  inflating: data/train/malignant/926.jpg  \n",
            "  inflating: data/train/malignant/928.jpg  \n",
            "  inflating: data/train/malignant/929.jpg  \n",
            "  inflating: data/train/malignant/930.jpg  \n",
            "  inflating: data/train/malignant/931.jpg  \n",
            "  inflating: data/train/malignant/932.jpg  \n",
            "  inflating: data/train/malignant/933.jpg  \n",
            "  inflating: data/train/malignant/935.jpg  \n",
            "  inflating: data/train/malignant/936.jpg  \n",
            "  inflating: data/train/malignant/938.jpg  \n",
            "  inflating: data/train/malignant/939.jpg  \n",
            "  inflating: data/train/malignant/94.jpg  \n",
            "  inflating: data/train/malignant/941.jpg  \n",
            "  inflating: data/train/malignant/942.jpg  \n",
            "  inflating: data/train/malignant/943.jpg  \n",
            "  inflating: data/train/malignant/944.jpg  \n",
            "  inflating: data/train/malignant/945.jpg  \n",
            "  inflating: data/train/malignant/946.jpg  \n",
            "  inflating: data/train/malignant/95.jpg  \n",
            "  inflating: data/train/malignant/950.jpg  \n",
            "  inflating: data/train/malignant/951.jpg  \n",
            "  inflating: data/train/malignant/952.jpg  \n",
            "  inflating: data/train/malignant/954.jpg  \n",
            "  inflating: data/train/malignant/955.jpg  \n",
            "  inflating: data/train/malignant/956.jpg  \n",
            "  inflating: data/train/malignant/957.jpg  \n",
            "  inflating: data/train/malignant/958.jpg  \n",
            "  inflating: data/train/malignant/959.jpg  \n",
            "  inflating: data/train/malignant/96.jpg  \n",
            "  inflating: data/train/malignant/960.jpg  \n",
            "  inflating: data/train/malignant/961.jpg  \n",
            "  inflating: data/train/malignant/962.jpg  \n",
            "  inflating: data/train/malignant/963.jpg  \n",
            "  inflating: data/train/malignant/964.jpg  \n",
            "  inflating: data/train/malignant/965.jpg  \n",
            "  inflating: data/train/malignant/966.jpg  \n",
            "  inflating: data/train/malignant/967.jpg  \n",
            "  inflating: data/train/malignant/968.jpg  \n",
            "  inflating: data/train/malignant/969.jpg  \n",
            "  inflating: data/train/malignant/97.jpg  \n",
            "  inflating: data/train/malignant/970.jpg  \n",
            "  inflating: data/train/malignant/971.jpg  \n",
            "  inflating: data/train/malignant/972.jpg  \n",
            "  inflating: data/train/malignant/973.jpg  \n",
            "  inflating: data/train/malignant/974.jpg  \n",
            "  inflating: data/train/malignant/975.jpg  \n",
            "  inflating: data/train/malignant/976.jpg  \n",
            "  inflating: data/train/malignant/977.jpg  \n",
            "  inflating: data/train/malignant/978.jpg  \n",
            "  inflating: data/train/malignant/979.jpg  \n",
            "  inflating: data/train/malignant/98.jpg  \n",
            "  inflating: data/train/malignant/980.jpg  \n",
            "  inflating: data/train/malignant/981.jpg  \n",
            "  inflating: data/train/malignant/982.jpg  \n",
            "  inflating: data/train/malignant/983.jpg  \n",
            "  inflating: data/train/malignant/984.jpg  \n",
            "  inflating: data/train/malignant/986.jpg  \n",
            "  inflating: data/train/malignant/987.jpg  \n",
            "  inflating: data/train/malignant/988.jpg  \n",
            "  inflating: data/train/malignant/989.jpg  \n",
            "  inflating: data/train/malignant/99.jpg  \n",
            "  inflating: data/train/malignant/990.jpg  \n",
            "  inflating: data/train/malignant/991.jpg  \n",
            "  inflating: data/train/malignant/993.jpg  \n",
            "  inflating: data/train/malignant/996.jpg  \n",
            "  inflating: data/train/malignant/997.jpg  \n",
            "  inflating: data/train/malignant/998.jpg  \n",
            "  inflating: data/train/malignant/999.jpg  \n",
            "  inflating: test/benign/1.jpg       \n",
            "  inflating: test/benign/10.jpg      \n",
            "  inflating: test/benign/1003.jpg    \n",
            "  inflating: test/benign/1006.jpg    \n",
            "  inflating: test/benign/1013.jpg    \n",
            "  inflating: test/benign/1018.jpg    \n",
            "  inflating: test/benign/1019.jpg    \n",
            "  inflating: test/benign/1023.jpg    \n",
            "  inflating: test/benign/1025.jpg    \n",
            "  inflating: test/benign/1029.jpg    \n",
            "  inflating: test/benign/1033.jpg    \n",
            "  inflating: test/benign/1034.jpg    \n",
            "  inflating: test/benign/1042.jpg    \n",
            "  inflating: test/benign/1044.jpg    \n",
            "  inflating: test/benign/105.jpg     \n",
            "  inflating: test/benign/1055.jpg    \n",
            "  inflating: test/benign/1061.jpg    \n",
            "  inflating: test/benign/1070.jpg    \n",
            "  inflating: test/benign/1074.jpg    \n",
            "  inflating: test/benign/1077.jpg    \n",
            "  inflating: test/benign/1080.jpg    \n",
            "  inflating: test/benign/1087.jpg    \n",
            "  inflating: test/benign/1088.jpg    \n",
            "  inflating: test/benign/1092.jpg    \n",
            "  inflating: test/benign/11.jpg      \n",
            "  inflating: test/benign/1110.jpg    \n",
            "  inflating: test/benign/1112.jpg    \n",
            "  inflating: test/benign/1115.jpg    \n",
            "  inflating: test/benign/1118.jpg    \n",
            "  inflating: test/benign/1125.jpg    \n",
            "  inflating: test/benign/1126.jpg    \n",
            "  inflating: test/benign/1130.jpg    \n",
            "  inflating: test/benign/1134.jpg    \n",
            "  inflating: test/benign/1135.jpg    \n",
            "  inflating: test/benign/1139.jpg    \n",
            "  inflating: test/benign/1143.jpg    \n",
            "  inflating: test/benign/1146.jpg    \n",
            "  inflating: test/benign/1151.jpg    \n",
            "  inflating: test/benign/1155.jpg    \n",
            "  inflating: test/benign/1166.jpg    \n",
            "  inflating: test/benign/1170.jpg    \n",
            "  inflating: test/benign/1173.jpg    \n",
            "  inflating: test/benign/1177.jpg    \n",
            "  inflating: test/benign/1180.jpg    \n",
            "  inflating: test/benign/1183.jpg    \n",
            "  inflating: test/benign/119.jpg     \n",
            "  inflating: test/benign/1191.jpg    \n",
            "  inflating: test/benign/1200.jpg    \n",
            "  inflating: test/benign/1203.jpg    \n",
            "  inflating: test/benign/1208.jpg    \n",
            "  inflating: test/benign/1214.jpg    \n",
            "  inflating: test/benign/1215.jpg    \n",
            "  inflating: test/benign/122.jpg     \n",
            "  inflating: test/benign/1226.jpg    \n",
            "  inflating: test/benign/1231.jpg    \n",
            "  inflating: test/benign/1242.jpg    \n",
            "  inflating: test/benign/1243.jpg    \n",
            "  inflating: test/benign/1244.jpg    \n",
            "  inflating: test/benign/1253.jpg    \n",
            "  inflating: test/benign/1261.jpg    \n",
            "  inflating: test/benign/1265.jpg    \n",
            "  inflating: test/benign/1266.jpg    \n",
            "  inflating: test/benign/1269.jpg    \n",
            "  inflating: test/benign/127.jpg     \n",
            "  inflating: test/benign/1273.jpg    \n",
            "  inflating: test/benign/1276.jpg    \n",
            "  inflating: test/benign/1277.jpg    \n",
            "  inflating: test/benign/1278.jpg    \n",
            "  inflating: test/benign/1288.jpg    \n",
            "  inflating: test/benign/1290.jpg    \n",
            "  inflating: test/benign/1297.jpg    \n",
            "  inflating: test/benign/1299.jpg    \n",
            "  inflating: test/benign/1310.jpg    \n",
            "  inflating: test/benign/1319.jpg    \n",
            "  inflating: test/benign/1321.jpg    \n",
            "  inflating: test/benign/1322.jpg    \n",
            "  inflating: test/benign/1334.jpg    \n",
            "  inflating: test/benign/1342.jpg    \n",
            "  inflating: test/benign/1343.jpg    \n",
            "  inflating: test/benign/1350.jpg    \n",
            "  inflating: test/benign/1354.jpg    \n",
            "  inflating: test/benign/1357.jpg    \n",
            "  inflating: test/benign/1359.jpg    \n",
            "  inflating: test/benign/1362.jpg    \n",
            "  inflating: test/benign/1365.jpg    \n",
            "  inflating: test/benign/1367.jpg    \n",
            "  inflating: test/benign/1373.jpg    \n",
            "  inflating: test/benign/1376.jpg    \n",
            "  inflating: test/benign/1377.jpg    \n",
            "  inflating: test/benign/1378.jpg    \n",
            "  inflating: test/benign/1381.jpg    \n",
            "  inflating: test/benign/1393.jpg    \n",
            "  inflating: test/benign/140.jpg     \n",
            "  inflating: test/benign/1400.jpg    \n",
            "  inflating: test/benign/1401.jpg    \n",
            "  inflating: test/benign/1409.jpg    \n",
            "  inflating: test/benign/1412.jpg    \n",
            "  inflating: test/benign/1415.jpg    \n",
            "  inflating: test/benign/144.jpg     \n",
            "  inflating: test/benign/1441.jpg    \n",
            "  inflating: test/benign/1443.jpg    \n",
            "  inflating: test/benign/1445.jpg    \n",
            "  inflating: test/benign/1448.jpg    \n",
            "  inflating: test/benign/1466.jpg    \n",
            "  inflating: test/benign/1468.jpg    \n",
            "  inflating: test/benign/147.jpg     \n",
            "  inflating: test/benign/1471.jpg    \n",
            "  inflating: test/benign/1473.jpg    \n",
            "  inflating: test/benign/1479.jpg    \n",
            "  inflating: test/benign/1481.jpg    \n",
            "  inflating: test/benign/1483.jpg    \n",
            "  inflating: test/benign/1485.jpg    \n",
            "  inflating: test/benign/1488.jpg    \n",
            "  inflating: test/benign/1492.jpg    \n",
            "  inflating: test/benign/1499.jpg    \n",
            "  inflating: test/benign/15.jpg      \n",
            "  inflating: test/benign/1502.jpg    \n",
            "  inflating: test/benign/1514.jpg    \n",
            "  inflating: test/benign/1516.jpg    \n",
            "  inflating: test/benign/1519.jpg    \n",
            "  inflating: test/benign/1521.jpg    \n",
            "  inflating: test/benign/1530.jpg    \n",
            "  inflating: test/benign/1537.jpg    \n",
            "  inflating: test/benign/1538.jpg    \n",
            "  inflating: test/benign/154.jpg     \n",
            "  inflating: test/benign/1545.jpg    \n",
            "  inflating: test/benign/1559.jpg    \n",
            "  inflating: test/benign/1576.jpg    \n",
            "  inflating: test/benign/1578.jpg    \n",
            "  inflating: test/benign/1579.jpg    \n",
            "  inflating: test/benign/1592.jpg    \n",
            "  inflating: test/benign/16.jpg      \n",
            "  inflating: test/benign/1602.jpg    \n",
            "  inflating: test/benign/1607.jpg    \n",
            "  inflating: test/benign/161.jpg     \n",
            "  inflating: test/benign/1610.jpg    \n",
            "  inflating: test/benign/1611.jpg    \n",
            "  inflating: test/benign/1628.jpg    \n",
            "  inflating: test/benign/1632.jpg    \n",
            "  inflating: test/benign/1634.jpg    \n",
            "  inflating: test/benign/1637.jpg    \n",
            "  inflating: test/benign/1642.jpg    \n",
            "  inflating: test/benign/1646.jpg    \n",
            "  inflating: test/benign/1648.jpg    \n",
            "  inflating: test/benign/1655.jpg    \n",
            "  inflating: test/benign/1657.jpg    \n",
            "  inflating: test/benign/1672.jpg    \n",
            "  inflating: test/benign/1682.jpg    \n",
            "  inflating: test/benign/1687.jpg    \n",
            "  inflating: test/benign/1696.jpg    \n",
            "  inflating: test/benign/1701.jpg    \n",
            "  inflating: test/benign/1704.jpg    \n",
            "  inflating: test/benign/1710.jpg    \n",
            "  inflating: test/benign/1711.jpg    \n",
            "  inflating: test/benign/1714.jpg    \n",
            "  inflating: test/benign/1719.jpg    \n",
            "  inflating: test/benign/1721.jpg    \n",
            "  inflating: test/benign/1731.jpg    \n",
            "  inflating: test/benign/1737.jpg    \n",
            "  inflating: test/benign/1745.jpg    \n",
            "  inflating: test/benign/1747.jpg    \n",
            "  inflating: test/benign/1748.jpg    \n",
            "  inflating: test/benign/1756.jpg    \n",
            "  inflating: test/benign/1757.jpg    \n",
            "  inflating: test/benign/1758.jpg    \n",
            "  inflating: test/benign/1764.jpg    \n",
            "  inflating: test/benign/1768.jpg    \n",
            "  inflating: test/benign/1773.jpg    \n",
            "  inflating: test/benign/1797.jpg    \n",
            "  inflating: test/benign/1798.jpg    \n",
            "  inflating: test/benign/18.jpg      \n",
            "  inflating: test/benign/1800.jpg    \n",
            "  inflating: test/benign/185.jpg     \n",
            "  inflating: test/benign/186.jpg     \n",
            "  inflating: test/benign/2.jpg       \n",
            "  inflating: test/benign/205.jpg     \n",
            "  inflating: test/benign/211.jpg     \n",
            "  inflating: test/benign/215.jpg     \n",
            "  inflating: test/benign/216.jpg     \n",
            "  inflating: test/benign/224.jpg     \n",
            "  inflating: test/benign/226.jpg     \n",
            "  inflating: test/benign/237.jpg     \n",
            "  inflating: test/benign/245.jpg     \n",
            "  inflating: test/benign/250.jpg     \n",
            "  inflating: test/benign/251.jpg     \n",
            "  inflating: test/benign/253.jpg     \n",
            "  inflating: test/benign/256.jpg     \n",
            "  inflating: test/benign/259.jpg     \n",
            "  inflating: test/benign/267.jpg     \n",
            "  inflating: test/benign/268.jpg     \n",
            "  inflating: test/benign/273.jpg     \n",
            "  inflating: test/benign/284.jpg     \n",
            "  inflating: test/benign/287.jpg     \n",
            "  inflating: test/benign/289.jpg     \n",
            "  inflating: test/benign/291.jpg     \n",
            "  inflating: test/benign/300.jpg     \n",
            "  inflating: test/benign/303.jpg     \n",
            "  inflating: test/benign/304.jpg     \n",
            "  inflating: test/benign/31.jpg      \n",
            "  inflating: test/benign/311.jpg     \n",
            "  inflating: test/benign/313.jpg     \n",
            "  inflating: test/benign/317.jpg     \n",
            "  inflating: test/benign/322.jpg     \n",
            "  inflating: test/benign/323.jpg     \n",
            "  inflating: test/benign/330.jpg     \n",
            "  inflating: test/benign/332.jpg     \n",
            "  inflating: test/benign/335.jpg     \n",
            "  inflating: test/benign/344.jpg     \n",
            "  inflating: test/benign/348.jpg     \n",
            "  inflating: test/benign/354.jpg     \n",
            "  inflating: test/benign/356.jpg     \n",
            "  inflating: test/benign/367.jpg     \n",
            "  inflating: test/benign/369.jpg     \n",
            "  inflating: test/benign/37.jpg      \n",
            "  inflating: test/benign/378.jpg     \n",
            "  inflating: test/benign/379.jpg     \n",
            "  inflating: test/benign/385.jpg     \n",
            "  inflating: test/benign/388.jpg     \n",
            "  inflating: test/benign/389.jpg     \n",
            "  inflating: test/benign/394.jpg     \n",
            "  inflating: test/benign/404.jpg     \n",
            "  inflating: test/benign/407.jpg     \n",
            "  inflating: test/benign/414.jpg     \n",
            "  inflating: test/benign/419.jpg     \n",
            "  inflating: test/benign/427.jpg     \n",
            "  inflating: test/benign/428.jpg     \n",
            "  inflating: test/benign/433.jpg     \n",
            "  inflating: test/benign/436.jpg     \n",
            "  inflating: test/benign/437.jpg     \n",
            "  inflating: test/benign/44.jpg      \n",
            "  inflating: test/benign/444.jpg     \n",
            "  inflating: test/benign/449.jpg     \n",
            "  inflating: test/benign/45.jpg      \n",
            "  inflating: test/benign/454.jpg     \n",
            "  inflating: test/benign/457.jpg     \n",
            "  inflating: test/benign/462.jpg     \n",
            "  inflating: test/benign/475.jpg     \n",
            "  inflating: test/benign/479.jpg     \n",
            "  inflating: test/benign/484.jpg     \n",
            "  inflating: test/benign/495.jpg     \n",
            "  inflating: test/benign/5.jpg       \n",
            "  inflating: test/benign/520.jpg     \n",
            "  inflating: test/benign/527.jpg     \n",
            "  inflating: test/benign/532.jpg     \n",
            "  inflating: test/benign/535.jpg     \n",
            "  inflating: test/benign/536.jpg     \n",
            "  inflating: test/benign/54.jpg      \n",
            "  inflating: test/benign/545.jpg     \n",
            "  inflating: test/benign/548.jpg     \n",
            "  inflating: test/benign/552.jpg     \n",
            "  inflating: test/benign/558.jpg     \n",
            "  inflating: test/benign/559.jpg     \n",
            "  inflating: test/benign/560.jpg     \n",
            "  inflating: test/benign/561.jpg     \n",
            "  inflating: test/benign/562.jpg     \n",
            "  inflating: test/benign/566.jpg     \n",
            "  inflating: test/benign/57.jpg      \n",
            "  inflating: test/benign/572.jpg     \n",
            "  inflating: test/benign/573.jpg     \n",
            "  inflating: test/benign/574.jpg     \n",
            "  inflating: test/benign/575.jpg     \n",
            "  inflating: test/benign/580.jpg     \n",
            "  inflating: test/benign/588.jpg     \n",
            "  inflating: test/benign/596.jpg     \n",
            "  inflating: test/benign/603.jpg     \n",
            "  inflating: test/benign/61.jpg      \n",
            "  inflating: test/benign/612.jpg     \n",
            "  inflating: test/benign/623.jpg     \n",
            "  inflating: test/benign/624.jpg     \n",
            "  inflating: test/benign/626.jpg     \n",
            "  inflating: test/benign/63.jpg      \n",
            "  inflating: test/benign/631.jpg     \n",
            "  inflating: test/benign/634.jpg     \n",
            "  inflating: test/benign/635.jpg     \n",
            "  inflating: test/benign/636.jpg     \n",
            "  inflating: test/benign/642.jpg     \n",
            "  inflating: test/benign/644.jpg     \n",
            "  inflating: test/benign/647.jpg     \n",
            "  inflating: test/benign/658.jpg     \n",
            "  inflating: test/benign/659.jpg     \n",
            "  inflating: test/benign/660.jpg     \n",
            "  inflating: test/benign/663.jpg     \n",
            "  inflating: test/benign/664.jpg     \n",
            "  inflating: test/benign/668.jpg     \n",
            "  inflating: test/benign/670.jpg     \n",
            "  inflating: test/benign/676.jpg     \n",
            "  inflating: test/benign/678.jpg     \n",
            "  inflating: test/benign/681.jpg     \n",
            "  inflating: test/benign/689.jpg     \n",
            "  inflating: test/benign/690.jpg     \n",
            "  inflating: test/benign/700.jpg     \n",
            "  inflating: test/benign/71.jpg      \n",
            "  inflating: test/benign/712.jpg     \n",
            "  inflating: test/benign/717.jpg     \n",
            "  inflating: test/benign/720.jpg     \n",
            "  inflating: test/benign/721.jpg     \n",
            "  inflating: test/benign/724.jpg     \n",
            "  inflating: test/benign/725.jpg     \n",
            "  inflating: test/benign/74.jpg      \n",
            "  inflating: test/benign/751.jpg     \n",
            "  inflating: test/benign/758.jpg     \n",
            "  inflating: test/benign/762.jpg     \n",
            "  inflating: test/benign/763.jpg     \n",
            "  inflating: test/benign/768.jpg     \n",
            "  inflating: test/benign/770.jpg     \n",
            "  inflating: test/benign/773.jpg     \n",
            "  inflating: test/benign/774.jpg     \n",
            "  inflating: test/benign/778.jpg     \n",
            "  inflating: test/benign/790.jpg     \n",
            "  inflating: test/benign/8.jpg       \n",
            "  inflating: test/benign/802.jpg     \n",
            "  inflating: test/benign/805.jpg     \n",
            "  inflating: test/benign/806.jpg     \n",
            "  inflating: test/benign/813.jpg     \n",
            "  inflating: test/benign/819.jpg     \n",
            "  inflating: test/benign/820.jpg     \n",
            "  inflating: test/benign/823.jpg     \n",
            "  inflating: test/benign/824.jpg     \n",
            "  inflating: test/benign/825.jpg     \n",
            "  inflating: test/benign/826.jpg     \n",
            "  inflating: test/benign/828.jpg     \n",
            "  inflating: test/benign/83.jpg      \n",
            "  inflating: test/benign/830.jpg     \n",
            "  inflating: test/benign/84.jpg      \n",
            "  inflating: test/benign/840.jpg     \n",
            "  inflating: test/benign/854.jpg     \n",
            "  inflating: test/benign/869.jpg     \n",
            "  inflating: test/benign/874.jpg     \n",
            "  inflating: test/benign/878.jpg     \n",
            "  inflating: test/benign/88.jpg      \n",
            "  inflating: test/benign/880.jpg     \n",
            "  inflating: test/benign/887.jpg     \n",
            "  inflating: test/benign/888.jpg     \n",
            "  inflating: test/benign/892.jpg     \n",
            "  inflating: test/benign/893.jpg     \n",
            "  inflating: test/benign/894.jpg     \n",
            "  inflating: test/benign/895.jpg     \n",
            "  inflating: test/benign/9.jpg       \n",
            "  inflating: test/benign/90.jpg      \n",
            "  inflating: test/benign/903.jpg     \n",
            "  inflating: test/benign/906.jpg     \n",
            "  inflating: test/benign/909.jpg     \n",
            "  inflating: test/benign/912.jpg     \n",
            "  inflating: test/benign/916.jpg     \n",
            "  inflating: test/benign/919.jpg     \n",
            "  inflating: test/benign/925.jpg     \n",
            "  inflating: test/benign/936.jpg     \n",
            "  inflating: test/benign/943.jpg     \n",
            "  inflating: test/benign/944.jpg     \n",
            "  inflating: test/benign/946.jpg     \n",
            "  inflating: test/benign/95.jpg      \n",
            "  inflating: test/benign/958.jpg     \n",
            "  inflating: test/benign/962.jpg     \n",
            "  inflating: test/benign/964.jpg     \n",
            "  inflating: test/benign/97.jpg      \n",
            "  inflating: test/benign/972.jpg     \n",
            "  inflating: test/benign/98.jpg      \n",
            "  inflating: test/benign/982.jpg     \n",
            "  inflating: test/benign/993.jpg     \n",
            "  inflating: test/benign/998.jpg     \n",
            "  inflating: test/malignant/1.jpg    \n",
            "  inflating: test/malignant/1003.jpg  \n",
            "  inflating: test/malignant/1005.jpg  \n",
            "  inflating: test/malignant/1007.jpg  \n",
            "  inflating: test/malignant/1009.jpg  \n",
            "  inflating: test/malignant/1012.jpg  \n",
            "  inflating: test/malignant/1019.jpg  \n",
            "  inflating: test/malignant/1022.jpg  \n",
            "  inflating: test/malignant/1026.jpg  \n",
            "  inflating: test/malignant/1027.jpg  \n",
            "  inflating: test/malignant/1037.jpg  \n",
            "  inflating: test/malignant/1038.jpg  \n",
            "  inflating: test/malignant/1046.jpg  \n",
            "  inflating: test/malignant/1049.jpg  \n",
            "  inflating: test/malignant/1056.jpg  \n",
            "  inflating: test/malignant/1058.jpg  \n",
            "  inflating: test/malignant/1065.jpg  \n",
            "  inflating: test/malignant/1074.jpg  \n",
            "  inflating: test/malignant/1080.jpg  \n",
            "  inflating: test/malignant/1083.jpg  \n",
            "  inflating: test/malignant/1089.jpg  \n",
            "  inflating: test/malignant/1091.jpg  \n",
            "  inflating: test/malignant/1094.jpg  \n",
            "  inflating: test/malignant/110.jpg  \n",
            "  inflating: test/malignant/1112.jpg  \n",
            "  inflating: test/malignant/1113.jpg  \n",
            "  inflating: test/malignant/1119.jpg  \n",
            "  inflating: test/malignant/1120.jpg  \n",
            "  inflating: test/malignant/1128.jpg  \n",
            "  inflating: test/malignant/1135.jpg  \n",
            "  inflating: test/malignant/1141.jpg  \n",
            "  inflating: test/malignant/1150.jpg  \n",
            "  inflating: test/malignant/1151.jpg  \n",
            "  inflating: test/malignant/1155.jpg  \n",
            "  inflating: test/malignant/1156.jpg  \n",
            "  inflating: test/malignant/1160.jpg  \n",
            "  inflating: test/malignant/1164.jpg  \n",
            "  inflating: test/malignant/1166.jpg  \n",
            "  inflating: test/malignant/1170.jpg  \n",
            "  inflating: test/malignant/1173.jpg  \n",
            "  inflating: test/malignant/1176.jpg  \n",
            "  inflating: test/malignant/1185.jpg  \n",
            "  inflating: test/malignant/1186.jpg  \n",
            "  inflating: test/malignant/1187.jpg  \n",
            "  inflating: test/malignant/1189.jpg  \n",
            "  inflating: test/malignant/1194.jpg  \n",
            "  inflating: test/malignant/1197.jpg  \n",
            "  inflating: test/malignant/1198.jpg  \n",
            "  inflating: test/malignant/1211.jpg  \n",
            "  inflating: test/malignant/1215.jpg  \n",
            "  inflating: test/malignant/1216.jpg  \n",
            "  inflating: test/malignant/1218.jpg  \n",
            "  inflating: test/malignant/1220.jpg  \n",
            "  inflating: test/malignant/1221.jpg  \n",
            "  inflating: test/malignant/1227.jpg  \n",
            "  inflating: test/malignant/1228.jpg  \n",
            "  inflating: test/malignant/1229.jpg  \n",
            "  inflating: test/malignant/1234.jpg  \n",
            "  inflating: test/malignant/1238.jpg  \n",
            "  inflating: test/malignant/1242.jpg  \n",
            "  inflating: test/malignant/1251.jpg  \n",
            "  inflating: test/malignant/1254.jpg  \n",
            "  inflating: test/malignant/1256.jpg  \n",
            "  inflating: test/malignant/1262.jpg  \n",
            "  inflating: test/malignant/1266.jpg  \n",
            "  inflating: test/malignant/1267.jpg  \n",
            "  inflating: test/malignant/1268.jpg  \n",
            "  inflating: test/malignant/1280.jpg  \n",
            "  inflating: test/malignant/1286.jpg  \n",
            "  inflating: test/malignant/1289.jpg  \n",
            "  inflating: test/malignant/129.jpg  \n",
            "  inflating: test/malignant/1292.jpg  \n",
            "  inflating: test/malignant/1295.jpg  \n",
            "  inflating: test/malignant/1297.jpg  \n",
            "  inflating: test/malignant/13.jpg   \n",
            "  inflating: test/malignant/1300.jpg  \n",
            "  inflating: test/malignant/1310.jpg  \n",
            "  inflating: test/malignant/1320.jpg  \n",
            "  inflating: test/malignant/1322.jpg  \n",
            "  inflating: test/malignant/1330.jpg  \n",
            "  inflating: test/malignant/1333.jpg  \n",
            "  inflating: test/malignant/1336.jpg  \n",
            "  inflating: test/malignant/1339.jpg  \n",
            "  inflating: test/malignant/1342.jpg  \n",
            "  inflating: test/malignant/1347.jpg  \n",
            "  inflating: test/malignant/1354.jpg  \n",
            "  inflating: test/malignant/1355.jpg  \n",
            "  inflating: test/malignant/1358.jpg  \n",
            "  inflating: test/malignant/1359.jpg  \n",
            "  inflating: test/malignant/1364.jpg  \n",
            "  inflating: test/malignant/1366.jpg  \n",
            "  inflating: test/malignant/1370.jpg  \n",
            "  inflating: test/malignant/1374.jpg  \n",
            "  inflating: test/malignant/1378.jpg  \n",
            "  inflating: test/malignant/1379.jpg  \n",
            "  inflating: test/malignant/1380.jpg  \n",
            "  inflating: test/malignant/1382.jpg  \n",
            "  inflating: test/malignant/1383.jpg  \n",
            "  inflating: test/malignant/139.jpg  \n",
            "  inflating: test/malignant/1395.jpg  \n",
            "  inflating: test/malignant/1401.jpg  \n",
            "  inflating: test/malignant/1402.jpg  \n",
            "  inflating: test/malignant/1417.jpg  \n",
            "  inflating: test/malignant/1422.jpg  \n",
            "  inflating: test/malignant/1425.jpg  \n",
            "  inflating: test/malignant/1427.jpg  \n",
            "  inflating: test/malignant/1430.jpg  \n",
            "  inflating: test/malignant/1436.jpg  \n",
            "  inflating: test/malignant/1438.jpg  \n",
            "  inflating: test/malignant/1443.jpg  \n",
            "  inflating: test/malignant/1447.jpg  \n",
            "  inflating: test/malignant/1451.jpg  \n",
            "  inflating: test/malignant/1461.jpg  \n",
            "  inflating: test/malignant/1464.jpg  \n",
            "  inflating: test/malignant/1484.jpg  \n",
            "  inflating: test/malignant/1489.jpg  \n",
            "  inflating: test/malignant/1495.jpg  \n",
            "  inflating: test/malignant/1499.jpg  \n",
            "  inflating: test/malignant/156.jpg  \n",
            "  inflating: test/malignant/161.jpg  \n",
            "  inflating: test/malignant/17.jpg   \n",
            "  inflating: test/malignant/173.jpg  \n",
            "  inflating: test/malignant/179.jpg  \n",
            "  inflating: test/malignant/182.jpg  \n",
            "  inflating: test/malignant/184.jpg  \n",
            "  inflating: test/malignant/185.jpg  \n",
            "  inflating: test/malignant/186.jpg  \n",
            "  inflating: test/malignant/190.jpg  \n",
            "  inflating: test/malignant/193.jpg  \n",
            "  inflating: test/malignant/195.jpg  \n",
            "  inflating: test/malignant/196.jpg  \n",
            "  inflating: test/malignant/200.jpg  \n",
            "  inflating: test/malignant/208.jpg  \n",
            "  inflating: test/malignant/231.jpg  \n",
            "  inflating: test/malignant/232.jpg  \n",
            "  inflating: test/malignant/237.jpg  \n",
            "  inflating: test/malignant/238.jpg  \n",
            "  inflating: test/malignant/24.jpg   \n",
            "  inflating: test/malignant/247.jpg  \n",
            "  inflating: test/malignant/256.jpg  \n",
            "  inflating: test/malignant/257.jpg  \n",
            "  inflating: test/malignant/258.jpg  \n",
            "  inflating: test/malignant/260.jpg  \n",
            "  inflating: test/malignant/275.jpg  \n",
            "  inflating: test/malignant/276.jpg  \n",
            "  inflating: test/malignant/3.jpg    \n",
            "  inflating: test/malignant/303.jpg  \n",
            "  inflating: test/malignant/307.jpg  \n",
            "  inflating: test/malignant/310.jpg  \n",
            "  inflating: test/malignant/317.jpg  \n",
            "  inflating: test/malignant/318.jpg  \n",
            "  inflating: test/malignant/322.jpg  \n",
            "  inflating: test/malignant/33.jpg   \n",
            "  inflating: test/malignant/338.jpg  \n",
            "  inflating: test/malignant/342.jpg  \n",
            "  inflating: test/malignant/343.jpg  \n",
            "  inflating: test/malignant/348.jpg  \n",
            "  inflating: test/malignant/355.jpg  \n",
            "  inflating: test/malignant/356.jpg  \n",
            "  inflating: test/malignant/360.jpg  \n",
            "  inflating: test/malignant/364.jpg  \n",
            "  inflating: test/malignant/375.jpg  \n",
            "  inflating: test/malignant/381.jpg  \n",
            "  inflating: test/malignant/382.jpg  \n",
            "  inflating: test/malignant/384.jpg  \n",
            "  inflating: test/malignant/389.jpg  \n",
            "  inflating: test/malignant/39.jpg   \n",
            "  inflating: test/malignant/390.jpg  \n",
            "  inflating: test/malignant/394.jpg  \n",
            "  inflating: test/malignant/399.jpg  \n",
            "  inflating: test/malignant/4.jpg    \n",
            "  inflating: test/malignant/402.jpg  \n",
            "  inflating: test/malignant/405.jpg  \n",
            "  inflating: test/malignant/407.jpg  \n",
            "  inflating: test/malignant/409.jpg  \n",
            "  inflating: test/malignant/419.jpg  \n",
            "  inflating: test/malignant/421.jpg  \n",
            "  inflating: test/malignant/424.jpg  \n",
            "  inflating: test/malignant/426.jpg  \n",
            "  inflating: test/malignant/428.jpg  \n",
            "  inflating: test/malignant/430.jpg  \n",
            "  inflating: test/malignant/436.jpg  \n",
            "  inflating: test/malignant/437.jpg  \n",
            "  inflating: test/malignant/44.jpg   \n",
            "  inflating: test/malignant/445.jpg  \n",
            "  inflating: test/malignant/450.jpg  \n",
            "  inflating: test/malignant/459.jpg  \n",
            "  inflating: test/malignant/46.jpg   \n",
            "  inflating: test/malignant/463.jpg  \n",
            "  inflating: test/malignant/474.jpg  \n",
            "  inflating: test/malignant/479.jpg  \n",
            "  inflating: test/malignant/483.jpg  \n",
            "  inflating: test/malignant/501.jpg  \n",
            "  inflating: test/malignant/504.jpg  \n",
            "  inflating: test/malignant/507.jpg  \n",
            "  inflating: test/malignant/508.jpg  \n",
            "  inflating: test/malignant/511.jpg  \n",
            "  inflating: test/malignant/519.jpg  \n",
            "  inflating: test/malignant/52.jpg   \n",
            "  inflating: test/malignant/528.jpg  \n",
            "  inflating: test/malignant/536.jpg  \n",
            "  inflating: test/malignant/54.jpg   \n",
            "  inflating: test/malignant/546.jpg  \n",
            "  inflating: test/malignant/554.jpg  \n",
            "  inflating: test/malignant/556.jpg  \n",
            "  inflating: test/malignant/562.jpg  \n",
            "  inflating: test/malignant/568.jpg  \n",
            "  inflating: test/malignant/57.jpg   \n",
            "  inflating: test/malignant/570.jpg  \n",
            "  inflating: test/malignant/572.jpg  \n",
            "  inflating: test/malignant/573.jpg  \n",
            "  inflating: test/malignant/575.jpg  \n",
            "  inflating: test/malignant/58.jpg   \n",
            "  inflating: test/malignant/590.jpg  \n",
            "  inflating: test/malignant/592.jpg  \n",
            "  inflating: test/malignant/593.jpg  \n",
            "  inflating: test/malignant/596.jpg  \n",
            "  inflating: test/malignant/602.jpg  \n",
            "  inflating: test/malignant/603.jpg  \n",
            "  inflating: test/malignant/614.jpg  \n",
            "  inflating: test/malignant/615.jpg  \n",
            "  inflating: test/malignant/619.jpg  \n",
            "  inflating: test/malignant/62.jpg   \n",
            "  inflating: test/malignant/628.jpg  \n",
            "  inflating: test/malignant/638.jpg  \n",
            "  inflating: test/malignant/641.jpg  \n",
            "  inflating: test/malignant/643.jpg  \n",
            "  inflating: test/malignant/65.jpg   \n",
            "  inflating: test/malignant/653.jpg  \n",
            "  inflating: test/malignant/658.jpg  \n",
            "  inflating: test/malignant/66.jpg   \n",
            "  inflating: test/malignant/660.jpg  \n",
            "  inflating: test/malignant/667.jpg  \n",
            "  inflating: test/malignant/670.jpg  \n",
            "  inflating: test/malignant/674.jpg  \n",
            "  inflating: test/malignant/679.jpg  \n",
            "  inflating: test/malignant/68.jpg   \n",
            "  inflating: test/malignant/686.jpg  \n",
            "  inflating: test/malignant/694.jpg  \n",
            "  inflating: test/malignant/696.jpg  \n",
            "  inflating: test/malignant/706.jpg  \n",
            "  inflating: test/malignant/709.jpg  \n",
            "  inflating: test/malignant/713.jpg  \n",
            "  inflating: test/malignant/73.jpg   \n",
            "  inflating: test/malignant/735.jpg  \n",
            "  inflating: test/malignant/739.jpg  \n",
            "  inflating: test/malignant/74.jpg   \n",
            "  inflating: test/malignant/744.jpg  \n",
            "  inflating: test/malignant/747.jpg  \n",
            "  inflating: test/malignant/749.jpg  \n",
            "  inflating: test/malignant/757.jpg  \n",
            "  inflating: test/malignant/759.jpg  \n",
            "  inflating: test/malignant/762.jpg  \n",
            "  inflating: test/malignant/763.jpg  \n",
            "  inflating: test/malignant/771.jpg  \n",
            "  inflating: test/malignant/773.jpg  \n",
            "  inflating: test/malignant/778.jpg  \n",
            "  inflating: test/malignant/792.jpg  \n",
            "  inflating: test/malignant/794.jpg  \n",
            "  inflating: test/malignant/797.jpg  \n",
            "  inflating: test/malignant/8.jpg    \n",
            "  inflating: test/malignant/804.jpg  \n",
            "  inflating: test/malignant/808.jpg  \n",
            "  inflating: test/malignant/81.jpg   \n",
            "  inflating: test/malignant/817.jpg  \n",
            "  inflating: test/malignant/822.jpg  \n",
            "  inflating: test/malignant/826.jpg  \n",
            "  inflating: test/malignant/832.jpg  \n",
            "  inflating: test/malignant/836.jpg  \n",
            "  inflating: test/malignant/838.jpg  \n",
            "  inflating: test/malignant/839.jpg  \n",
            "  inflating: test/malignant/85.jpg   \n",
            "  inflating: test/malignant/852.jpg  \n",
            "  inflating: test/malignant/859.jpg  \n",
            "  inflating: test/malignant/864.jpg  \n",
            "  inflating: test/malignant/866.jpg  \n",
            "  inflating: test/malignant/868.jpg  \n",
            "  inflating: test/malignant/87.jpg   \n",
            "  inflating: test/malignant/871.jpg  \n",
            "  inflating: test/malignant/874.jpg  \n",
            "  inflating: test/malignant/881.jpg  \n",
            "  inflating: test/malignant/887.jpg  \n",
            "  inflating: test/malignant/893.jpg  \n",
            "  inflating: test/malignant/894.jpg  \n",
            "  inflating: test/malignant/905.jpg  \n",
            "  inflating: test/malignant/91.jpg   \n",
            "  inflating: test/malignant/92.jpg   \n",
            "  inflating: test/malignant/927.jpg  \n",
            "  inflating: test/malignant/93.jpg   \n",
            "  inflating: test/malignant/934.jpg  \n",
            "  inflating: test/malignant/937.jpg  \n",
            "  inflating: test/malignant/940.jpg  \n",
            "  inflating: test/malignant/947.jpg  \n",
            "  inflating: test/malignant/948.jpg  \n",
            "  inflating: test/malignant/949.jpg  \n",
            "  inflating: test/malignant/953.jpg  \n",
            "  inflating: test/malignant/985.jpg  \n",
            "  inflating: test/malignant/992.jpg  \n",
            "  inflating: test/malignant/994.jpg  \n",
            "  inflating: test/malignant/995.jpg  \n",
            "  inflating: train/benign/100.jpg    \n",
            "  inflating: train/benign/1000.jpg   \n",
            "  inflating: train/benign/1001.jpg   \n",
            "  inflating: train/benign/1002.jpg   \n",
            "  inflating: train/benign/1004.jpg   \n",
            "  inflating: train/benign/1005.jpg   \n",
            "  inflating: train/benign/1007.jpg   \n",
            "  inflating: train/benign/1008.jpg   \n",
            "  inflating: train/benign/1009.jpg   \n",
            "  inflating: train/benign/101.jpg    \n",
            "  inflating: train/benign/1010.jpg   \n",
            "  inflating: train/benign/1011.jpg   \n",
            "  inflating: train/benign/1012.jpg   \n",
            "  inflating: train/benign/1014.jpg   \n",
            "  inflating: train/benign/1015.jpg   \n",
            "  inflating: train/benign/1016.jpg   \n",
            "  inflating: train/benign/1017.jpg   \n",
            "  inflating: train/benign/102.jpg    \n",
            "  inflating: train/benign/1020.jpg   \n",
            "  inflating: train/benign/1021.jpg   \n",
            "  inflating: train/benign/1022.jpg   \n",
            "  inflating: train/benign/1024.jpg   \n",
            "  inflating: train/benign/1026.jpg   \n",
            "  inflating: train/benign/1027.jpg   \n",
            "  inflating: train/benign/1028.jpg   \n",
            "  inflating: train/benign/103.jpg    \n",
            "  inflating: train/benign/1030.jpg   \n",
            "  inflating: train/benign/1031.jpg   \n",
            "  inflating: train/benign/1032.jpg   \n",
            "  inflating: train/benign/1035.jpg   \n",
            "  inflating: train/benign/1036.jpg   \n",
            "  inflating: train/benign/1037.jpg   \n",
            "  inflating: train/benign/1038.jpg   \n",
            "  inflating: train/benign/1039.jpg   \n",
            "  inflating: train/benign/104.jpg    \n",
            "  inflating: train/benign/1040.jpg   \n",
            "  inflating: train/benign/1041.jpg   \n",
            "  inflating: train/benign/1043.jpg   \n",
            "  inflating: train/benign/1045.jpg   \n",
            "  inflating: train/benign/1046.jpg   \n",
            "  inflating: train/benign/1047.jpg   \n",
            "  inflating: train/benign/1048.jpg   \n",
            "  inflating: train/benign/1049.jpg   \n",
            "  inflating: train/benign/1050.jpg   \n",
            "  inflating: train/benign/1051.jpg   \n",
            "  inflating: train/benign/1052.jpg   \n",
            "  inflating: train/benign/1053.jpg   \n",
            "  inflating: train/benign/1054.jpg   \n",
            "  inflating: train/benign/1056.jpg   \n",
            "  inflating: train/benign/1057.jpg   \n",
            "  inflating: train/benign/1058.jpg   \n",
            "  inflating: train/benign/1059.jpg   \n",
            "  inflating: train/benign/106.jpg    \n",
            "  inflating: train/benign/1060.jpg   \n",
            "  inflating: train/benign/1062.jpg   \n",
            "  inflating: train/benign/1063.jpg   \n",
            "  inflating: train/benign/1064.jpg   \n",
            "  inflating: train/benign/1065.jpg   \n",
            "  inflating: train/benign/1066.jpg   \n",
            "  inflating: train/benign/1067.jpg   \n",
            "  inflating: train/benign/1068.jpg   \n",
            "  inflating: train/benign/1069.jpg   \n",
            "  inflating: train/benign/107.jpg    \n",
            "  inflating: train/benign/1071.jpg   \n",
            "  inflating: train/benign/1072.jpg   \n",
            "  inflating: train/benign/1073.jpg   \n",
            "  inflating: train/benign/1075.jpg   \n",
            "  inflating: train/benign/1076.jpg   \n",
            "  inflating: train/benign/1078.jpg   \n",
            "  inflating: train/benign/1079.jpg   \n",
            "  inflating: train/benign/108.jpg    \n",
            "  inflating: train/benign/1081.jpg   \n",
            "  inflating: train/benign/1082.jpg   \n",
            "  inflating: train/benign/1083.jpg   \n",
            "  inflating: train/benign/1084.jpg   \n",
            "  inflating: train/benign/1085.jpg   \n",
            "  inflating: train/benign/1086.jpg   \n",
            "  inflating: train/benign/1089.jpg   \n",
            "  inflating: train/benign/109.jpg    \n",
            "  inflating: train/benign/1090.jpg   \n",
            "  inflating: train/benign/1091.jpg   \n",
            "  inflating: train/benign/1093.jpg   \n",
            "  inflating: train/benign/1094.jpg   \n",
            "  inflating: train/benign/1095.jpg   \n",
            "  inflating: train/benign/1096.jpg   \n",
            "  inflating: train/benign/1097.jpg   \n",
            "  inflating: train/benign/1098.jpg   \n",
            "  inflating: train/benign/1099.jpg   \n",
            "  inflating: train/benign/110.jpg    \n",
            "  inflating: train/benign/1100.jpg   \n",
            "  inflating: train/benign/1101.jpg   \n",
            "  inflating: train/benign/1102.jpg   \n",
            "  inflating: train/benign/1103.jpg   \n",
            "  inflating: train/benign/1104.jpg   \n",
            "  inflating: train/benign/1105.jpg   \n",
            "  inflating: train/benign/1106.jpg   \n",
            "  inflating: train/benign/1107.jpg   \n",
            "  inflating: train/benign/1108.jpg   \n",
            "  inflating: train/benign/1109.jpg   \n",
            "  inflating: train/benign/111.jpg    \n",
            "  inflating: train/benign/1111.jpg   \n",
            "  inflating: train/benign/1113.jpg   \n",
            "  inflating: train/benign/1114.jpg   \n",
            "  inflating: train/benign/1116.jpg   \n",
            "  inflating: train/benign/1117.jpg   \n",
            "  inflating: train/benign/1119.jpg   \n",
            "  inflating: train/benign/112.jpg    \n",
            "  inflating: train/benign/1120.jpg   \n",
            "  inflating: train/benign/1121.jpg   \n",
            "  inflating: train/benign/1122.jpg   \n",
            "  inflating: train/benign/1123.jpg   \n",
            "  inflating: train/benign/1124.jpg   \n",
            "  inflating: train/benign/1127.jpg   \n",
            "  inflating: train/benign/1128.jpg   \n",
            "  inflating: train/benign/1129.jpg   \n",
            "  inflating: train/benign/113.jpg    \n",
            "  inflating: train/benign/1131.jpg   \n",
            "  inflating: train/benign/1132.jpg   \n",
            "  inflating: train/benign/1133.jpg   \n",
            "  inflating: train/benign/1136.jpg   \n",
            "  inflating: train/benign/1137.jpg   \n",
            "  inflating: train/benign/1138.jpg   \n",
            "  inflating: train/benign/114.jpg    \n",
            "  inflating: train/benign/1140.jpg   \n",
            "  inflating: train/benign/1141.jpg   \n",
            "  inflating: train/benign/1142.jpg   \n",
            "  inflating: train/benign/1144.jpg   \n",
            "  inflating: train/benign/1145.jpg   \n",
            "  inflating: train/benign/1147.jpg   \n",
            "  inflating: train/benign/1148.jpg   \n",
            "  inflating: train/benign/1149.jpg   \n",
            "  inflating: train/benign/115.jpg    \n",
            "  inflating: train/benign/1150.jpg   \n",
            "  inflating: train/benign/1152.jpg   \n",
            "  inflating: train/benign/1153.jpg   \n",
            "  inflating: train/benign/1154.jpg   \n",
            "  inflating: train/benign/1156.jpg   \n",
            "  inflating: train/benign/1157.jpg   \n",
            "  inflating: train/benign/1158.jpg   \n",
            "  inflating: train/benign/1159.jpg   \n",
            "  inflating: train/benign/116.jpg    \n",
            "  inflating: train/benign/1160.jpg   \n",
            "  inflating: train/benign/1161.jpg   \n",
            "  inflating: train/benign/1162.jpg   \n",
            "  inflating: train/benign/1163.jpg   \n",
            "  inflating: train/benign/1164.jpg   \n",
            "  inflating: train/benign/1165.jpg   \n",
            "  inflating: train/benign/1167.jpg   \n",
            "  inflating: train/benign/1168.jpg   \n",
            "  inflating: train/benign/1169.jpg   \n",
            "  inflating: train/benign/117.jpg    \n",
            "  inflating: train/benign/1171.jpg   \n",
            "  inflating: train/benign/1172.jpg   \n",
            "  inflating: train/benign/1174.jpg   \n",
            "  inflating: train/benign/1175.jpg   \n",
            "  inflating: train/benign/1176.jpg   \n",
            "  inflating: train/benign/1178.jpg   \n",
            "  inflating: train/benign/1179.jpg   \n",
            "  inflating: train/benign/118.jpg    \n",
            "  inflating: train/benign/1181.jpg   \n",
            "  inflating: train/benign/1182.jpg   \n",
            "  inflating: train/benign/1184.jpg   \n",
            "  inflating: train/benign/1185.jpg   \n",
            "  inflating: train/benign/1186.jpg   \n",
            "  inflating: train/benign/1187.jpg   \n",
            "  inflating: train/benign/1188.jpg   \n",
            "  inflating: train/benign/1189.jpg   \n",
            "  inflating: train/benign/1190.jpg   \n",
            "  inflating: train/benign/1192.jpg   \n",
            "  inflating: train/benign/1193.jpg   \n",
            "  inflating: train/benign/1194.jpg   \n",
            "  inflating: train/benign/1195.jpg   \n",
            "  inflating: train/benign/1196.jpg   \n",
            "  inflating: train/benign/1197.jpg   \n",
            "  inflating: train/benign/1198.jpg   \n",
            "  inflating: train/benign/1199.jpg   \n",
            "  inflating: train/benign/12.jpg     \n",
            "  inflating: train/benign/120.jpg    \n",
            "  inflating: train/benign/1201.jpg   \n",
            "  inflating: train/benign/1202.jpg   \n",
            "  inflating: train/benign/1204.jpg   \n",
            "  inflating: train/benign/1205.jpg   \n",
            "  inflating: train/benign/1206.jpg   \n",
            "  inflating: train/benign/1207.jpg   \n",
            "  inflating: train/benign/1209.jpg   \n",
            "  inflating: train/benign/121.jpg    \n",
            "  inflating: train/benign/1210.jpg   \n",
            "  inflating: train/benign/1211.jpg   \n",
            "  inflating: train/benign/1212.jpg   \n",
            "  inflating: train/benign/1213.jpg   \n",
            "  inflating: train/benign/1216.jpg   \n",
            "  inflating: train/benign/1217.jpg   \n",
            "  inflating: train/benign/1218.jpg   \n",
            "  inflating: train/benign/1219.jpg   \n",
            "  inflating: train/benign/1220.jpg   \n",
            "  inflating: train/benign/1221.jpg   \n",
            "  inflating: train/benign/1222.jpg   \n",
            "  inflating: train/benign/1223.jpg   \n",
            "  inflating: train/benign/1224.jpg   \n",
            "  inflating: train/benign/1225.jpg   \n",
            "  inflating: train/benign/1227.jpg   \n",
            "  inflating: train/benign/1228.jpg   \n",
            "  inflating: train/benign/1229.jpg   \n",
            "  inflating: train/benign/123.jpg    \n",
            "  inflating: train/benign/1230.jpg   \n",
            "  inflating: train/benign/1232.jpg   \n",
            "  inflating: train/benign/1233.jpg   \n",
            "  inflating: train/benign/1234.jpg   \n",
            "  inflating: train/benign/1235.jpg   \n",
            "  inflating: train/benign/1236.jpg   \n",
            "  inflating: train/benign/1237.jpg   \n",
            "  inflating: train/benign/1238.jpg   \n",
            "  inflating: train/benign/1239.jpg   \n",
            "  inflating: train/benign/124.jpg    \n",
            "  inflating: train/benign/1240.jpg   \n",
            "  inflating: train/benign/1241.jpg   \n",
            "  inflating: train/benign/1245.jpg   \n",
            "  inflating: train/benign/1246.jpg   \n",
            "  inflating: train/benign/1247.jpg   \n",
            "  inflating: train/benign/1248.jpg   \n",
            "  inflating: train/benign/1249.jpg   \n",
            "  inflating: train/benign/125.jpg    \n",
            "  inflating: train/benign/1250.jpg   \n",
            "  inflating: train/benign/1251.jpg   \n",
            "  inflating: train/benign/1252.jpg   \n",
            "  inflating: train/benign/1254.jpg   \n",
            "  inflating: train/benign/1255.jpg   \n",
            "  inflating: train/benign/1256.jpg   \n",
            "  inflating: train/benign/1257.jpg   \n",
            "  inflating: train/benign/1258.jpg   \n",
            "  inflating: train/benign/1259.jpg   \n",
            "  inflating: train/benign/126.jpg    \n",
            "  inflating: train/benign/1260.jpg   \n",
            "  inflating: train/benign/1262.jpg   \n",
            "  inflating: train/benign/1263.jpg   \n",
            "  inflating: train/benign/1264.jpg   \n",
            "  inflating: train/benign/1267.jpg   \n",
            "  inflating: train/benign/1268.jpg   \n",
            "  inflating: train/benign/1270.jpg   \n",
            "  inflating: train/benign/1271.jpg   \n",
            "  inflating: train/benign/1272.jpg   \n",
            "  inflating: train/benign/1274.jpg   \n",
            "  inflating: train/benign/1275.jpg   \n",
            "  inflating: train/benign/1279.jpg   \n",
            "  inflating: train/benign/128.jpg    \n",
            "  inflating: train/benign/1280.jpg   \n",
            "  inflating: train/benign/1281.jpg   \n",
            "  inflating: train/benign/1282.jpg   \n",
            "  inflating: train/benign/1283.jpg   \n",
            "  inflating: train/benign/1284.jpg   \n",
            "  inflating: train/benign/1285.jpg   \n",
            "  inflating: train/benign/1286.jpg   \n",
            "  inflating: train/benign/1287.jpg   \n",
            "  inflating: train/benign/1289.jpg   \n",
            "  inflating: train/benign/129.jpg    \n",
            "  inflating: train/benign/1291.jpg   \n",
            "  inflating: train/benign/1292.jpg   \n",
            "  inflating: train/benign/1293.jpg   \n",
            "  inflating: train/benign/1294.jpg   \n",
            "  inflating: train/benign/1295.jpg   \n",
            "  inflating: train/benign/1296.jpg   \n",
            "  inflating: train/benign/1298.jpg   \n",
            "  inflating: train/benign/13.jpg     \n",
            "  inflating: train/benign/130.jpg    \n",
            "  inflating: train/benign/1300.jpg   \n",
            "  inflating: train/benign/1301.jpg   \n",
            "  inflating: train/benign/1302.jpg   \n",
            "  inflating: train/benign/1303.jpg   \n",
            "  inflating: train/benign/1304.jpg   \n",
            "  inflating: train/benign/1305.jpg   \n",
            "  inflating: train/benign/1306.jpg   \n",
            "  inflating: train/benign/1307.jpg   \n",
            "  inflating: train/benign/1308.jpg   \n",
            "  inflating: train/benign/1309.jpg   \n",
            "  inflating: train/benign/131.jpg    \n",
            "  inflating: train/benign/1311.jpg   \n",
            "  inflating: train/benign/1312.jpg   \n",
            "  inflating: train/benign/1313.jpg   \n",
            "  inflating: train/benign/1314.jpg   \n",
            "  inflating: train/benign/1315.jpg   \n",
            "  inflating: train/benign/1316.jpg   \n",
            "  inflating: train/benign/1317.jpg   \n",
            "  inflating: train/benign/1318.jpg   \n",
            "  inflating: train/benign/132.jpg    \n",
            "  inflating: train/benign/1320.jpg   \n",
            "  inflating: train/benign/1323.jpg   \n",
            "  inflating: train/benign/1324.jpg   \n",
            "  inflating: train/benign/1325.jpg   \n",
            "  inflating: train/benign/1326.jpg   \n",
            "  inflating: train/benign/1327.jpg   \n",
            "  inflating: train/benign/1328.jpg   \n",
            "  inflating: train/benign/1329.jpg   \n",
            "  inflating: train/benign/133.jpg    \n",
            "  inflating: train/benign/1330.jpg   \n",
            "  inflating: train/benign/1331.jpg   \n",
            "  inflating: train/benign/1332.jpg   \n",
            "  inflating: train/benign/1333.jpg   \n",
            "  inflating: train/benign/1335.jpg   \n",
            "  inflating: train/benign/1336.jpg   \n",
            "  inflating: train/benign/1337.jpg   \n",
            "  inflating: train/benign/1338.jpg   \n",
            "  inflating: train/benign/1339.jpg   \n",
            "  inflating: train/benign/134.jpg    \n",
            "  inflating: train/benign/1340.jpg   \n",
            "  inflating: train/benign/1341.jpg   \n",
            "  inflating: train/benign/1344.jpg   \n",
            "  inflating: train/benign/1345.jpg   \n",
            "  inflating: train/benign/1346.jpg   \n",
            "  inflating: train/benign/1347.jpg   \n",
            "  inflating: train/benign/1348.jpg   \n",
            "  inflating: train/benign/1349.jpg   \n",
            "  inflating: train/benign/135.jpg    \n",
            "  inflating: train/benign/1351.jpg   \n",
            "  inflating: train/benign/1352.jpg   \n",
            "  inflating: train/benign/1353.jpg   \n",
            "  inflating: train/benign/1355.jpg   \n",
            "  inflating: train/benign/1356.jpg   \n",
            "  inflating: train/benign/1358.jpg   \n",
            "  inflating: train/benign/136.jpg    \n",
            "  inflating: train/benign/1360.jpg   \n",
            "  inflating: train/benign/1361.jpg   \n",
            "  inflating: train/benign/1363.jpg   \n",
            "  inflating: train/benign/1364.jpg   \n",
            "  inflating: train/benign/1366.jpg   \n",
            "  inflating: train/benign/1368.jpg   \n",
            "  inflating: train/benign/1369.jpg   \n",
            "  inflating: train/benign/137.jpg    \n",
            "  inflating: train/benign/1370.jpg   \n",
            "  inflating: train/benign/1371.jpg   \n",
            "  inflating: train/benign/1372.jpg   \n",
            "  inflating: train/benign/1374.jpg   \n",
            "  inflating: train/benign/1375.jpg   \n",
            "  inflating: train/benign/1379.jpg   \n",
            "  inflating: train/benign/138.jpg    \n",
            "  inflating: train/benign/1380.jpg   \n",
            "  inflating: train/benign/1382.jpg   \n",
            "  inflating: train/benign/1383.jpg   \n",
            "  inflating: train/benign/1384.jpg   \n",
            "  inflating: train/benign/1385.jpg   \n",
            "  inflating: train/benign/1386.jpg   \n",
            "  inflating: train/benign/1387.jpg   \n",
            "  inflating: train/benign/1388.jpg   \n",
            "  inflating: train/benign/1389.jpg   \n",
            "  inflating: train/benign/139.jpg    \n",
            "  inflating: train/benign/1390.jpg   \n",
            "  inflating: train/benign/1391.jpg   \n",
            "  inflating: train/benign/1392.jpg   \n",
            "  inflating: train/benign/1394.jpg   \n",
            "  inflating: train/benign/1395.jpg   \n",
            "  inflating: train/benign/1396.jpg   \n",
            "  inflating: train/benign/1397.jpg   \n",
            "  inflating: train/benign/1398.jpg   \n",
            "  inflating: train/benign/1399.jpg   \n",
            "  inflating: train/benign/14.jpg     \n",
            "  inflating: train/benign/1402.jpg   \n",
            "  inflating: train/benign/1403.jpg   \n",
            "  inflating: train/benign/1404.jpg   \n",
            "  inflating: train/benign/1405.jpg   \n",
            "  inflating: train/benign/1406.jpg   \n",
            "  inflating: train/benign/1407.jpg   \n",
            "  inflating: train/benign/1408.jpg   \n",
            "  inflating: train/benign/141.jpg    \n",
            "  inflating: train/benign/1410.jpg   \n",
            "  inflating: train/benign/1411.jpg   \n",
            "  inflating: train/benign/1413.jpg   \n",
            "  inflating: train/benign/1414.jpg   \n",
            "  inflating: train/benign/1416.jpg   \n",
            "  inflating: train/benign/1417.jpg   \n",
            "  inflating: train/benign/1418.jpg   \n",
            "  inflating: train/benign/1419.jpg   \n",
            "  inflating: train/benign/142.jpg    \n",
            "  inflating: train/benign/1420.jpg   \n",
            "  inflating: train/benign/1421.jpg   \n",
            "  inflating: train/benign/1422.jpg   \n",
            "  inflating: train/benign/1423.jpg   \n",
            "  inflating: train/benign/1424.jpg   \n",
            "  inflating: train/benign/1425.jpg   \n",
            "  inflating: train/benign/1426.jpg   \n",
            "  inflating: train/benign/1427.jpg   \n",
            "  inflating: train/benign/1428.jpg   \n",
            "  inflating: train/benign/1429.jpg   \n",
            "  inflating: train/benign/143.jpg    \n",
            "  inflating: train/benign/1430.jpg   \n",
            "  inflating: train/benign/1431.jpg   \n",
            "  inflating: train/benign/1432.jpg   \n",
            "  inflating: train/benign/1433.jpg   \n",
            "  inflating: train/benign/1434.jpg   \n",
            "  inflating: train/benign/1435.jpg   \n",
            "  inflating: train/benign/1436.jpg   \n",
            "  inflating: train/benign/1437.jpg   \n",
            "  inflating: train/benign/1438.jpg   \n",
            "  inflating: train/benign/1439.jpg   \n",
            "  inflating: train/benign/1440.jpg   \n",
            "  inflating: train/benign/1442.jpg   \n",
            "  inflating: train/benign/1444.jpg   \n",
            "  inflating: train/benign/1446.jpg   \n",
            "  inflating: train/benign/1447.jpg   \n",
            "  inflating: train/benign/1449.jpg   \n",
            "  inflating: train/benign/145.jpg    \n",
            "  inflating: train/benign/1450.jpg   \n",
            "  inflating: train/benign/1451.jpg   \n",
            "  inflating: train/benign/1452.jpg   \n",
            "  inflating: train/benign/1453.jpg   \n",
            "  inflating: train/benign/1454.jpg   \n",
            "  inflating: train/benign/1455.jpg   \n",
            "  inflating: train/benign/1456.jpg   \n",
            "  inflating: train/benign/1457.jpg   \n",
            "  inflating: train/benign/1458.jpg   \n",
            "  inflating: train/benign/1459.jpg   \n",
            "  inflating: train/benign/146.jpg    \n",
            "  inflating: train/benign/1460.jpg   \n",
            "  inflating: train/benign/1461.jpg   \n",
            "  inflating: train/benign/1462.jpg   \n",
            "  inflating: train/benign/1463.jpg   \n",
            "  inflating: train/benign/1464.jpg   \n",
            "  inflating: train/benign/1465.jpg   \n",
            "  inflating: train/benign/1467.jpg   \n",
            "  inflating: train/benign/1469.jpg   \n",
            "  inflating: train/benign/1470.jpg   \n",
            "  inflating: train/benign/1472.jpg   \n",
            "  inflating: train/benign/1474.jpg   \n",
            "  inflating: train/benign/1475.jpg   \n",
            "  inflating: train/benign/1476.jpg   \n",
            "  inflating: train/benign/1477.jpg   \n",
            "  inflating: train/benign/1478.jpg   \n",
            "  inflating: train/benign/148.jpg    \n",
            "  inflating: train/benign/1480.jpg   \n",
            "  inflating: train/benign/1482.jpg   \n",
            "  inflating: train/benign/1484.jpg   \n",
            "  inflating: train/benign/1486.jpg   \n",
            "  inflating: train/benign/1487.jpg   \n",
            "  inflating: train/benign/1489.jpg   \n",
            "  inflating: train/benign/149.jpg    \n",
            "  inflating: train/benign/1490.jpg   \n",
            "  inflating: train/benign/1491.jpg   \n",
            "  inflating: train/benign/1493.jpg   \n",
            "  inflating: train/benign/1494.jpg   \n",
            "  inflating: train/benign/1495.jpg   \n",
            "  inflating: train/benign/1496.jpg   \n",
            "  inflating: train/benign/1497.jpg   \n",
            "  inflating: train/benign/1498.jpg   \n",
            "  inflating: train/benign/150.jpg    \n",
            "  inflating: train/benign/1500.jpg   \n",
            "  inflating: train/benign/1501.jpg   \n",
            "  inflating: train/benign/1503.jpg   \n",
            "  inflating: train/benign/1504.jpg   \n",
            "  inflating: train/benign/1505.jpg   \n",
            "  inflating: train/benign/1506.jpg   \n",
            "  inflating: train/benign/1507.jpg   \n",
            "  inflating: train/benign/1508.jpg   \n",
            "  inflating: train/benign/1509.jpg   \n",
            "  inflating: train/benign/151.jpg    \n",
            "  inflating: train/benign/1510.jpg   \n",
            "  inflating: train/benign/1511.jpg   \n",
            "  inflating: train/benign/1512.jpg   \n",
            "  inflating: train/benign/1513.jpg   \n",
            "  inflating: train/benign/1515.jpg   \n",
            "  inflating: train/benign/1517.jpg   \n",
            "  inflating: train/benign/1518.jpg   \n",
            "  inflating: train/benign/152.jpg    \n",
            "  inflating: train/benign/1520.jpg   \n",
            "  inflating: train/benign/1522.jpg   \n",
            "  inflating: train/benign/1523.jpg   \n",
            "  inflating: train/benign/1524.jpg   \n",
            "  inflating: train/benign/1525.jpg   \n",
            "  inflating: train/benign/1526.jpg   \n",
            "  inflating: train/benign/1527.jpg   \n",
            "  inflating: train/benign/1528.jpg   \n",
            "  inflating: train/benign/1529.jpg   \n",
            "  inflating: train/benign/153.jpg    \n",
            "  inflating: train/benign/1531.jpg   \n",
            "  inflating: train/benign/1532.jpg   \n",
            "  inflating: train/benign/1533.jpg   \n",
            "  inflating: train/benign/1534.jpg   \n",
            "  inflating: train/benign/1535.jpg   \n",
            "  inflating: train/benign/1536.jpg   \n",
            "  inflating: train/benign/1539.jpg   \n",
            "  inflating: train/benign/1540.jpg   \n",
            "  inflating: train/benign/1541.jpg   \n",
            "  inflating: train/benign/1542.jpg   \n",
            "  inflating: train/benign/1543.jpg   \n",
            "  inflating: train/benign/1544.jpg   \n",
            "  inflating: train/benign/1546.jpg   \n",
            "  inflating: train/benign/1547.jpg   \n",
            "  inflating: train/benign/1548.jpg   \n",
            "  inflating: train/benign/1549.jpg   \n",
            "  inflating: train/benign/155.jpg    \n",
            "  inflating: train/benign/1550.jpg   \n",
            "  inflating: train/benign/1551.jpg   \n",
            "  inflating: train/benign/1552.jpg   \n",
            "  inflating: train/benign/1553.jpg   \n",
            "  inflating: train/benign/1554.jpg   \n",
            "  inflating: train/benign/1555.jpg   \n",
            "  inflating: train/benign/1556.jpg   \n",
            "  inflating: train/benign/1557.jpg   \n",
            "  inflating: train/benign/1558.jpg   \n",
            "  inflating: train/benign/156.jpg    \n",
            "  inflating: train/benign/1560.jpg   \n",
            "  inflating: train/benign/1561.jpg   \n",
            "  inflating: train/benign/1562.jpg   \n",
            "  inflating: train/benign/1563.jpg   \n",
            "  inflating: train/benign/1564.jpg   \n",
            "  inflating: train/benign/1565.jpg   \n",
            "  inflating: train/benign/1566.jpg   \n",
            "  inflating: train/benign/1567.jpg   \n",
            "  inflating: train/benign/1568.jpg   \n",
            "  inflating: train/benign/1569.jpg   \n",
            "  inflating: train/benign/157.jpg    \n",
            "  inflating: train/benign/1570.jpg   \n",
            "  inflating: train/benign/1571.jpg   \n",
            "  inflating: train/benign/1572.jpg   \n",
            "  inflating: train/benign/1573.jpg   \n",
            "  inflating: train/benign/1574.jpg   \n",
            "  inflating: train/benign/1575.jpg   \n",
            "  inflating: train/benign/1577.jpg   \n",
            "  inflating: train/benign/158.jpg    \n",
            "  inflating: train/benign/1580.jpg   \n",
            "  inflating: train/benign/1581.jpg   \n",
            "  inflating: train/benign/1582.jpg   \n",
            "  inflating: train/benign/1583.jpg   \n",
            "  inflating: train/benign/1584.jpg   \n",
            "  inflating: train/benign/1585.jpg   \n",
            "  inflating: train/benign/1586.jpg   \n",
            "  inflating: train/benign/1587.jpg   \n",
            "  inflating: train/benign/1588.jpg   \n",
            "  inflating: train/benign/1589.jpg   \n",
            "  inflating: train/benign/159.jpg    \n",
            "  inflating: train/benign/1590.jpg   \n",
            "  inflating: train/benign/1591.jpg   \n",
            "  inflating: train/benign/1593.jpg   \n",
            "  inflating: train/benign/1594.jpg   \n",
            "  inflating: train/benign/1595.jpg   \n",
            "  inflating: train/benign/1596.jpg   \n",
            "  inflating: train/benign/1597.jpg   \n",
            "  inflating: train/benign/1598.jpg   \n",
            "  inflating: train/benign/1599.jpg   \n",
            "  inflating: train/benign/160.jpg    \n",
            "  inflating: train/benign/1600.jpg   \n",
            "  inflating: train/benign/1601.jpg   \n",
            "  inflating: train/benign/1603.jpg   \n",
            "  inflating: train/benign/1604.jpg   \n",
            "  inflating: train/benign/1605.jpg   \n",
            "  inflating: train/benign/1606.jpg   \n",
            "  inflating: train/benign/1608.jpg   \n",
            "  inflating: train/benign/1609.jpg   \n",
            "  inflating: train/benign/1612.jpg   \n",
            "  inflating: train/benign/1613.jpg   \n",
            "  inflating: train/benign/1614.jpg   \n",
            "  inflating: train/benign/1615.jpg   \n",
            "  inflating: train/benign/1616.jpg   \n",
            "  inflating: train/benign/1617.jpg   \n",
            "  inflating: train/benign/1618.jpg   \n",
            "  inflating: train/benign/1619.jpg   \n",
            "  inflating: train/benign/162.jpg    \n",
            "  inflating: train/benign/1620.jpg   \n",
            "  inflating: train/benign/1621.jpg   \n",
            "  inflating: train/benign/1622.jpg   \n",
            "  inflating: train/benign/1623.jpg   \n",
            "  inflating: train/benign/1624.jpg   \n",
            "  inflating: train/benign/1625.jpg   \n",
            "  inflating: train/benign/1626.jpg   \n",
            "  inflating: train/benign/1627.jpg   \n",
            "  inflating: train/benign/1629.jpg   \n",
            "  inflating: train/benign/163.jpg    \n",
            "  inflating: train/benign/1630.jpg   \n",
            "  inflating: train/benign/1631.jpg   \n",
            "  inflating: train/benign/1633.jpg   \n",
            "  inflating: train/benign/1635.jpg   \n",
            "  inflating: train/benign/1636.jpg   \n",
            "  inflating: train/benign/1638.jpg   \n",
            "  inflating: train/benign/1639.jpg   \n",
            "  inflating: train/benign/164.jpg    \n",
            "  inflating: train/benign/1640.jpg   \n",
            "  inflating: train/benign/1641.jpg   \n",
            "  inflating: train/benign/1643.jpg   \n",
            "  inflating: train/benign/1644.jpg   \n",
            "  inflating: train/benign/1645.jpg   \n",
            "  inflating: train/benign/1647.jpg   \n",
            "  inflating: train/benign/1649.jpg   \n",
            "  inflating: train/benign/165.jpg    \n",
            "  inflating: train/benign/1650.jpg   \n",
            "  inflating: train/benign/1651.jpg   \n",
            "  inflating: train/benign/1652.jpg   \n",
            "  inflating: train/benign/1653.jpg   \n",
            "  inflating: train/benign/1654.jpg   \n",
            "  inflating: train/benign/1656.jpg   \n",
            "  inflating: train/benign/1658.jpg   \n",
            "  inflating: train/benign/1659.jpg   \n",
            "  inflating: train/benign/166.jpg    \n",
            "  inflating: train/benign/1660.jpg   \n",
            "  inflating: train/benign/1661.jpg   \n",
            "  inflating: train/benign/1662.jpg   \n",
            "  inflating: train/benign/1663.jpg   \n",
            "  inflating: train/benign/1664.jpg   \n",
            "  inflating: train/benign/1665.jpg   \n",
            "  inflating: train/benign/1666.jpg   \n",
            "  inflating: train/benign/1667.jpg   \n",
            "  inflating: train/benign/1668.jpg   \n",
            "  inflating: train/benign/1669.jpg   \n",
            "  inflating: train/benign/167.jpg    \n",
            "  inflating: train/benign/1670.jpg   \n",
            "  inflating: train/benign/1671.jpg   \n",
            "  inflating: train/benign/1673.jpg   \n",
            "  inflating: train/benign/1674.jpg   \n",
            "  inflating: train/benign/1675.jpg   \n",
            "  inflating: train/benign/1676.jpg   \n",
            "  inflating: train/benign/1677.jpg   \n",
            "  inflating: train/benign/1678.jpg   \n",
            "  inflating: train/benign/1679.jpg   \n",
            "  inflating: train/benign/168.jpg    \n",
            "  inflating: train/benign/1680.jpg   \n",
            "  inflating: train/benign/1681.jpg   \n",
            "  inflating: train/benign/1683.jpg   \n",
            "  inflating: train/benign/1684.jpg   \n",
            "  inflating: train/benign/1685.jpg   \n",
            "  inflating: train/benign/1686.jpg   \n",
            "  inflating: train/benign/1688.jpg   \n",
            "  inflating: train/benign/1689.jpg   \n",
            "  inflating: train/benign/169.jpg    \n",
            "  inflating: train/benign/1690.jpg   \n",
            "  inflating: train/benign/1691.jpg   \n",
            "  inflating: train/benign/1692.jpg   \n",
            "  inflating: train/benign/1693.jpg   \n",
            "  inflating: train/benign/1694.jpg   \n",
            "  inflating: train/benign/1695.jpg   \n",
            "  inflating: train/benign/1697.jpg   \n",
            "  inflating: train/benign/1698.jpg   \n",
            "  inflating: train/benign/1699.jpg   \n",
            "  inflating: train/benign/17.jpg     \n",
            "  inflating: train/benign/170.jpg    \n",
            "  inflating: train/benign/1700.jpg   \n",
            "  inflating: train/benign/1702.jpg   \n",
            "  inflating: train/benign/1703.jpg   \n",
            "  inflating: train/benign/1705.jpg   \n",
            "  inflating: train/benign/1706.jpg   \n",
            "  inflating: train/benign/1707.jpg   \n",
            "  inflating: train/benign/1708.jpg   \n",
            "  inflating: train/benign/1709.jpg   \n",
            "  inflating: train/benign/171.jpg    \n",
            "  inflating: train/benign/1712.jpg   \n",
            "  inflating: train/benign/1713.jpg   \n",
            "  inflating: train/benign/1715.jpg   \n",
            "  inflating: train/benign/1716.jpg   \n",
            "  inflating: train/benign/1717.jpg   \n",
            "  inflating: train/benign/1718.jpg   \n",
            "  inflating: train/benign/172.jpg    \n",
            "  inflating: train/benign/1720.jpg   \n",
            "  inflating: train/benign/1722.jpg   \n",
            "  inflating: train/benign/1723.jpg   \n",
            "  inflating: train/benign/1724.jpg   \n",
            "  inflating: train/benign/1725.jpg   \n",
            "  inflating: train/benign/1726.jpg   \n",
            "  inflating: train/benign/1727.jpg   \n",
            "  inflating: train/benign/1728.jpg   \n",
            "  inflating: train/benign/1729.jpg   \n",
            "  inflating: train/benign/173.jpg    \n",
            "  inflating: train/benign/1730.jpg   \n",
            "  inflating: train/benign/1732.jpg   \n",
            "  inflating: train/benign/1733.jpg   \n",
            "  inflating: train/benign/1734.jpg   \n",
            "  inflating: train/benign/1735.jpg   \n",
            "  inflating: train/benign/1736.jpg   \n",
            "  inflating: train/benign/1738.jpg   \n",
            "  inflating: train/benign/1739.jpg   \n",
            "  inflating: train/benign/174.jpg    \n",
            "  inflating: train/benign/1740.jpg   \n",
            "  inflating: train/benign/1741.jpg   \n",
            "  inflating: train/benign/1742.jpg   \n",
            "  inflating: train/benign/1743.jpg   \n",
            "  inflating: train/benign/1744.jpg   \n",
            "  inflating: train/benign/1746.jpg   \n",
            "  inflating: train/benign/1749.jpg   \n",
            "  inflating: train/benign/175.jpg    \n",
            "  inflating: train/benign/1750.jpg   \n",
            "  inflating: train/benign/1751.jpg   \n",
            "  inflating: train/benign/1752.jpg   \n",
            "  inflating: train/benign/1753.jpg   \n",
            "  inflating: train/benign/1754.jpg   \n",
            "  inflating: train/benign/1755.jpg   \n",
            "  inflating: train/benign/1759.jpg   \n",
            "  inflating: train/benign/176.jpg    \n",
            "  inflating: train/benign/1760.jpg   \n",
            "  inflating: train/benign/1761.jpg   \n",
            "  inflating: train/benign/1762.jpg   \n",
            "  inflating: train/benign/1763.jpg   \n",
            "  inflating: train/benign/1765.jpg   \n",
            "  inflating: train/benign/1766.jpg   \n",
            "  inflating: train/benign/1767.jpg   \n",
            "  inflating: train/benign/1769.jpg   \n",
            "  inflating: train/benign/177.jpg    \n",
            "  inflating: train/benign/1770.jpg   \n",
            "  inflating: train/benign/1771.jpg   \n",
            "  inflating: train/benign/1772.jpg   \n",
            "  inflating: train/benign/1774.jpg   \n",
            "  inflating: train/benign/1775.jpg   \n",
            "  inflating: train/benign/1776.jpg   \n",
            "  inflating: train/benign/1777.jpg   \n",
            "  inflating: train/benign/1778.jpg   \n",
            "  inflating: train/benign/1779.jpg   \n",
            "  inflating: train/benign/178.jpg    \n",
            "  inflating: train/benign/1780.jpg   \n",
            "  inflating: train/benign/1781.jpg   \n",
            "  inflating: train/benign/1782.jpg   \n",
            "  inflating: train/benign/1783.jpg   \n",
            "  inflating: train/benign/1784.jpg   \n",
            "  inflating: train/benign/1785.jpg   \n",
            "  inflating: train/benign/1786.jpg   \n",
            "  inflating: train/benign/1787.jpg   \n",
            "  inflating: train/benign/1788.jpg   \n",
            "  inflating: train/benign/1789.jpg   \n",
            "  inflating: train/benign/179.jpg    \n",
            "  inflating: train/benign/1790.jpg   \n",
            "  inflating: train/benign/1791.jpg   \n",
            "  inflating: train/benign/1792.jpg   \n",
            "  inflating: train/benign/1793.jpg   \n",
            "  inflating: train/benign/1794.jpg   \n",
            "  inflating: train/benign/1795.jpg   \n",
            "  inflating: train/benign/1796.jpg   \n",
            "  inflating: train/benign/1799.jpg   \n",
            "  inflating: train/benign/180.jpg    \n",
            "  inflating: train/benign/181.jpg    \n",
            "  inflating: train/benign/182.jpg    \n",
            "  inflating: train/benign/183.jpg    \n",
            "  inflating: train/benign/184.jpg    \n",
            "  inflating: train/benign/187.jpg    \n",
            "  inflating: train/benign/188.jpg    \n",
            "  inflating: train/benign/189.jpg    \n",
            "  inflating: train/benign/19.jpg     \n",
            "  inflating: train/benign/190.jpg    \n",
            "  inflating: train/benign/191.jpg    \n",
            "  inflating: train/benign/192.jpg    \n",
            "  inflating: train/benign/193.jpg    \n",
            "  inflating: train/benign/194.jpg    \n",
            "  inflating: train/benign/195.jpg    \n",
            "  inflating: train/benign/196.jpg    \n",
            "  inflating: train/benign/197.jpg    \n",
            "  inflating: train/benign/198.jpg    \n",
            "  inflating: train/benign/199.jpg    \n",
            "  inflating: train/benign/20.jpg     \n",
            "  inflating: train/benign/200.jpg    \n",
            "  inflating: train/benign/201.jpg    \n",
            "  inflating: train/benign/202.jpg    \n",
            "  inflating: train/benign/203.jpg    \n",
            "  inflating: train/benign/204.jpg    \n",
            "  inflating: train/benign/206.jpg    \n",
            "  inflating: train/benign/207.jpg    \n",
            "  inflating: train/benign/208.jpg    \n",
            "  inflating: train/benign/209.jpg    \n",
            "  inflating: train/benign/21.jpg     \n",
            "  inflating: train/benign/210.jpg    \n",
            "  inflating: train/benign/212.jpg    \n",
            "  inflating: train/benign/213.jpg    \n",
            "  inflating: train/benign/214.jpg    \n",
            "  inflating: train/benign/217.jpg    \n",
            "  inflating: train/benign/218.jpg    \n",
            "  inflating: train/benign/219.jpg    \n",
            "  inflating: train/benign/22.jpg     \n",
            "  inflating: train/benign/220.jpg    \n",
            "  inflating: train/benign/221.jpg    \n",
            "  inflating: train/benign/222.jpg    \n",
            "  inflating: train/benign/223.jpg    \n",
            "  inflating: train/benign/225.jpg    \n",
            "  inflating: train/benign/227.jpg    \n",
            "  inflating: train/benign/228.jpg    \n",
            "  inflating: train/benign/229.jpg    \n",
            "  inflating: train/benign/23.jpg     \n",
            "  inflating: train/benign/230.jpg    \n",
            "  inflating: train/benign/231.jpg    \n",
            "  inflating: train/benign/232.jpg    \n",
            "  inflating: train/benign/233.jpg    \n",
            "  inflating: train/benign/234.jpg    \n",
            "  inflating: train/benign/235.jpg    \n",
            "  inflating: train/benign/236.jpg    \n",
            "  inflating: train/benign/238.jpg    \n",
            "  inflating: train/benign/239.jpg    \n",
            "  inflating: train/benign/24.jpg     \n",
            "  inflating: train/benign/240.jpg    \n",
            "  inflating: train/benign/241.jpg    \n",
            "  inflating: train/benign/242.jpg    \n",
            "  inflating: train/benign/243.jpg    \n",
            "  inflating: train/benign/244.jpg    \n",
            "  inflating: train/benign/246.jpg    \n",
            "  inflating: train/benign/247.jpg    \n",
            "  inflating: train/benign/248.jpg    \n",
            "  inflating: train/benign/249.jpg    \n",
            "  inflating: train/benign/25.jpg     \n",
            "  inflating: train/benign/252.jpg    \n",
            "  inflating: train/benign/254.jpg    \n",
            "  inflating: train/benign/255.jpg    \n",
            "  inflating: train/benign/257.jpg    \n",
            "  inflating: train/benign/258.jpg    \n",
            "  inflating: train/benign/26.jpg     \n",
            "  inflating: train/benign/260.jpg    \n",
            "  inflating: train/benign/261.jpg    \n",
            "  inflating: train/benign/262.jpg    \n",
            "  inflating: train/benign/263.jpg    \n",
            "  inflating: train/benign/264.jpg    \n",
            "  inflating: train/benign/265.jpg    \n",
            "  inflating: train/benign/266.jpg    \n",
            "  inflating: train/benign/269.jpg    \n",
            "  inflating: train/benign/27.jpg     \n",
            "  inflating: train/benign/270.jpg    \n",
            "  inflating: train/benign/271.jpg    \n",
            "  inflating: train/benign/272.jpg    \n",
            "  inflating: train/benign/274.jpg    \n",
            "  inflating: train/benign/275.jpg    \n",
            "  inflating: train/benign/276.jpg    \n",
            "  inflating: train/benign/277.jpg    \n",
            "  inflating: train/benign/278.jpg    \n",
            "  inflating: train/benign/279.jpg    \n",
            "  inflating: train/benign/28.jpg     \n",
            "  inflating: train/benign/280.jpg    \n",
            "  inflating: train/benign/281.jpg    \n",
            "  inflating: train/benign/282.jpg    \n",
            "  inflating: train/benign/283.jpg    \n",
            "  inflating: train/benign/285.jpg    \n",
            "  inflating: train/benign/286.jpg    \n",
            "  inflating: train/benign/288.jpg    \n",
            "  inflating: train/benign/29.jpg     \n",
            "  inflating: train/benign/290.jpg    \n",
            "  inflating: train/benign/292.jpg    \n",
            "  inflating: train/benign/293.jpg    \n",
            "  inflating: train/benign/294.jpg    \n",
            "  inflating: train/benign/295.jpg    \n",
            "  inflating: train/benign/296.jpg    \n",
            "  inflating: train/benign/297.jpg    \n",
            "  inflating: train/benign/298.jpg    \n",
            "  inflating: train/benign/299.jpg    \n",
            "  inflating: train/benign/3.jpg      \n",
            "  inflating: train/benign/30.jpg     \n",
            "  inflating: train/benign/301.jpg    \n",
            "  inflating: train/benign/302.jpg    \n",
            "  inflating: train/benign/305.jpg    \n",
            "  inflating: train/benign/306.jpg    \n",
            "  inflating: train/benign/307.jpg    \n",
            "  inflating: train/benign/308.jpg    \n",
            "  inflating: train/benign/309.jpg    \n",
            "  inflating: train/benign/310.jpg    \n",
            "  inflating: train/benign/312.jpg    \n",
            "  inflating: train/benign/314.jpg    \n",
            "  inflating: train/benign/315.jpg    \n",
            "  inflating: train/benign/316.jpg    \n",
            "  inflating: train/benign/318.jpg    \n",
            "  inflating: train/benign/319.jpg    \n",
            "  inflating: train/benign/32.jpg     \n",
            "  inflating: train/benign/320.jpg    \n",
            "  inflating: train/benign/321.jpg    \n",
            "  inflating: train/benign/324.jpg    \n",
            "  inflating: train/benign/325.jpg    \n",
            "  inflating: train/benign/326.jpg    \n",
            "  inflating: train/benign/327.jpg    \n",
            "  inflating: train/benign/328.jpg    \n",
            "  inflating: train/benign/329.jpg    \n",
            "  inflating: train/benign/33.jpg     \n",
            "  inflating: train/benign/331.jpg    \n",
            "  inflating: train/benign/333.jpg    \n",
            "  inflating: train/benign/334.jpg    \n",
            "  inflating: train/benign/336.jpg    \n",
            "  inflating: train/benign/337.jpg    \n",
            "  inflating: train/benign/338.jpg    \n",
            "  inflating: train/benign/339.jpg    \n",
            "  inflating: train/benign/34.jpg     \n",
            "  inflating: train/benign/340.jpg    \n",
            "  inflating: train/benign/341.jpg    \n",
            "  inflating: train/benign/342.jpg    \n",
            "  inflating: train/benign/343.jpg    \n",
            "  inflating: train/benign/345.jpg    \n",
            "  inflating: train/benign/346.jpg    \n",
            "  inflating: train/benign/347.jpg    \n",
            "  inflating: train/benign/349.jpg    \n",
            "  inflating: train/benign/35.jpg     \n",
            "  inflating: train/benign/350.jpg    \n",
            "  inflating: train/benign/351.jpg    \n",
            "  inflating: train/benign/352.jpg    \n",
            "  inflating: train/benign/353.jpg    \n",
            "  inflating: train/benign/355.jpg    \n",
            "  inflating: train/benign/357.jpg    \n",
            "  inflating: train/benign/358.jpg    \n",
            "  inflating: train/benign/359.jpg    \n",
            "  inflating: train/benign/36.jpg     \n",
            "  inflating: train/benign/360.jpg    \n",
            "  inflating: train/benign/361.jpg    \n",
            "  inflating: train/benign/362.jpg    \n",
            "  inflating: train/benign/363.jpg    \n",
            "  inflating: train/benign/364.jpg    \n",
            "  inflating: train/benign/365.jpg    \n",
            "  inflating: train/benign/366.jpg    \n",
            "  inflating: train/benign/368.jpg    \n",
            "  inflating: train/benign/370.jpg    \n",
            "  inflating: train/benign/371.jpg    \n",
            "  inflating: train/benign/372.jpg    \n",
            "  inflating: train/benign/373.jpg    \n",
            "  inflating: train/benign/374.jpg    \n",
            "  inflating: train/benign/375.jpg    \n",
            "  inflating: train/benign/376.jpg    \n",
            "  inflating: train/benign/377.jpg    \n",
            "  inflating: train/benign/38.jpg     \n",
            "  inflating: train/benign/380.jpg    \n",
            "  inflating: train/benign/381.jpg    \n",
            "  inflating: train/benign/382.jpg    \n",
            "  inflating: train/benign/383.jpg    \n",
            "  inflating: train/benign/384.jpg    \n",
            "  inflating: train/benign/386.jpg    \n",
            "  inflating: train/benign/387.jpg    \n",
            "  inflating: train/benign/39.jpg     \n",
            "  inflating: train/benign/390.jpg    \n",
            "  inflating: train/benign/391.jpg    \n",
            "  inflating: train/benign/392.jpg    \n",
            "  inflating: train/benign/393.jpg    \n",
            "  inflating: train/benign/395.jpg    \n",
            "  inflating: train/benign/396.jpg    \n",
            "  inflating: train/benign/397.jpg    \n",
            "  inflating: train/benign/398.jpg    \n",
            "  inflating: train/benign/399.jpg    \n",
            "  inflating: train/benign/4.jpg      \n",
            "  inflating: train/benign/40.jpg     \n",
            "  inflating: train/benign/400.jpg    \n",
            "  inflating: train/benign/401.jpg    \n",
            "  inflating: train/benign/402.jpg    \n",
            "  inflating: train/benign/403.jpg    \n",
            "  inflating: train/benign/405.jpg    \n",
            "  inflating: train/benign/406.jpg    \n",
            "  inflating: train/benign/408.jpg    \n",
            "  inflating: train/benign/409.jpg    \n",
            "  inflating: train/benign/41.jpg     \n",
            "  inflating: train/benign/410.jpg    \n",
            "  inflating: train/benign/411.jpg    \n",
            "  inflating: train/benign/412.jpg    \n",
            "  inflating: train/benign/413.jpg    \n",
            "  inflating: train/benign/415.jpg    \n",
            "  inflating: train/benign/416.jpg    \n",
            "  inflating: train/benign/417.jpg    \n",
            "  inflating: train/benign/418.jpg    \n",
            "  inflating: train/benign/42.jpg     \n",
            "  inflating: train/benign/420.jpg    \n",
            "  inflating: train/benign/421.jpg    \n",
            "  inflating: train/benign/422.jpg    \n",
            "  inflating: train/benign/423.jpg    \n",
            "  inflating: train/benign/424.jpg    \n",
            "  inflating: train/benign/425.jpg    \n",
            "  inflating: train/benign/426.jpg    \n",
            "  inflating: train/benign/429.jpg    \n",
            "  inflating: train/benign/43.jpg     \n",
            "  inflating: train/benign/430.jpg    \n",
            "  inflating: train/benign/431.jpg    \n",
            "  inflating: train/benign/432.jpg    \n",
            "  inflating: train/benign/434.jpg    \n",
            "  inflating: train/benign/435.jpg    \n",
            "  inflating: train/benign/438.jpg    \n",
            "  inflating: train/benign/439.jpg    \n",
            "  inflating: train/benign/440.jpg    \n",
            "  inflating: train/benign/441.jpg    \n",
            "  inflating: train/benign/442.jpg    \n",
            "  inflating: train/benign/443.jpg    \n",
            "  inflating: train/benign/445.jpg    \n",
            "  inflating: train/benign/446.jpg    \n",
            "  inflating: train/benign/447.jpg    \n",
            "  inflating: train/benign/448.jpg    \n",
            "  inflating: train/benign/450.jpg    \n",
            "  inflating: train/benign/451.jpg    \n",
            "  inflating: train/benign/452.jpg    \n",
            "  inflating: train/benign/453.jpg    \n",
            "  inflating: train/benign/455.jpg    \n",
            "  inflating: train/benign/456.jpg    \n",
            "  inflating: train/benign/458.jpg    \n",
            "  inflating: train/benign/459.jpg    \n",
            "  inflating: train/benign/46.jpg     \n",
            "  inflating: train/benign/460.jpg    \n",
            "  inflating: train/benign/461.jpg    \n",
            "  inflating: train/benign/463.jpg    \n",
            "  inflating: train/benign/464.jpg    \n",
            "  inflating: train/benign/465.jpg    \n",
            "  inflating: train/benign/466.jpg    \n",
            "  inflating: train/benign/467.jpg    \n",
            "  inflating: train/benign/468.jpg    \n",
            "  inflating: train/benign/469.jpg    \n",
            "  inflating: train/benign/47.jpg     \n",
            "  inflating: train/benign/470.jpg    \n",
            "  inflating: train/benign/471.jpg    \n",
            "  inflating: train/benign/472.jpg    \n",
            "  inflating: train/benign/473.jpg    \n",
            "  inflating: train/benign/474.jpg    \n",
            "  inflating: train/benign/476.jpg    \n",
            "  inflating: train/benign/477.jpg    \n",
            "  inflating: train/benign/478.jpg    \n",
            "  inflating: train/benign/48.jpg     \n",
            "  inflating: train/benign/480.jpg    \n",
            "  inflating: train/benign/481.jpg    \n",
            "  inflating: train/benign/482.jpg    \n",
            "  inflating: train/benign/483.jpg    \n",
            "  inflating: train/benign/485.jpg    \n",
            "  inflating: train/benign/486.jpg    \n",
            "  inflating: train/benign/487.jpg    \n",
            "  inflating: train/benign/488.jpg    \n",
            "  inflating: train/benign/489.jpg    \n",
            "  inflating: train/benign/49.jpg     \n",
            "  inflating: train/benign/490.jpg    \n",
            "  inflating: train/benign/491.jpg    \n",
            "  inflating: train/benign/492.jpg    \n",
            "  inflating: train/benign/493.jpg    \n",
            "  inflating: train/benign/494.jpg    \n",
            "  inflating: train/benign/496.jpg    \n",
            "  inflating: train/benign/497.jpg    \n",
            "  inflating: train/benign/498.jpg    \n",
            "  inflating: train/benign/499.jpg    \n",
            "  inflating: train/benign/50.jpg     \n",
            "  inflating: train/benign/500.jpg    \n",
            "  inflating: train/benign/501.jpg    \n",
            "  inflating: train/benign/502.jpg    \n",
            "  inflating: train/benign/503.jpg    \n",
            "  inflating: train/benign/504.jpg    \n",
            "  inflating: train/benign/505.jpg    \n",
            "  inflating: train/benign/506.jpg    \n",
            "  inflating: train/benign/507.jpg    \n",
            "  inflating: train/benign/508.jpg    \n",
            "  inflating: train/benign/509.jpg    \n",
            "  inflating: train/benign/51.jpg     \n",
            "  inflating: train/benign/510.jpg    \n",
            "  inflating: train/benign/511.jpg    \n",
            "  inflating: train/benign/512.jpg    \n",
            "  inflating: train/benign/513.jpg    \n",
            "  inflating: train/benign/514.jpg    \n",
            "  inflating: train/benign/515.jpg    \n",
            "  inflating: train/benign/516.jpg    \n",
            "  inflating: train/benign/517.jpg    \n",
            "  inflating: train/benign/518.jpg    \n",
            "  inflating: train/benign/519.jpg    \n",
            "  inflating: train/benign/52.jpg     \n",
            "  inflating: train/benign/521.jpg    \n",
            "  inflating: train/benign/522.jpg    \n",
            "  inflating: train/benign/523.jpg    \n",
            "  inflating: train/benign/524.jpg    \n",
            "  inflating: train/benign/525.jpg    \n",
            "  inflating: train/benign/526.jpg    \n",
            "  inflating: train/benign/528.jpg    \n",
            "  inflating: train/benign/529.jpg    \n",
            "  inflating: train/benign/53.jpg     \n",
            "  inflating: train/benign/530.jpg    \n",
            "  inflating: train/benign/531.jpg    \n",
            "  inflating: train/benign/533.jpg    \n",
            "  inflating: train/benign/534.jpg    \n",
            "  inflating: train/benign/537.jpg    \n",
            "  inflating: train/benign/538.jpg    \n",
            "  inflating: train/benign/539.jpg    \n",
            "  inflating: train/benign/540.jpg    \n",
            "  inflating: train/benign/541.jpg    \n",
            "  inflating: train/benign/542.jpg    \n",
            "  inflating: train/benign/543.jpg    \n",
            "  inflating: train/benign/544.jpg    \n",
            "  inflating: train/benign/546.jpg    \n",
            "  inflating: train/benign/547.jpg    \n",
            "  inflating: train/benign/549.jpg    \n",
            "  inflating: train/benign/55.jpg     \n",
            "  inflating: train/benign/550.jpg    \n",
            "  inflating: train/benign/551.jpg    \n",
            "  inflating: train/benign/553.jpg    \n",
            "  inflating: train/benign/554.jpg    \n",
            "  inflating: train/benign/555.jpg    \n",
            "  inflating: train/benign/556.jpg    \n",
            "  inflating: train/benign/557.jpg    \n",
            "  inflating: train/benign/56.jpg     \n",
            "  inflating: train/benign/563.jpg    \n",
            "  inflating: train/benign/564.jpg    \n",
            "  inflating: train/benign/565.jpg    \n",
            "  inflating: train/benign/567.jpg    \n",
            "  inflating: train/benign/568.jpg    \n",
            "  inflating: train/benign/569.jpg    \n",
            "  inflating: train/benign/570.jpg    \n",
            "  inflating: train/benign/571.jpg    \n",
            "  inflating: train/benign/576.jpg    \n",
            "  inflating: train/benign/577.jpg    \n",
            "  inflating: train/benign/578.jpg    \n",
            "  inflating: train/benign/579.jpg    \n",
            "  inflating: train/benign/58.jpg     \n",
            "  inflating: train/benign/581.jpg    \n",
            "  inflating: train/benign/582.jpg    \n",
            "  inflating: train/benign/583.jpg    \n",
            "  inflating: train/benign/584.jpg    \n",
            "  inflating: train/benign/585.jpg    \n",
            "  inflating: train/benign/586.jpg    \n",
            "  inflating: train/benign/587.jpg    \n",
            "  inflating: train/benign/589.jpg    \n",
            "  inflating: train/benign/59.jpg     \n",
            "  inflating: train/benign/590.jpg    \n",
            "  inflating: train/benign/591.jpg    \n",
            "  inflating: train/benign/592.jpg    \n",
            "  inflating: train/benign/593.jpg    \n",
            "  inflating: train/benign/594.jpg    \n",
            "  inflating: train/benign/595.jpg    \n",
            "  inflating: train/benign/597.jpg    \n",
            "  inflating: train/benign/598.jpg    \n",
            "  inflating: train/benign/599.jpg    \n",
            "  inflating: train/benign/6.jpg      \n",
            "  inflating: train/benign/60.jpg     \n",
            "  inflating: train/benign/600.jpg    \n",
            "  inflating: train/benign/601.jpg    \n",
            "  inflating: train/benign/602.jpg    \n",
            "  inflating: train/benign/604.jpg    \n",
            "  inflating: train/benign/605.jpg    \n",
            "  inflating: train/benign/606.jpg    \n",
            "  inflating: train/benign/607.jpg    \n",
            "  inflating: train/benign/608.jpg    \n",
            "  inflating: train/benign/609.jpg    \n",
            "  inflating: train/benign/610.jpg    \n",
            "  inflating: train/benign/611.jpg    \n",
            "  inflating: train/benign/613.jpg    \n",
            "  inflating: train/benign/614.jpg    \n",
            "  inflating: train/benign/615.jpg    \n",
            "  inflating: train/benign/616.jpg    \n",
            "  inflating: train/benign/617.jpg    \n",
            "  inflating: train/benign/618.jpg    \n",
            "  inflating: train/benign/619.jpg    \n",
            "  inflating: train/benign/62.jpg     \n",
            "  inflating: train/benign/620.jpg    \n",
            "  inflating: train/benign/621.jpg    \n",
            "  inflating: train/benign/622.jpg    \n",
            "  inflating: train/benign/625.jpg    \n",
            "  inflating: train/benign/627.jpg    \n",
            "  inflating: train/benign/628.jpg    \n",
            "  inflating: train/benign/629.jpg    \n",
            "  inflating: train/benign/630.jpg    \n",
            "  inflating: train/benign/632.jpg    \n",
            "  inflating: train/benign/633.jpg    \n",
            "  inflating: train/benign/637.jpg    \n",
            "  inflating: train/benign/638.jpg    \n",
            "  inflating: train/benign/639.jpg    \n",
            "  inflating: train/benign/64.jpg     \n",
            "  inflating: train/benign/640.jpg    \n",
            "  inflating: train/benign/641.jpg    \n",
            "  inflating: train/benign/643.jpg    \n",
            "  inflating: train/benign/645.jpg    \n",
            "  inflating: train/benign/646.jpg    \n",
            "  inflating: train/benign/648.jpg    \n",
            "  inflating: train/benign/649.jpg    \n",
            "  inflating: train/benign/65.jpg     \n",
            "  inflating: train/benign/650.jpg    \n",
            "  inflating: train/benign/651.jpg    \n",
            "  inflating: train/benign/652.jpg    \n",
            "  inflating: train/benign/653.jpg    \n",
            "  inflating: train/benign/654.jpg    \n",
            "  inflating: train/benign/655.jpg    \n",
            "  inflating: train/benign/656.jpg    \n",
            "  inflating: train/benign/657.jpg    \n",
            "  inflating: train/benign/66.jpg     \n",
            "  inflating: train/benign/661.jpg    \n",
            "  inflating: train/benign/662.jpg    \n",
            "  inflating: train/benign/665.jpg    \n",
            "  inflating: train/benign/666.jpg    \n",
            "  inflating: train/benign/667.jpg    \n",
            "  inflating: train/benign/669.jpg    \n",
            "  inflating: train/benign/67.jpg     \n",
            "  inflating: train/benign/671.jpg    \n",
            "  inflating: train/benign/672.jpg    \n",
            "  inflating: train/benign/673.jpg    \n",
            "  inflating: train/benign/674.jpg    \n",
            "  inflating: train/benign/675.jpg    \n",
            "  inflating: train/benign/677.jpg    \n",
            "  inflating: train/benign/679.jpg    \n",
            "  inflating: train/benign/68.jpg     \n",
            "  inflating: train/benign/680.jpg    \n",
            "  inflating: train/benign/682.jpg    \n",
            "  inflating: train/benign/683.jpg    \n",
            "  inflating: train/benign/684.jpg    \n",
            "  inflating: train/benign/685.jpg    \n",
            "  inflating: train/benign/686.jpg    \n",
            "  inflating: train/benign/687.jpg    \n",
            "  inflating: train/benign/688.jpg    \n",
            "  inflating: train/benign/69.jpg     \n",
            "  inflating: train/benign/691.jpg    \n",
            "  inflating: train/benign/692.jpg    \n",
            "  inflating: train/benign/693.jpg    \n",
            "  inflating: train/benign/694.jpg    \n",
            "  inflating: train/benign/695.jpg    \n",
            "  inflating: train/benign/696.jpg    \n",
            "  inflating: train/benign/697.jpg    \n",
            "  inflating: train/benign/698.jpg    \n",
            "  inflating: train/benign/699.jpg    \n",
            "  inflating: train/benign/7.jpg      \n",
            "  inflating: train/benign/70.jpg     \n",
            "  inflating: train/benign/701.jpg    \n",
            "  inflating: train/benign/702.jpg    \n",
            "  inflating: train/benign/703.jpg    \n",
            "  inflating: train/benign/704.jpg    \n",
            "  inflating: train/benign/705.jpg    \n",
            "  inflating: train/benign/706.jpg    \n",
            "  inflating: train/benign/707.jpg    \n",
            "  inflating: train/benign/708.jpg    \n",
            "  inflating: train/benign/709.jpg    \n",
            "  inflating: train/benign/710.jpg    \n",
            "  inflating: train/benign/711.jpg    \n",
            "  inflating: train/benign/713.jpg    \n",
            "  inflating: train/benign/714.jpg    \n",
            "  inflating: train/benign/715.jpg    \n",
            "  inflating: train/benign/716.jpg    \n",
            "  inflating: train/benign/718.jpg    \n",
            "  inflating: train/benign/719.jpg    \n",
            "  inflating: train/benign/72.jpg     \n",
            "  inflating: train/benign/722.jpg    \n",
            "  inflating: train/benign/723.jpg    \n",
            "  inflating: train/benign/726.jpg    \n",
            "  inflating: train/benign/727.jpg    \n",
            "  inflating: train/benign/728.jpg    \n",
            "  inflating: train/benign/729.jpg    \n",
            "  inflating: train/benign/73.jpg     \n",
            "  inflating: train/benign/730.jpg    \n",
            "  inflating: train/benign/731.jpg    \n",
            "  inflating: train/benign/732.jpg    \n",
            "  inflating: train/benign/733.jpg    \n",
            "  inflating: train/benign/734.jpg    \n",
            "  inflating: train/benign/735.jpg    \n",
            "  inflating: train/benign/736.jpg    \n",
            "  inflating: train/benign/737.jpg    \n",
            "  inflating: train/benign/738.jpg    \n",
            "  inflating: train/benign/739.jpg    \n",
            "  inflating: train/benign/740.jpg    \n",
            "  inflating: train/benign/741.jpg    \n",
            "  inflating: train/benign/742.jpg    \n",
            "  inflating: train/benign/743.jpg    \n",
            "  inflating: train/benign/744.jpg    \n",
            "  inflating: train/benign/745.jpg    \n",
            "  inflating: train/benign/746.jpg    \n",
            "  inflating: train/benign/747.jpg    \n",
            "  inflating: train/benign/748.jpg    \n",
            "  inflating: train/benign/749.jpg    \n",
            "  inflating: train/benign/75.jpg     \n",
            "  inflating: train/benign/750.jpg    \n",
            "  inflating: train/benign/752.jpg    \n",
            "  inflating: train/benign/753.jpg    \n",
            "  inflating: train/benign/754.jpg    \n",
            "  inflating: train/benign/755.jpg    \n",
            "  inflating: train/benign/756.jpg    \n",
            "  inflating: train/benign/757.jpg    \n",
            "  inflating: train/benign/759.jpg    \n",
            "  inflating: train/benign/76.jpg     \n",
            "  inflating: train/benign/760.jpg    \n",
            "  inflating: train/benign/761.jpg    \n",
            "  inflating: train/benign/764.jpg    \n",
            "  inflating: train/benign/765.jpg    \n",
            "  inflating: train/benign/766.jpg    \n",
            "  inflating: train/benign/767.jpg    \n",
            "  inflating: train/benign/769.jpg    \n",
            "  inflating: train/benign/77.jpg     \n",
            "  inflating: train/benign/771.jpg    \n",
            "  inflating: train/benign/772.jpg    \n",
            "  inflating: train/benign/775.jpg    \n",
            "  inflating: train/benign/776.jpg    \n",
            "  inflating: train/benign/777.jpg    \n",
            "  inflating: train/benign/779.jpg    \n",
            "  inflating: train/benign/78.jpg     \n",
            "  inflating: train/benign/780.jpg    \n",
            "  inflating: train/benign/781.jpg    \n",
            "  inflating: train/benign/782.jpg    \n",
            "  inflating: train/benign/783.jpg    \n",
            "  inflating: train/benign/784.jpg    \n",
            "  inflating: train/benign/785.jpg    \n",
            "  inflating: train/benign/786.jpg    \n",
            "  inflating: train/benign/787.jpg    \n",
            "  inflating: train/benign/788.jpg    \n",
            "  inflating: train/benign/789.jpg    \n",
            "  inflating: train/benign/79.jpg     \n",
            "  inflating: train/benign/791.jpg    \n",
            "  inflating: train/benign/792.jpg    \n",
            "  inflating: train/benign/793.jpg    \n",
            "  inflating: train/benign/794.jpg    \n",
            "  inflating: train/benign/795.jpg    \n",
            "  inflating: train/benign/796.jpg    \n",
            "  inflating: train/benign/797.jpg    \n",
            "  inflating: train/benign/798.jpg    \n",
            "  inflating: train/benign/799.jpg    \n",
            "  inflating: train/benign/80.jpg     \n",
            "  inflating: train/benign/800.jpg    \n",
            "  inflating: train/benign/801.jpg    \n",
            "  inflating: train/benign/803.jpg    \n",
            "  inflating: train/benign/804.jpg    \n",
            "  inflating: train/benign/807.jpg    \n",
            "  inflating: train/benign/808.jpg    \n",
            "  inflating: train/benign/809.jpg    \n",
            "  inflating: train/benign/81.jpg     \n",
            "  inflating: train/benign/810.jpg    \n",
            "  inflating: train/benign/811.jpg    \n",
            "  inflating: train/benign/812.jpg    \n",
            "  inflating: train/benign/814.jpg    \n",
            "  inflating: train/benign/815.jpg    \n",
            "  inflating: train/benign/816.jpg    \n",
            "  inflating: train/benign/817.jpg    \n",
            "  inflating: train/benign/818.jpg    \n",
            "  inflating: train/benign/82.jpg     \n",
            "  inflating: train/benign/821.jpg    \n",
            "  inflating: train/benign/822.jpg    \n",
            "  inflating: train/benign/827.jpg    \n",
            "  inflating: train/benign/829.jpg    \n",
            "  inflating: train/benign/831.jpg    \n",
            "  inflating: train/benign/832.jpg    \n",
            "  inflating: train/benign/833.jpg    \n",
            "  inflating: train/benign/834.jpg    \n",
            "  inflating: train/benign/835.jpg    \n",
            "  inflating: train/benign/836.jpg    \n",
            "  inflating: train/benign/837.jpg    \n",
            "  inflating: train/benign/838.jpg    \n",
            "  inflating: train/benign/839.jpg    \n",
            "  inflating: train/benign/841.jpg    \n",
            "  inflating: train/benign/842.jpg    \n",
            "  inflating: train/benign/843.jpg    \n",
            "  inflating: train/benign/844.jpg    \n",
            "  inflating: train/benign/845.jpg    \n",
            "  inflating: train/benign/846.jpg    \n",
            "  inflating: train/benign/847.jpg    \n",
            "  inflating: train/benign/848.jpg    \n",
            "  inflating: train/benign/849.jpg    \n",
            "  inflating: train/benign/85.jpg     \n",
            "  inflating: train/benign/850.jpg    \n",
            "  inflating: train/benign/851.jpg    \n",
            "  inflating: train/benign/852.jpg    \n",
            "  inflating: train/benign/853.jpg    \n",
            "  inflating: train/benign/855.jpg    \n",
            "  inflating: train/benign/856.jpg    \n",
            "  inflating: train/benign/857.jpg    \n",
            "  inflating: train/benign/858.jpg    \n",
            "  inflating: train/benign/859.jpg    \n",
            "  inflating: train/benign/86.jpg     \n",
            "  inflating: train/benign/860.jpg    \n",
            "  inflating: train/benign/861.jpg    \n",
            "  inflating: train/benign/862.jpg    \n",
            "  inflating: train/benign/863.jpg    \n",
            "  inflating: train/benign/864.jpg    \n",
            "  inflating: train/benign/865.jpg    \n",
            "  inflating: train/benign/866.jpg    \n",
            "  inflating: train/benign/867.jpg    \n",
            "  inflating: train/benign/868.jpg    \n",
            "  inflating: train/benign/87.jpg     \n",
            "  inflating: train/benign/870.jpg    \n",
            "  inflating: train/benign/871.jpg    \n",
            "  inflating: train/benign/872.jpg    \n",
            "  inflating: train/benign/873.jpg    \n",
            "  inflating: train/benign/875.jpg    \n",
            "  inflating: train/benign/876.jpg    \n",
            "  inflating: train/benign/877.jpg    \n",
            "  inflating: train/benign/879.jpg    \n",
            "  inflating: train/benign/881.jpg    \n",
            "  inflating: train/benign/882.jpg    \n",
            "  inflating: train/benign/883.jpg    \n",
            "  inflating: train/benign/884.jpg    \n",
            "  inflating: train/benign/885.jpg    \n",
            "  inflating: train/benign/886.jpg    \n",
            "  inflating: train/benign/889.jpg    \n",
            "  inflating: train/benign/89.jpg     \n",
            "  inflating: train/benign/890.jpg    \n",
            "  inflating: train/benign/891.jpg    \n",
            "  inflating: train/benign/896.jpg    \n",
            "  inflating: train/benign/897.jpg    \n",
            "  inflating: train/benign/898.jpg    \n",
            "  inflating: train/benign/899.jpg    \n",
            "  inflating: train/benign/900.jpg    \n",
            "  inflating: train/benign/901.jpg    \n",
            "  inflating: train/benign/902.jpg    \n",
            "  inflating: train/benign/904.jpg    \n",
            "  inflating: train/benign/905.jpg    \n",
            "  inflating: train/benign/907.jpg    \n",
            "  inflating: train/benign/908.jpg    \n",
            "  inflating: train/benign/91.jpg     \n",
            "  inflating: train/benign/910.jpg    \n",
            "  inflating: train/benign/911.jpg    \n",
            "  inflating: train/benign/913.jpg    \n",
            "  inflating: train/benign/914.jpg    \n",
            "  inflating: train/benign/915.jpg    \n",
            "  inflating: train/benign/917.jpg    \n",
            "  inflating: train/benign/918.jpg    \n",
            "  inflating: train/benign/92.jpg     \n",
            "  inflating: train/benign/920.jpg    \n",
            "  inflating: train/benign/921.jpg    \n",
            "  inflating: train/benign/922.jpg    \n",
            "  inflating: train/benign/923.jpg    \n",
            "  inflating: train/benign/924.jpg    \n",
            "  inflating: train/benign/926.jpg    \n",
            "  inflating: train/benign/927.jpg    \n",
            "  inflating: train/benign/928.jpg    \n",
            "  inflating: train/benign/929.jpg    \n",
            "  inflating: train/benign/93.jpg     \n",
            "  inflating: train/benign/930.jpg    \n",
            "  inflating: train/benign/931.jpg    \n",
            "  inflating: train/benign/932.jpg    \n",
            "  inflating: train/benign/933.jpg    \n",
            "  inflating: train/benign/934.jpg    \n",
            "  inflating: train/benign/935.jpg    \n",
            "  inflating: train/benign/937.jpg    \n",
            "  inflating: train/benign/938.jpg    \n",
            "  inflating: train/benign/939.jpg    \n",
            "  inflating: train/benign/94.jpg     \n",
            "  inflating: train/benign/940.jpg    \n",
            "  inflating: train/benign/941.jpg    \n",
            "  inflating: train/benign/942.jpg    \n",
            "  inflating: train/benign/945.jpg    \n",
            "  inflating: train/benign/947.jpg    \n",
            "  inflating: train/benign/948.jpg    \n",
            "  inflating: train/benign/949.jpg    \n",
            "  inflating: train/benign/950.jpg    \n",
            "  inflating: train/benign/951.jpg    \n",
            "  inflating: train/benign/952.jpg    \n",
            "  inflating: train/benign/953.jpg    \n",
            "  inflating: train/benign/954.jpg    \n",
            "  inflating: train/benign/955.jpg    \n",
            "  inflating: train/benign/956.jpg    \n",
            "  inflating: train/benign/957.jpg    \n",
            "  inflating: train/benign/959.jpg    \n",
            "  inflating: train/benign/96.jpg     \n",
            "  inflating: train/benign/960.jpg    \n",
            "  inflating: train/benign/961.jpg    \n",
            "  inflating: train/benign/963.jpg    \n",
            "  inflating: train/benign/965.jpg    \n",
            "  inflating: train/benign/966.jpg    \n",
            "  inflating: train/benign/967.jpg    \n",
            "  inflating: train/benign/968.jpg    \n",
            "  inflating: train/benign/969.jpg    \n",
            "  inflating: train/benign/970.jpg    \n",
            "  inflating: train/benign/971.jpg    \n",
            "  inflating: train/benign/973.jpg    \n",
            "  inflating: train/benign/974.jpg    \n",
            "  inflating: train/benign/975.jpg    \n",
            "  inflating: train/benign/976.jpg    \n",
            "  inflating: train/benign/977.jpg    \n",
            "  inflating: train/benign/978.jpg    \n",
            "  inflating: train/benign/979.jpg    \n",
            "  inflating: train/benign/980.jpg    \n",
            "  inflating: train/benign/981.jpg    \n",
            "  inflating: train/benign/983.jpg    \n",
            "  inflating: train/benign/984.jpg    \n",
            "  inflating: train/benign/985.jpg    \n",
            "  inflating: train/benign/986.jpg    \n",
            "  inflating: train/benign/987.jpg    \n",
            "  inflating: train/benign/988.jpg    \n",
            "  inflating: train/benign/989.jpg    \n",
            "  inflating: train/benign/99.jpg     \n",
            "  inflating: train/benign/990.jpg    \n",
            "  inflating: train/benign/991.jpg    \n",
            "  inflating: train/benign/992.jpg    \n",
            "  inflating: train/benign/994.jpg    \n",
            "  inflating: train/benign/995.jpg    \n",
            "  inflating: train/benign/996.jpg    \n",
            "  inflating: train/benign/997.jpg    \n",
            "  inflating: train/benign/999.jpg    \n",
            "  inflating: train/malignant/10.jpg  \n",
            "  inflating: train/malignant/100.jpg  \n",
            "  inflating: train/malignant/1000.jpg  \n",
            "  inflating: train/malignant/1001.jpg  \n",
            "  inflating: train/malignant/1002.jpg  \n",
            "  inflating: train/malignant/1004.jpg  \n",
            "  inflating: train/malignant/1006.jpg  \n",
            "  inflating: train/malignant/1008.jpg  \n",
            "  inflating: train/malignant/101.jpg  \n",
            "  inflating: train/malignant/1010.jpg  \n",
            "  inflating: train/malignant/1011.jpg  \n",
            "  inflating: train/malignant/1013.jpg  \n",
            "  inflating: train/malignant/1014.jpg  \n",
            "  inflating: train/malignant/1015.jpg  \n",
            "  inflating: train/malignant/1016.jpg  \n",
            "  inflating: train/malignant/1017.jpg  \n",
            "  inflating: train/malignant/1018.jpg  \n",
            "  inflating: train/malignant/102.jpg  \n",
            "  inflating: train/malignant/1020.jpg  \n",
            "  inflating: train/malignant/1021.jpg  \n",
            "  inflating: train/malignant/1023.jpg  \n",
            "  inflating: train/malignant/1024.jpg  \n",
            "  inflating: train/malignant/1025.jpg  \n",
            "  inflating: train/malignant/1028.jpg  \n",
            "  inflating: train/malignant/1029.jpg  \n",
            "  inflating: train/malignant/103.jpg  \n",
            "  inflating: train/malignant/1030.jpg  \n",
            "  inflating: train/malignant/1031.jpg  \n",
            "  inflating: train/malignant/1032.jpg  \n",
            "  inflating: train/malignant/1033.jpg  \n",
            "  inflating: train/malignant/1034.jpg  \n",
            "  inflating: train/malignant/1035.jpg  \n",
            "  inflating: train/malignant/1036.jpg  \n",
            "  inflating: train/malignant/1039.jpg  \n",
            "  inflating: train/malignant/104.jpg  \n",
            "  inflating: train/malignant/1040.jpg  \n",
            "  inflating: train/malignant/1041.jpg  \n",
            "  inflating: train/malignant/1042.jpg  \n",
            "  inflating: train/malignant/1043.jpg  \n",
            "  inflating: train/malignant/1044.jpg  \n",
            "  inflating: train/malignant/1045.jpg  \n",
            "  inflating: train/malignant/1047.jpg  \n",
            "  inflating: train/malignant/1048.jpg  \n",
            "  inflating: train/malignant/105.jpg  \n",
            "  inflating: train/malignant/1050.jpg  \n",
            "  inflating: train/malignant/1051.jpg  \n",
            "  inflating: train/malignant/1052.jpg  \n",
            "  inflating: train/malignant/1053.jpg  \n",
            "  inflating: train/malignant/1054.jpg  \n",
            "  inflating: train/malignant/1055.jpg  \n",
            "  inflating: train/malignant/1057.jpg  \n",
            "  inflating: train/malignant/1059.jpg  \n",
            "  inflating: train/malignant/106.jpg  \n",
            "  inflating: train/malignant/1060.jpg  \n",
            "  inflating: train/malignant/1061.jpg  \n",
            "  inflating: train/malignant/1062.jpg  \n",
            "  inflating: train/malignant/1063.jpg  \n",
            "  inflating: train/malignant/1064.jpg  \n",
            "  inflating: train/malignant/1066.jpg  \n",
            "  inflating: train/malignant/1067.jpg  \n",
            "  inflating: train/malignant/1068.jpg  \n",
            "  inflating: train/malignant/1069.jpg  \n",
            "  inflating: train/malignant/107.jpg  \n",
            "  inflating: train/malignant/1070.jpg  \n",
            "  inflating: train/malignant/1071.jpg  \n",
            "  inflating: train/malignant/1072.jpg  \n",
            "  inflating: train/malignant/1073.jpg  \n",
            "  inflating: train/malignant/1075.jpg  \n",
            "  inflating: train/malignant/1076.jpg  \n",
            "  inflating: train/malignant/1077.jpg  \n",
            "  inflating: train/malignant/1078.jpg  \n",
            "  inflating: train/malignant/1079.jpg  \n",
            "  inflating: train/malignant/108.jpg  \n",
            "  inflating: train/malignant/1081.jpg  \n",
            "  inflating: train/malignant/1082.jpg  \n",
            "  inflating: train/malignant/1084.jpg  \n",
            "  inflating: train/malignant/1085.jpg  \n",
            "  inflating: train/malignant/1086.jpg  \n",
            "  inflating: train/malignant/1087.jpg  \n",
            "  inflating: train/malignant/1088.jpg  \n",
            "  inflating: train/malignant/109.jpg  \n",
            "  inflating: train/malignant/1090.jpg  \n",
            "  inflating: train/malignant/1092.jpg  \n",
            "  inflating: train/malignant/1093.jpg  \n",
            "  inflating: train/malignant/1095.jpg  \n",
            "  inflating: train/malignant/1096.jpg  \n",
            "  inflating: train/malignant/1097.jpg  \n",
            "  inflating: train/malignant/1098.jpg  \n",
            "  inflating: train/malignant/1099.jpg  \n",
            "  inflating: train/malignant/11.jpg  \n",
            "  inflating: train/malignant/1100.jpg  \n",
            "  inflating: train/malignant/1101.jpg  \n",
            "  inflating: train/malignant/1102.jpg  \n",
            "  inflating: train/malignant/1103.jpg  \n",
            "  inflating: train/malignant/1104.jpg  \n",
            "  inflating: train/malignant/1105.jpg  \n",
            "  inflating: train/malignant/1106.jpg  \n",
            "  inflating: train/malignant/1107.jpg  \n",
            "  inflating: train/malignant/1108.jpg  \n",
            "  inflating: train/malignant/1109.jpg  \n",
            "  inflating: train/malignant/111.jpg  \n",
            "  inflating: train/malignant/1110.jpg  \n",
            "  inflating: train/malignant/1111.jpg  \n",
            "  inflating: train/malignant/1114.jpg  \n",
            "  inflating: train/malignant/1115.jpg  \n",
            "  inflating: train/malignant/1116.jpg  \n",
            "  inflating: train/malignant/1117.jpg  \n",
            "  inflating: train/malignant/1118.jpg  \n",
            "  inflating: train/malignant/112.jpg  \n",
            "  inflating: train/malignant/1121.jpg  \n",
            "  inflating: train/malignant/1122.jpg  \n",
            "  inflating: train/malignant/1123.jpg  \n",
            "  inflating: train/malignant/1124.jpg  \n",
            "  inflating: train/malignant/1125.jpg  \n",
            "  inflating: train/malignant/1126.jpg  \n",
            "  inflating: train/malignant/1127.jpg  \n",
            "  inflating: train/malignant/1129.jpg  \n",
            "  inflating: train/malignant/113.jpg  \n",
            "  inflating: train/malignant/1130.jpg  \n",
            "  inflating: train/malignant/1131.jpg  \n",
            "  inflating: train/malignant/1132.jpg  \n",
            "  inflating: train/malignant/1133.jpg  \n",
            "  inflating: train/malignant/1134.jpg  \n",
            "  inflating: train/malignant/1136.jpg  \n",
            "  inflating: train/malignant/1137.jpg  \n",
            "  inflating: train/malignant/1138.jpg  \n",
            "  inflating: train/malignant/1139.jpg  \n",
            "  inflating: train/malignant/114.jpg  \n",
            "  inflating: train/malignant/1140.jpg  \n",
            "  inflating: train/malignant/1142.jpg  \n",
            "  inflating: train/malignant/1143.jpg  \n",
            "  inflating: train/malignant/1144.jpg  \n",
            "  inflating: train/malignant/1145.jpg  \n",
            "  inflating: train/malignant/1146.jpg  \n",
            "  inflating: train/malignant/1147.jpg  \n",
            "  inflating: train/malignant/1148.jpg  \n",
            "  inflating: train/malignant/1149.jpg  \n",
            "  inflating: train/malignant/115.jpg  \n",
            "  inflating: train/malignant/1152.jpg  \n",
            "  inflating: train/malignant/1153.jpg  \n",
            "  inflating: train/malignant/1154.jpg  \n",
            "  inflating: train/malignant/1157.jpg  \n",
            "  inflating: train/malignant/1158.jpg  \n",
            "  inflating: train/malignant/1159.jpg  \n",
            "  inflating: train/malignant/116.jpg  \n",
            "  inflating: train/malignant/1161.jpg  \n",
            "  inflating: train/malignant/1162.jpg  \n",
            "  inflating: train/malignant/1163.jpg  \n",
            "  inflating: train/malignant/1165.jpg  \n",
            "  inflating: train/malignant/1167.jpg  \n",
            "  inflating: train/malignant/1168.jpg  \n",
            "  inflating: train/malignant/1169.jpg  \n",
            "  inflating: train/malignant/117.jpg  \n",
            "  inflating: train/malignant/1171.jpg  \n",
            "  inflating: train/malignant/1172.jpg  \n",
            "  inflating: train/malignant/1174.jpg  \n",
            "  inflating: train/malignant/1175.jpg  \n",
            "  inflating: train/malignant/1177.jpg  \n",
            "  inflating: train/malignant/1178.jpg  \n",
            "  inflating: train/malignant/1179.jpg  \n",
            "  inflating: train/malignant/118.jpg  \n",
            "  inflating: train/malignant/1180.jpg  \n",
            "  inflating: train/malignant/1181.jpg  \n",
            "  inflating: train/malignant/1182.jpg  \n",
            "  inflating: train/malignant/1183.jpg  \n",
            "  inflating: train/malignant/1184.jpg  \n",
            "  inflating: train/malignant/1188.jpg  \n",
            "  inflating: train/malignant/119.jpg  \n",
            "  inflating: train/malignant/1190.jpg  \n",
            "  inflating: train/malignant/1191.jpg  \n",
            "  inflating: train/malignant/1192.jpg  \n",
            "  inflating: train/malignant/1193.jpg  \n",
            "  inflating: train/malignant/1195.jpg  \n",
            "  inflating: train/malignant/1196.jpg  \n",
            "  inflating: train/malignant/1199.jpg  \n",
            "  inflating: train/malignant/12.jpg  \n",
            "  inflating: train/malignant/120.jpg  \n",
            "  inflating: train/malignant/1200.jpg  \n",
            "  inflating: train/malignant/1201.jpg  \n",
            "  inflating: train/malignant/1202.jpg  \n",
            "  inflating: train/malignant/1203.jpg  \n",
            "  inflating: train/malignant/1204.jpg  \n",
            "  inflating: train/malignant/1205.jpg  \n",
            "  inflating: train/malignant/1206.jpg  \n",
            "  inflating: train/malignant/1207.jpg  \n",
            "  inflating: train/malignant/1208.jpg  \n",
            "  inflating: train/malignant/1209.jpg  \n",
            "  inflating: train/malignant/121.jpg  \n",
            "  inflating: train/malignant/1210.jpg  \n",
            "  inflating: train/malignant/1212.jpg  \n",
            "  inflating: train/malignant/1213.jpg  \n",
            "  inflating: train/malignant/1214.jpg  \n",
            "  inflating: train/malignant/1217.jpg  \n",
            "  inflating: train/malignant/1219.jpg  \n",
            "  inflating: train/malignant/122.jpg  \n",
            "  inflating: train/malignant/1222.jpg  \n",
            "  inflating: train/malignant/1223.jpg  \n",
            "  inflating: train/malignant/1224.jpg  \n",
            "  inflating: train/malignant/1225.jpg  \n",
            "  inflating: train/malignant/1226.jpg  \n",
            "  inflating: train/malignant/123.jpg  \n",
            "  inflating: train/malignant/1230.jpg  \n",
            "  inflating: train/malignant/1231.jpg  \n",
            "  inflating: train/malignant/1232.jpg  \n",
            "  inflating: train/malignant/1233.jpg  \n",
            "  inflating: train/malignant/1235.jpg  \n",
            "  inflating: train/malignant/1236.jpg  \n",
            "  inflating: train/malignant/1237.jpg  \n",
            "  inflating: train/malignant/1239.jpg  \n",
            "  inflating: train/malignant/124.jpg  \n",
            "  inflating: train/malignant/1240.jpg  \n",
            "  inflating: train/malignant/1241.jpg  \n",
            "  inflating: train/malignant/1243.jpg  \n",
            "  inflating: train/malignant/1244.jpg  \n",
            "  inflating: train/malignant/1245.jpg  \n",
            "  inflating: train/malignant/1246.jpg  \n",
            "  inflating: train/malignant/1247.jpg  \n",
            "  inflating: train/malignant/1248.jpg  \n",
            "  inflating: train/malignant/1249.jpg  \n",
            "  inflating: train/malignant/125.jpg  \n",
            "  inflating: train/malignant/1250.jpg  \n",
            "  inflating: train/malignant/1252.jpg  \n",
            "  inflating: train/malignant/1253.jpg  \n",
            "  inflating: train/malignant/1255.jpg  \n",
            "  inflating: train/malignant/1257.jpg  \n",
            "  inflating: train/malignant/1258.jpg  \n",
            "  inflating: train/malignant/1259.jpg  \n",
            "  inflating: train/malignant/126.jpg  \n",
            "  inflating: train/malignant/1260.jpg  \n",
            "  inflating: train/malignant/1261.jpg  \n",
            "  inflating: train/malignant/1263.jpg  \n",
            "  inflating: train/malignant/1264.jpg  \n",
            "  inflating: train/malignant/1265.jpg  \n",
            "  inflating: train/malignant/1269.jpg  \n",
            "  inflating: train/malignant/127.jpg  \n",
            "  inflating: train/malignant/1270.jpg  \n",
            "  inflating: train/malignant/1271.jpg  \n",
            "  inflating: train/malignant/1272.jpg  \n",
            "  inflating: train/malignant/1273.jpg  \n",
            "  inflating: train/malignant/1274.jpg  \n",
            "  inflating: train/malignant/1275.jpg  \n",
            "  inflating: train/malignant/1276.jpg  \n",
            "  inflating: train/malignant/1277.jpg  \n",
            "  inflating: train/malignant/1278.jpg  \n",
            "  inflating: train/malignant/1279.jpg  \n",
            "  inflating: train/malignant/128.jpg  \n",
            "  inflating: train/malignant/1281.jpg  \n",
            "  inflating: train/malignant/1282.jpg  \n",
            "  inflating: train/malignant/1283.jpg  \n",
            "  inflating: train/malignant/1284.jpg  \n",
            "  inflating: train/malignant/1285.jpg  \n",
            "  inflating: train/malignant/1287.jpg  \n",
            "  inflating: train/malignant/1288.jpg  \n",
            "  inflating: train/malignant/1290.jpg  \n",
            "  inflating: train/malignant/1291.jpg  \n",
            "  inflating: train/malignant/1293.jpg  \n",
            "  inflating: train/malignant/1294.jpg  \n",
            "  inflating: train/malignant/1296.jpg  \n",
            "  inflating: train/malignant/1298.jpg  \n",
            "  inflating: train/malignant/1299.jpg  \n",
            "  inflating: train/malignant/130.jpg  \n",
            "  inflating: train/malignant/1301.jpg  \n",
            "  inflating: train/malignant/1302.jpg  \n",
            "  inflating: train/malignant/1303.jpg  \n",
            "  inflating: train/malignant/1304.jpg  \n",
            "  inflating: train/malignant/1305.jpg  \n",
            "  inflating: train/malignant/1306.jpg  \n",
            "  inflating: train/malignant/1307.jpg  \n",
            "  inflating: train/malignant/1308.jpg  \n",
            "  inflating: train/malignant/1309.jpg  \n",
            "  inflating: train/malignant/131.jpg  \n",
            "  inflating: train/malignant/1311.jpg  \n",
            "  inflating: train/malignant/1312.jpg  \n",
            "  inflating: train/malignant/1313.jpg  \n",
            "  inflating: train/malignant/1314.jpg  \n",
            "  inflating: train/malignant/1315.jpg  \n",
            "  inflating: train/malignant/1316.jpg  \n",
            "  inflating: train/malignant/1317.jpg  \n",
            "  inflating: train/malignant/1318.jpg  \n",
            "  inflating: train/malignant/1319.jpg  \n",
            "  inflating: train/malignant/132.jpg  \n",
            "  inflating: train/malignant/1321.jpg  \n",
            "  inflating: train/malignant/1323.jpg  \n",
            "  inflating: train/malignant/1324.jpg  \n",
            "  inflating: train/malignant/1325.jpg  \n",
            "  inflating: train/malignant/1326.jpg  \n",
            "  inflating: train/malignant/1327.jpg  \n",
            "  inflating: train/malignant/1328.jpg  \n",
            "  inflating: train/malignant/1329.jpg  \n",
            "  inflating: train/malignant/133.jpg  \n",
            "  inflating: train/malignant/1331.jpg  \n",
            "  inflating: train/malignant/1332.jpg  \n",
            "  inflating: train/malignant/1334.jpg  \n",
            "  inflating: train/malignant/1335.jpg  \n",
            "  inflating: train/malignant/1337.jpg  \n",
            "  inflating: train/malignant/1338.jpg  \n",
            "  inflating: train/malignant/134.jpg  \n",
            "  inflating: train/malignant/1340.jpg  \n",
            "  inflating: train/malignant/1341.jpg  \n",
            "  inflating: train/malignant/1343.jpg  \n",
            "  inflating: train/malignant/1344.jpg  \n",
            "  inflating: train/malignant/1345.jpg  \n",
            "  inflating: train/malignant/1346.jpg  \n",
            "  inflating: train/malignant/1348.jpg  \n",
            "  inflating: train/malignant/1349.jpg  \n",
            "  inflating: train/malignant/135.jpg  \n",
            "  inflating: train/malignant/1350.jpg  \n",
            "  inflating: train/malignant/1351.jpg  \n",
            "  inflating: train/malignant/1352.jpg  \n",
            "  inflating: train/malignant/1353.jpg  \n",
            "  inflating: train/malignant/1356.jpg  \n",
            "  inflating: train/malignant/1357.jpg  \n",
            "  inflating: train/malignant/136.jpg  \n",
            "  inflating: train/malignant/1360.jpg  \n",
            "  inflating: train/malignant/1361.jpg  \n",
            "  inflating: train/malignant/1362.jpg  \n",
            "  inflating: train/malignant/1363.jpg  \n",
            "  inflating: train/malignant/1365.jpg  \n",
            "  inflating: train/malignant/1367.jpg  \n",
            "  inflating: train/malignant/1368.jpg  \n",
            "  inflating: train/malignant/1369.jpg  \n",
            "  inflating: train/malignant/137.jpg  \n",
            "  inflating: train/malignant/1371.jpg  \n",
            "  inflating: train/malignant/1372.jpg  \n",
            "  inflating: train/malignant/1373.jpg  \n",
            "  inflating: train/malignant/1375.jpg  \n",
            "  inflating: train/malignant/1376.jpg  \n",
            "  inflating: train/malignant/1377.jpg  \n",
            "  inflating: train/malignant/138.jpg  \n",
            "  inflating: train/malignant/1381.jpg  \n",
            "  inflating: train/malignant/1384.jpg  \n",
            "  inflating: train/malignant/1385.jpg  \n",
            "  inflating: train/malignant/1386.jpg  \n",
            "  inflating: train/malignant/1387.jpg  \n",
            "  inflating: train/malignant/1388.jpg  \n",
            "  inflating: train/malignant/1389.jpg  \n",
            "  inflating: train/malignant/1390.jpg  \n",
            "  inflating: train/malignant/1391.jpg  \n",
            "  inflating: train/malignant/1392.jpg  \n",
            "  inflating: train/malignant/1393.jpg  \n",
            "  inflating: train/malignant/1394.jpg  \n",
            "  inflating: train/malignant/1396.jpg  \n",
            "  inflating: train/malignant/1397.jpg  \n",
            "  inflating: train/malignant/1398.jpg  \n",
            "  inflating: train/malignant/1399.jpg  \n",
            "  inflating: train/malignant/14.jpg  \n",
            "  inflating: train/malignant/140.jpg  \n",
            "  inflating: train/malignant/1400.jpg  \n",
            "  inflating: train/malignant/1403.jpg  \n",
            "  inflating: train/malignant/1404.jpg  \n",
            "  inflating: train/malignant/1405.jpg  \n",
            "  inflating: train/malignant/1406.jpg  \n",
            "  inflating: train/malignant/1407.jpg  \n",
            "  inflating: train/malignant/1408.jpg  \n",
            "  inflating: train/malignant/1409.jpg  \n",
            "  inflating: train/malignant/141.jpg  \n",
            "  inflating: train/malignant/1410.jpg  \n",
            "  inflating: train/malignant/1411.jpg  \n",
            "  inflating: train/malignant/1412.jpg  \n",
            "  inflating: train/malignant/1413.jpg  \n",
            "  inflating: train/malignant/1414.jpg  \n",
            "  inflating: train/malignant/1415.jpg  \n",
            "  inflating: train/malignant/1416.jpg  \n",
            "  inflating: train/malignant/1418.jpg  \n",
            "  inflating: train/malignant/1419.jpg  \n",
            "  inflating: train/malignant/142.jpg  \n",
            "  inflating: train/malignant/1420.jpg  \n",
            "  inflating: train/malignant/1421.jpg  \n",
            "  inflating: train/malignant/1423.jpg  \n",
            "  inflating: train/malignant/1424.jpg  \n",
            "  inflating: train/malignant/1426.jpg  \n",
            "  inflating: train/malignant/1428.jpg  \n",
            "  inflating: train/malignant/1429.jpg  \n",
            "  inflating: train/malignant/143.jpg  \n",
            "  inflating: train/malignant/1431.jpg  \n",
            "  inflating: train/malignant/1432.jpg  \n",
            "  inflating: train/malignant/1433.jpg  \n",
            "  inflating: train/malignant/1434.jpg  \n",
            "  inflating: train/malignant/1435.jpg  \n",
            "  inflating: train/malignant/1437.jpg  \n",
            "  inflating: train/malignant/1439.jpg  \n",
            "  inflating: train/malignant/144.jpg  \n",
            "  inflating: train/malignant/1440.jpg  \n",
            "  inflating: train/malignant/1441.jpg  \n",
            "  inflating: train/malignant/1442.jpg  \n",
            "  inflating: train/malignant/1444.jpg  \n",
            "  inflating: train/malignant/1445.jpg  \n",
            "  inflating: train/malignant/1446.jpg  \n",
            "  inflating: train/malignant/1448.jpg  \n",
            "  inflating: train/malignant/1449.jpg  \n",
            "  inflating: train/malignant/145.jpg  \n",
            "  inflating: train/malignant/1450.jpg  \n",
            "  inflating: train/malignant/1452.jpg  \n",
            "  inflating: train/malignant/1453.jpg  \n",
            "  inflating: train/malignant/1454.jpg  \n",
            "  inflating: train/malignant/1455.jpg  \n",
            "  inflating: train/malignant/1456.jpg  \n",
            "  inflating: train/malignant/1457.jpg  \n",
            "  inflating: train/malignant/1458.jpg  \n",
            "  inflating: train/malignant/1459.jpg  \n",
            "  inflating: train/malignant/146.jpg  \n",
            "  inflating: train/malignant/1460.jpg  \n",
            "  inflating: train/malignant/1462.jpg  \n",
            "  inflating: train/malignant/1463.jpg  \n",
            "  inflating: train/malignant/1465.jpg  \n",
            "  inflating: train/malignant/1466.jpg  \n",
            "  inflating: train/malignant/1467.jpg  \n",
            "  inflating: train/malignant/1468.jpg  \n",
            "  inflating: train/malignant/1469.jpg  \n",
            "  inflating: train/malignant/147.jpg  \n",
            "  inflating: train/malignant/1470.jpg  \n",
            "  inflating: train/malignant/1471.jpg  \n",
            "  inflating: train/malignant/1472.jpg  \n",
            "  inflating: train/malignant/1473.jpg  \n",
            "  inflating: train/malignant/1474.jpg  \n",
            "  inflating: train/malignant/1475.jpg  \n",
            "  inflating: train/malignant/1476.jpg  \n",
            "  inflating: train/malignant/1477.jpg  \n",
            "  inflating: train/malignant/1478.jpg  \n",
            "  inflating: train/malignant/1479.jpg  \n",
            "  inflating: train/malignant/148.jpg  \n",
            "  inflating: train/malignant/1480.jpg  \n",
            "  inflating: train/malignant/1481.jpg  \n",
            "  inflating: train/malignant/1482.jpg  \n",
            "  inflating: train/malignant/1483.jpg  \n",
            "  inflating: train/malignant/1485.jpg  \n",
            "  inflating: train/malignant/1486.jpg  \n",
            "  inflating: train/malignant/1487.jpg  \n",
            "  inflating: train/malignant/1488.jpg  \n",
            "  inflating: train/malignant/149.jpg  \n",
            "  inflating: train/malignant/1490.jpg  \n",
            "  inflating: train/malignant/1491.jpg  \n",
            "  inflating: train/malignant/1492.jpg  \n",
            "  inflating: train/malignant/1493.jpg  \n",
            "  inflating: train/malignant/1494.jpg  \n",
            "  inflating: train/malignant/1496.jpg  \n",
            "  inflating: train/malignant/1497.jpg  \n",
            "  inflating: train/malignant/1498.jpg  \n",
            "  inflating: train/malignant/15.jpg  \n",
            "  inflating: train/malignant/150.jpg  \n",
            "  inflating: train/malignant/1500.jpg  \n",
            "  inflating: train/malignant/151.jpg  \n",
            "  inflating: train/malignant/152.jpg  \n",
            "  inflating: train/malignant/153.jpg  \n",
            "  inflating: train/malignant/154.jpg  \n",
            "  inflating: train/malignant/155.jpg  \n",
            "  inflating: train/malignant/157.jpg  \n",
            "  inflating: train/malignant/158.jpg  \n",
            "  inflating: train/malignant/159.jpg  \n",
            "  inflating: train/malignant/16.jpg  \n",
            "  inflating: train/malignant/160.jpg  \n",
            "  inflating: train/malignant/162.jpg  \n",
            "  inflating: train/malignant/163.jpg  \n",
            "  inflating: train/malignant/164.jpg  \n",
            "  inflating: train/malignant/165.jpg  \n",
            "  inflating: train/malignant/166.jpg  \n",
            "  inflating: train/malignant/167.jpg  \n",
            "  inflating: train/malignant/168.jpg  \n",
            "  inflating: train/malignant/169.jpg  \n",
            "  inflating: train/malignant/170.jpg  \n",
            "  inflating: train/malignant/171.jpg  \n",
            "  inflating: train/malignant/172.jpg  \n",
            "  inflating: train/malignant/174.jpg  \n",
            "  inflating: train/malignant/175.jpg  \n",
            "  inflating: train/malignant/176.jpg  \n",
            "  inflating: train/malignant/177.jpg  \n",
            "  inflating: train/malignant/178.jpg  \n",
            "  inflating: train/malignant/18.jpg  \n",
            "  inflating: train/malignant/180.jpg  \n",
            "  inflating: train/malignant/181.jpg  \n",
            "  inflating: train/malignant/183.jpg  \n",
            "  inflating: train/malignant/187.jpg  \n",
            "  inflating: train/malignant/188.jpg  \n",
            "  inflating: train/malignant/189.jpg  \n",
            "  inflating: train/malignant/19.jpg  \n",
            "  inflating: train/malignant/191.jpg  \n",
            "  inflating: train/malignant/192.jpg  \n",
            "  inflating: train/malignant/194.jpg  \n",
            "  inflating: train/malignant/197.jpg  \n",
            "  inflating: train/malignant/198.jpg  \n",
            "  inflating: train/malignant/199.jpg  \n",
            "  inflating: train/malignant/2.jpg   \n",
            "  inflating: train/malignant/20.jpg  \n",
            "  inflating: train/malignant/201.jpg  \n",
            "  inflating: train/malignant/202.jpg  \n",
            "  inflating: train/malignant/203.jpg  \n",
            "  inflating: train/malignant/204.jpg  \n",
            "  inflating: train/malignant/205.jpg  \n",
            "  inflating: train/malignant/206.jpg  \n",
            "  inflating: train/malignant/207.jpg  \n",
            "  inflating: train/malignant/209.jpg  \n",
            "  inflating: train/malignant/21.jpg  \n",
            "  inflating: train/malignant/210.jpg  \n",
            "  inflating: train/malignant/211.jpg  \n",
            "  inflating: train/malignant/212.jpg  \n",
            "  inflating: train/malignant/213.jpg  \n",
            "  inflating: train/malignant/214.jpg  \n",
            "  inflating: train/malignant/215.jpg  \n",
            "  inflating: train/malignant/216.jpg  \n",
            "  inflating: train/malignant/217.jpg  \n",
            "  inflating: train/malignant/218.jpg  \n",
            "  inflating: train/malignant/219.jpg  \n",
            "  inflating: train/malignant/22.jpg  \n",
            "  inflating: train/malignant/220.jpg  \n",
            "  inflating: train/malignant/221.jpg  \n",
            "  inflating: train/malignant/222.jpg  \n",
            "  inflating: train/malignant/223.jpg  \n",
            "  inflating: train/malignant/224.jpg  \n",
            "  inflating: train/malignant/225.jpg  \n",
            "  inflating: train/malignant/226.jpg  \n",
            "  inflating: train/malignant/227.jpg  \n",
            "  inflating: train/malignant/228.jpg  \n",
            "  inflating: train/malignant/229.jpg  \n",
            "  inflating: train/malignant/23.jpg  \n",
            "  inflating: train/malignant/230.jpg  \n",
            "  inflating: train/malignant/233.jpg  \n",
            "  inflating: train/malignant/234.jpg  \n",
            "  inflating: train/malignant/235.jpg  \n",
            "  inflating: train/malignant/236.jpg  \n",
            "  inflating: train/malignant/239.jpg  \n",
            "  inflating: train/malignant/240.jpg  \n",
            "  inflating: train/malignant/241.jpg  \n",
            "  inflating: train/malignant/242.jpg  \n",
            "  inflating: train/malignant/243.jpg  \n",
            "  inflating: train/malignant/244.jpg  \n",
            "  inflating: train/malignant/245.jpg  \n",
            "  inflating: train/malignant/246.jpg  \n",
            "  inflating: train/malignant/248.jpg  \n",
            "  inflating: train/malignant/249.jpg  \n",
            "  inflating: train/malignant/25.jpg  \n",
            "  inflating: train/malignant/250.jpg  \n",
            "  inflating: train/malignant/251.jpg  \n",
            "  inflating: train/malignant/252.jpg  \n",
            "  inflating: train/malignant/253.jpg  \n",
            "  inflating: train/malignant/254.jpg  \n",
            "  inflating: train/malignant/255.jpg  \n",
            "  inflating: train/malignant/259.jpg  \n",
            "  inflating: train/malignant/26.jpg  \n",
            "  inflating: train/malignant/261.jpg  \n",
            "  inflating: train/malignant/262.jpg  \n",
            "  inflating: train/malignant/263.jpg  \n",
            "  inflating: train/malignant/264.jpg  \n",
            "  inflating: train/malignant/265.jpg  \n",
            "  inflating: train/malignant/266.jpg  \n",
            "  inflating: train/malignant/267.jpg  \n",
            "  inflating: train/malignant/268.jpg  \n",
            "  inflating: train/malignant/269.jpg  \n",
            "  inflating: train/malignant/27.jpg  \n",
            "  inflating: train/malignant/270.jpg  \n",
            "  inflating: train/malignant/271.jpg  \n",
            "  inflating: train/malignant/272.jpg  \n",
            "  inflating: train/malignant/273.jpg  \n",
            "  inflating: train/malignant/274.jpg  \n",
            "  inflating: train/malignant/277.jpg  \n",
            "  inflating: train/malignant/278.jpg  \n",
            "  inflating: train/malignant/279.jpg  \n",
            "  inflating: train/malignant/28.jpg  \n",
            "  inflating: train/malignant/280.jpg  \n",
            "  inflating: train/malignant/281.jpg  \n",
            "  inflating: train/malignant/282.jpg  \n",
            "  inflating: train/malignant/283.jpg  \n",
            "  inflating: train/malignant/284.jpg  \n",
            "  inflating: train/malignant/285.jpg  \n",
            "  inflating: train/malignant/286.jpg  \n",
            "  inflating: train/malignant/287.jpg  \n",
            "  inflating: train/malignant/288.jpg  \n",
            "  inflating: train/malignant/289.jpg  \n",
            "  inflating: train/malignant/29.jpg  \n",
            "  inflating: train/malignant/290.jpg  \n",
            "  inflating: train/malignant/291.jpg  \n",
            "  inflating: train/malignant/292.jpg  \n",
            "  inflating: train/malignant/293.jpg  \n",
            "  inflating: train/malignant/294.jpg  \n",
            "  inflating: train/malignant/295.jpg  \n",
            "  inflating: train/malignant/296.jpg  \n",
            "  inflating: train/malignant/297.jpg  \n",
            "  inflating: train/malignant/298.jpg  \n",
            "  inflating: train/malignant/299.jpg  \n",
            "  inflating: train/malignant/30.jpg  \n",
            "  inflating: train/malignant/300.jpg  \n",
            "  inflating: train/malignant/301.jpg  \n",
            "  inflating: train/malignant/302.jpg  \n",
            "  inflating: train/malignant/304.jpg  \n",
            "  inflating: train/malignant/305.jpg  \n",
            "  inflating: train/malignant/306.jpg  \n",
            "  inflating: train/malignant/308.jpg  \n",
            "  inflating: train/malignant/309.jpg  \n",
            "  inflating: train/malignant/31.jpg  \n",
            "  inflating: train/malignant/311.jpg  \n",
            "  inflating: train/malignant/312.jpg  \n",
            "  inflating: train/malignant/313.jpg  \n",
            "  inflating: train/malignant/314.jpg  \n",
            "  inflating: train/malignant/315.jpg  \n",
            "  inflating: train/malignant/316.jpg  \n",
            "  inflating: train/malignant/319.jpg  \n",
            "  inflating: train/malignant/32.jpg  \n",
            "  inflating: train/malignant/320.jpg  \n",
            "  inflating: train/malignant/321.jpg  \n",
            "  inflating: train/malignant/323.jpg  \n",
            "  inflating: train/malignant/324.jpg  \n",
            "  inflating: train/malignant/325.jpg  \n",
            "  inflating: train/malignant/326.jpg  \n",
            "  inflating: train/malignant/327.jpg  \n",
            "  inflating: train/malignant/328.jpg  \n",
            "  inflating: train/malignant/329.jpg  \n",
            "  inflating: train/malignant/330.jpg  \n",
            "  inflating: train/malignant/331.jpg  \n",
            "  inflating: train/malignant/332.jpg  \n",
            "  inflating: train/malignant/333.jpg  \n",
            "  inflating: train/malignant/334.jpg  \n",
            "  inflating: train/malignant/335.jpg  \n",
            "  inflating: train/malignant/336.jpg  \n",
            "  inflating: train/malignant/337.jpg  \n",
            "  inflating: train/malignant/339.jpg  \n",
            "  inflating: train/malignant/34.jpg  \n",
            "  inflating: train/malignant/340.jpg  \n",
            "  inflating: train/malignant/341.jpg  \n",
            "  inflating: train/malignant/344.jpg  \n",
            "  inflating: train/malignant/345.jpg  \n",
            "  inflating: train/malignant/346.jpg  \n",
            "  inflating: train/malignant/347.jpg  \n",
            "  inflating: train/malignant/349.jpg  \n",
            "  inflating: train/malignant/35.jpg  \n",
            "  inflating: train/malignant/350.jpg  \n",
            "  inflating: train/malignant/351.jpg  \n",
            "  inflating: train/malignant/352.jpg  \n",
            "  inflating: train/malignant/353.jpg  \n",
            "  inflating: train/malignant/354.jpg  \n",
            "  inflating: train/malignant/357.jpg  \n",
            "  inflating: train/malignant/358.jpg  \n",
            "  inflating: train/malignant/359.jpg  \n",
            "  inflating: train/malignant/36.jpg  \n",
            "  inflating: train/malignant/361.jpg  \n",
            "  inflating: train/malignant/362.jpg  \n",
            "  inflating: train/malignant/363.jpg  \n",
            "  inflating: train/malignant/365.jpg  \n",
            "  inflating: train/malignant/366.jpg  \n",
            "  inflating: train/malignant/367.jpg  \n",
            "  inflating: train/malignant/368.jpg  \n",
            "  inflating: train/malignant/369.jpg  \n",
            "  inflating: train/malignant/37.jpg  \n",
            "  inflating: train/malignant/370.jpg  \n",
            "  inflating: train/malignant/371.jpg  \n",
            "  inflating: train/malignant/372.jpg  \n",
            "  inflating: train/malignant/373.jpg  \n",
            "  inflating: train/malignant/374.jpg  \n",
            "  inflating: train/malignant/376.jpg  \n",
            "  inflating: train/malignant/377.jpg  \n",
            "  inflating: train/malignant/378.jpg  \n",
            "  inflating: train/malignant/379.jpg  \n",
            "  inflating: train/malignant/38.jpg  \n",
            "  inflating: train/malignant/380.jpg  \n",
            "  inflating: train/malignant/383.jpg  \n",
            "  inflating: train/malignant/385.jpg  \n",
            "  inflating: train/malignant/386.jpg  \n",
            "  inflating: train/malignant/387.jpg  \n",
            "  inflating: train/malignant/388.jpg  \n",
            "  inflating: train/malignant/391.jpg  \n",
            "  inflating: train/malignant/392.jpg  \n",
            "  inflating: train/malignant/393.jpg  \n",
            "  inflating: train/malignant/395.jpg  \n",
            "  inflating: train/malignant/396.jpg  \n",
            "  inflating: train/malignant/397.jpg  \n",
            "  inflating: train/malignant/398.jpg  \n",
            "  inflating: train/malignant/40.jpg  \n",
            "  inflating: train/malignant/400.jpg  \n",
            "  inflating: train/malignant/401.jpg  \n",
            "  inflating: train/malignant/403.jpg  \n",
            "  inflating: train/malignant/404.jpg  \n",
            "  inflating: train/malignant/406.jpg  \n",
            "  inflating: train/malignant/408.jpg  \n",
            "  inflating: train/malignant/41.jpg  \n",
            "  inflating: train/malignant/410.jpg  \n",
            "  inflating: train/malignant/411.jpg  \n",
            "  inflating: train/malignant/412.jpg  \n",
            "  inflating: train/malignant/413.jpg  \n",
            "  inflating: train/malignant/414.jpg  \n",
            "  inflating: train/malignant/415.jpg  \n",
            "  inflating: train/malignant/416.jpg  \n",
            "  inflating: train/malignant/417.jpg  \n",
            "  inflating: train/malignant/418.jpg  \n",
            "  inflating: train/malignant/42.jpg  \n",
            "  inflating: train/malignant/420.jpg  \n",
            "  inflating: train/malignant/422.jpg  \n",
            "  inflating: train/malignant/423.jpg  \n",
            "  inflating: train/malignant/425.jpg  \n",
            "  inflating: train/malignant/427.jpg  \n",
            "  inflating: train/malignant/429.jpg  \n",
            "  inflating: train/malignant/43.jpg  \n",
            "  inflating: train/malignant/431.jpg  \n",
            "  inflating: train/malignant/432.jpg  \n",
            "  inflating: train/malignant/433.jpg  \n",
            "  inflating: train/malignant/434.jpg  \n",
            "  inflating: train/malignant/435.jpg  \n",
            "  inflating: train/malignant/438.jpg  \n",
            "  inflating: train/malignant/439.jpg  \n",
            "  inflating: train/malignant/440.jpg  \n",
            "  inflating: train/malignant/441.jpg  \n",
            "  inflating: train/malignant/442.jpg  \n",
            "  inflating: train/malignant/443.jpg  \n",
            "  inflating: train/malignant/444.jpg  \n",
            "  inflating: train/malignant/446.jpg  \n",
            "  inflating: train/malignant/447.jpg  \n",
            "  inflating: train/malignant/448.jpg  \n",
            "  inflating: train/malignant/449.jpg  \n",
            "  inflating: train/malignant/45.jpg  \n",
            "  inflating: train/malignant/451.jpg  \n",
            "  inflating: train/malignant/452.jpg  \n",
            "  inflating: train/malignant/453.jpg  \n",
            "  inflating: train/malignant/454.jpg  \n",
            "  inflating: train/malignant/455.jpg  \n",
            "  inflating: train/malignant/456.jpg  \n",
            "  inflating: train/malignant/457.jpg  \n",
            "  inflating: train/malignant/458.jpg  \n",
            "  inflating: train/malignant/460.jpg  \n",
            "  inflating: train/malignant/461.jpg  \n",
            "  inflating: train/malignant/462.jpg  \n",
            "  inflating: train/malignant/464.jpg  \n",
            "  inflating: train/malignant/465.jpg  \n",
            "  inflating: train/malignant/466.jpg  \n",
            "  inflating: train/malignant/467.jpg  \n",
            "  inflating: train/malignant/468.jpg  \n",
            "  inflating: train/malignant/469.jpg  \n",
            "  inflating: train/malignant/47.jpg  \n",
            "  inflating: train/malignant/470.jpg  \n",
            "  inflating: train/malignant/471.jpg  \n",
            "  inflating: train/malignant/472.jpg  \n",
            "  inflating: train/malignant/473.jpg  \n",
            "  inflating: train/malignant/475.jpg  \n",
            "  inflating: train/malignant/476.jpg  \n",
            "  inflating: train/malignant/477.jpg  \n",
            "  inflating: train/malignant/478.jpg  \n",
            "  inflating: train/malignant/48.jpg  \n",
            "  inflating: train/malignant/480.jpg  \n",
            "  inflating: train/malignant/481.jpg  \n",
            "  inflating: train/malignant/482.jpg  \n",
            "  inflating: train/malignant/484.jpg  \n",
            "  inflating: train/malignant/485.jpg  \n",
            "  inflating: train/malignant/486.jpg  \n",
            "  inflating: train/malignant/487.jpg  \n",
            "  inflating: train/malignant/488.jpg  \n",
            "  inflating: train/malignant/489.jpg  \n",
            "  inflating: train/malignant/49.jpg  \n",
            "  inflating: train/malignant/490.jpg  \n",
            "  inflating: train/malignant/491.jpg  \n",
            "  inflating: train/malignant/492.jpg  \n",
            "  inflating: train/malignant/493.jpg  \n",
            "  inflating: train/malignant/494.jpg  \n",
            "  inflating: train/malignant/495.jpg  \n",
            "  inflating: train/malignant/496.jpg  \n",
            "  inflating: train/malignant/497.jpg  \n",
            "  inflating: train/malignant/498.jpg  \n",
            "  inflating: train/malignant/499.jpg  \n",
            "  inflating: train/malignant/5.jpg   \n",
            "  inflating: train/malignant/50.jpg  \n",
            "  inflating: train/malignant/500.jpg  \n",
            "  inflating: train/malignant/502.jpg  \n",
            "  inflating: train/malignant/503.jpg  \n",
            "  inflating: train/malignant/505.jpg  \n",
            "  inflating: train/malignant/506.jpg  \n",
            "  inflating: train/malignant/509.jpg  \n",
            "  inflating: train/malignant/51.jpg  \n",
            "  inflating: train/malignant/510.jpg  \n",
            "  inflating: train/malignant/512.jpg  \n",
            "  inflating: train/malignant/513.jpg  \n",
            "  inflating: train/malignant/514.jpg  \n",
            "  inflating: train/malignant/515.jpg  \n",
            "  inflating: train/malignant/516.jpg  \n",
            "  inflating: train/malignant/517.jpg  \n",
            "  inflating: train/malignant/518.jpg  \n",
            "  inflating: train/malignant/520.jpg  \n",
            "  inflating: train/malignant/521.jpg  \n",
            "  inflating: train/malignant/522.jpg  \n",
            "  inflating: train/malignant/523.jpg  \n",
            "  inflating: train/malignant/524.jpg  \n",
            "  inflating: train/malignant/525.jpg  \n",
            "  inflating: train/malignant/526.jpg  \n",
            "  inflating: train/malignant/527.jpg  \n",
            "  inflating: train/malignant/529.jpg  \n",
            "  inflating: train/malignant/53.jpg  \n",
            "  inflating: train/malignant/530.jpg  \n",
            "  inflating: train/malignant/531.jpg  \n",
            "  inflating: train/malignant/532.jpg  \n",
            "  inflating: train/malignant/533.jpg  \n",
            "  inflating: train/malignant/534.jpg  \n",
            "  inflating: train/malignant/535.jpg  \n",
            "  inflating: train/malignant/537.jpg  \n",
            "  inflating: train/malignant/538.jpg  \n",
            "  inflating: train/malignant/539.jpg  \n",
            "  inflating: train/malignant/540.jpg  \n",
            "  inflating: train/malignant/541.jpg  \n",
            "  inflating: train/malignant/542.jpg  \n",
            "  inflating: train/malignant/543.jpg  \n",
            "  inflating: train/malignant/544.jpg  \n",
            "  inflating: train/malignant/545.jpg  \n",
            "  inflating: train/malignant/547.jpg  \n",
            "  inflating: train/malignant/548.jpg  \n",
            "  inflating: train/malignant/549.jpg  \n",
            "  inflating: train/malignant/55.jpg  \n",
            "  inflating: train/malignant/550.jpg  \n",
            "  inflating: train/malignant/551.jpg  \n",
            "  inflating: train/malignant/552.jpg  \n",
            "  inflating: train/malignant/553.jpg  \n",
            "  inflating: train/malignant/555.jpg  \n",
            "  inflating: train/malignant/557.jpg  \n",
            "  inflating: train/malignant/558.jpg  \n",
            "  inflating: train/malignant/559.jpg  \n",
            "  inflating: train/malignant/56.jpg  \n",
            "  inflating: train/malignant/560.jpg  \n",
            "  inflating: train/malignant/561.jpg  \n",
            "  inflating: train/malignant/563.jpg  \n",
            "  inflating: train/malignant/564.jpg  \n",
            "  inflating: train/malignant/565.jpg  \n",
            "  inflating: train/malignant/566.jpg  \n",
            "  inflating: train/malignant/567.jpg  \n",
            "  inflating: train/malignant/569.jpg  \n",
            "  inflating: train/malignant/571.jpg  \n",
            "  inflating: train/malignant/574.jpg  \n",
            "  inflating: train/malignant/576.jpg  \n",
            "  inflating: train/malignant/577.jpg  \n",
            "  inflating: train/malignant/578.jpg  \n",
            "  inflating: train/malignant/579.jpg  \n",
            "  inflating: train/malignant/580.jpg  \n",
            "  inflating: train/malignant/581.jpg  \n",
            "  inflating: train/malignant/582.jpg  \n",
            "  inflating: train/malignant/583.jpg  \n",
            "  inflating: train/malignant/584.jpg  \n",
            "  inflating: train/malignant/585.jpg  \n",
            "  inflating: train/malignant/586.jpg  \n",
            "  inflating: train/malignant/587.jpg  \n",
            "  inflating: train/malignant/588.jpg  \n",
            "  inflating: train/malignant/589.jpg  \n",
            "  inflating: train/malignant/59.jpg  \n",
            "  inflating: train/malignant/591.jpg  \n",
            "  inflating: train/malignant/594.jpg  \n",
            "  inflating: train/malignant/595.jpg  \n",
            "  inflating: train/malignant/597.jpg  \n",
            "  inflating: train/malignant/598.jpg  \n",
            "  inflating: train/malignant/599.jpg  \n",
            "  inflating: train/malignant/6.jpg   \n",
            "  inflating: train/malignant/60.jpg  \n",
            "  inflating: train/malignant/600.jpg  \n",
            "  inflating: train/malignant/601.jpg  \n",
            "  inflating: train/malignant/604.jpg  \n",
            "  inflating: train/malignant/605.jpg  \n",
            "  inflating: train/malignant/606.jpg  \n",
            "  inflating: train/malignant/607.jpg  \n",
            "  inflating: train/malignant/608.jpg  \n",
            "  inflating: train/malignant/609.jpg  \n",
            "  inflating: train/malignant/61.jpg  \n",
            "  inflating: train/malignant/610.jpg  \n",
            "  inflating: train/malignant/611.jpg  \n",
            "  inflating: train/malignant/612.jpg  \n",
            "  inflating: train/malignant/613.jpg  \n",
            "  inflating: train/malignant/616.jpg  \n",
            "  inflating: train/malignant/617.jpg  \n",
            "  inflating: train/malignant/618.jpg  \n",
            "  inflating: train/malignant/620.jpg  \n",
            "  inflating: train/malignant/621.jpg  \n",
            "  inflating: train/malignant/622.jpg  \n",
            "  inflating: train/malignant/623.jpg  \n",
            "  inflating: train/malignant/624.jpg  \n",
            "  inflating: train/malignant/625.jpg  \n",
            "  inflating: train/malignant/626.jpg  \n",
            "  inflating: train/malignant/627.jpg  \n",
            "  inflating: train/malignant/629.jpg  \n",
            "  inflating: train/malignant/63.jpg  \n",
            "  inflating: train/malignant/630.jpg  \n",
            "  inflating: train/malignant/631.jpg  \n",
            "  inflating: train/malignant/632.jpg  \n",
            "  inflating: train/malignant/633.jpg  \n",
            "  inflating: train/malignant/634.jpg  \n",
            "  inflating: train/malignant/635.jpg  \n",
            "  inflating: train/malignant/636.jpg  \n",
            "  inflating: train/malignant/637.jpg  \n",
            "  inflating: train/malignant/639.jpg  \n",
            "  inflating: train/malignant/64.jpg  \n",
            "  inflating: train/malignant/640.jpg  \n",
            "  inflating: train/malignant/642.jpg  \n",
            "  inflating: train/malignant/644.jpg  \n",
            "  inflating: train/malignant/645.jpg  \n",
            "  inflating: train/malignant/646.jpg  \n",
            "  inflating: train/malignant/647.jpg  \n",
            "  inflating: train/malignant/648.jpg  \n",
            "  inflating: train/malignant/649.jpg  \n",
            "  inflating: train/malignant/650.jpg  \n",
            "  inflating: train/malignant/651.jpg  \n",
            "  inflating: train/malignant/652.jpg  \n",
            "  inflating: train/malignant/654.jpg  \n",
            "  inflating: train/malignant/655.jpg  \n",
            "  inflating: train/malignant/656.jpg  \n",
            "  inflating: train/malignant/657.jpg  \n",
            "  inflating: train/malignant/659.jpg  \n",
            "  inflating: train/malignant/661.jpg  \n",
            "  inflating: train/malignant/662.jpg  \n",
            "  inflating: train/malignant/663.jpg  \n",
            "  inflating: train/malignant/664.jpg  \n",
            "  inflating: train/malignant/665.jpg  \n",
            "  inflating: train/malignant/666.jpg  \n",
            "  inflating: train/malignant/668.jpg  \n",
            "  inflating: train/malignant/669.jpg  \n",
            "  inflating: train/malignant/67.jpg  \n",
            "  inflating: train/malignant/671.jpg  \n",
            "  inflating: train/malignant/672.jpg  \n",
            "  inflating: train/malignant/673.jpg  \n",
            "  inflating: train/malignant/675.jpg  \n",
            "  inflating: train/malignant/676.jpg  \n",
            "  inflating: train/malignant/677.jpg  \n",
            "  inflating: train/malignant/678.jpg  \n",
            "  inflating: train/malignant/680.jpg  \n",
            "  inflating: train/malignant/681.jpg  \n",
            "  inflating: train/malignant/682.jpg  \n",
            "  inflating: train/malignant/683.jpg  \n",
            "  inflating: train/malignant/684.jpg  \n",
            "  inflating: train/malignant/685.jpg  \n",
            "  inflating: train/malignant/687.jpg  \n",
            "  inflating: train/malignant/688.jpg  \n",
            "  inflating: train/malignant/689.jpg  \n",
            "  inflating: train/malignant/69.jpg  \n",
            "  inflating: train/malignant/690.jpg  \n",
            "  inflating: train/malignant/691.jpg  \n",
            "  inflating: train/malignant/692.jpg  \n",
            "  inflating: train/malignant/693.jpg  \n",
            "  inflating: train/malignant/695.jpg  \n",
            "  inflating: train/malignant/697.jpg  \n",
            "  inflating: train/malignant/698.jpg  \n",
            "  inflating: train/malignant/699.jpg  \n",
            "  inflating: train/malignant/7.jpg   \n",
            "  inflating: train/malignant/70.jpg  \n",
            "  inflating: train/malignant/700.jpg  \n",
            "  inflating: train/malignant/701.jpg  \n",
            "  inflating: train/malignant/702.jpg  \n",
            "  inflating: train/malignant/703.jpg  \n",
            "  inflating: train/malignant/704.jpg  \n",
            "  inflating: train/malignant/705.jpg  \n",
            "  inflating: train/malignant/707.jpg  \n",
            "  inflating: train/malignant/708.jpg  \n",
            "  inflating: train/malignant/71.jpg  \n",
            "  inflating: train/malignant/710.jpg  \n",
            "  inflating: train/malignant/711.jpg  \n",
            "  inflating: train/malignant/712.jpg  \n",
            "  inflating: train/malignant/714.jpg  \n",
            "  inflating: train/malignant/715.jpg  \n",
            "  inflating: train/malignant/716.jpg  \n",
            "  inflating: train/malignant/717.jpg  \n",
            "  inflating: train/malignant/718.jpg  \n",
            "  inflating: train/malignant/719.jpg  \n",
            "  inflating: train/malignant/72.jpg  \n",
            "  inflating: train/malignant/720.jpg  \n",
            "  inflating: train/malignant/721.jpg  \n",
            "  inflating: train/malignant/722.jpg  \n",
            "  inflating: train/malignant/723.jpg  \n",
            "  inflating: train/malignant/724.jpg  \n",
            "  inflating: train/malignant/725.jpg  \n",
            "  inflating: train/malignant/726.jpg  \n",
            "  inflating: train/malignant/727.jpg  \n",
            "  inflating: train/malignant/728.jpg  \n",
            "  inflating: train/malignant/729.jpg  \n",
            "  inflating: train/malignant/730.jpg  \n",
            "  inflating: train/malignant/731.jpg  \n",
            "  inflating: train/malignant/732.jpg  \n",
            "  inflating: train/malignant/733.jpg  \n",
            "  inflating: train/malignant/734.jpg  \n",
            "  inflating: train/malignant/736.jpg  \n",
            "  inflating: train/malignant/737.jpg  \n",
            "  inflating: train/malignant/738.jpg  \n",
            "  inflating: train/malignant/740.jpg  \n",
            "  inflating: train/malignant/741.jpg  \n",
            "  inflating: train/malignant/742.jpg  \n",
            "  inflating: train/malignant/743.jpg  \n",
            "  inflating: train/malignant/745.jpg  \n",
            "  inflating: train/malignant/746.jpg  \n",
            "  inflating: train/malignant/748.jpg  \n",
            "  inflating: train/malignant/75.jpg  \n",
            "  inflating: train/malignant/750.jpg  \n",
            "  inflating: train/malignant/751.jpg  \n",
            "  inflating: train/malignant/752.jpg  \n",
            "  inflating: train/malignant/753.jpg  \n",
            "  inflating: train/malignant/754.jpg  \n",
            "  inflating: train/malignant/755.jpg  \n",
            "  inflating: train/malignant/756.jpg  \n",
            "  inflating: train/malignant/758.jpg  \n",
            "  inflating: train/malignant/76.jpg  \n",
            "  inflating: train/malignant/760.jpg  \n",
            "  inflating: train/malignant/761.jpg  \n",
            "  inflating: train/malignant/764.jpg  \n",
            "  inflating: train/malignant/765.jpg  \n",
            "  inflating: train/malignant/766.jpg  \n",
            "  inflating: train/malignant/768.jpg  \n",
            "  inflating: train/malignant/769.jpg  \n",
            "  inflating: train/malignant/77.jpg  \n",
            "  inflating: train/malignant/770.jpg  \n",
            "  inflating: train/malignant/772.jpg  \n",
            "  inflating: train/malignant/774.jpg  \n",
            "  inflating: train/malignant/775.jpg  \n",
            "  inflating: train/malignant/777.jpg  \n",
            "  inflating: train/malignant/779.jpg  \n",
            "  inflating: train/malignant/78.jpg  \n",
            "  inflating: train/malignant/780.jpg  \n",
            "  inflating: train/malignant/781.jpg  \n",
            "  inflating: train/malignant/782.jpg  \n",
            "  inflating: train/malignant/783.jpg  \n",
            "  inflating: train/malignant/784.jpg  \n",
            "  inflating: train/malignant/785.jpg  \n",
            "  inflating: train/malignant/786.jpg  \n",
            "  inflating: train/malignant/787.jpg  \n",
            "  inflating: train/malignant/789.jpg  \n",
            "  inflating: train/malignant/79.jpg  \n",
            "  inflating: train/malignant/790.jpg  \n",
            "  inflating: train/malignant/791.jpg  \n",
            "  inflating: train/malignant/793.jpg  \n",
            "  inflating: train/malignant/795.jpg  \n",
            "  inflating: train/malignant/796.jpg  \n",
            "  inflating: train/malignant/798.jpg  \n",
            "  inflating: train/malignant/799.jpg  \n",
            "  inflating: train/malignant/80.jpg  \n",
            "  inflating: train/malignant/800.jpg  \n",
            "  inflating: train/malignant/801.jpg  \n",
            "  inflating: train/malignant/802.jpg  \n",
            "  inflating: train/malignant/803.jpg  \n",
            "  inflating: train/malignant/805.jpg  \n",
            "  inflating: train/malignant/806.jpg  \n",
            "  inflating: train/malignant/807.jpg  \n",
            "  inflating: train/malignant/809.jpg  \n",
            "  inflating: train/malignant/810.jpg  \n",
            "  inflating: train/malignant/811.jpg  \n",
            "  inflating: train/malignant/812.jpg  \n",
            "  inflating: train/malignant/813.jpg  \n",
            "  inflating: train/malignant/814.jpg  \n",
            "  inflating: train/malignant/815.jpg  \n",
            "  inflating: train/malignant/816.jpg  \n",
            "  inflating: train/malignant/818.jpg  \n",
            "  inflating: train/malignant/819.jpg  \n",
            "  inflating: train/malignant/82.jpg  \n",
            "  inflating: train/malignant/820.jpg  \n",
            "  inflating: train/malignant/821.jpg  \n",
            "  inflating: train/malignant/823.jpg  \n",
            "  inflating: train/malignant/824.jpg  \n",
            "  inflating: train/malignant/825.jpg  \n",
            "  inflating: train/malignant/827.jpg  \n",
            "  inflating: train/malignant/828.jpg  \n",
            "  inflating: train/malignant/829.jpg  \n",
            "  inflating: train/malignant/83.jpg  \n",
            "  inflating: train/malignant/830.jpg  \n",
            "  inflating: train/malignant/831.jpg  \n",
            "  inflating: train/malignant/833.jpg  \n",
            "  inflating: train/malignant/834.jpg  \n",
            "  inflating: train/malignant/835.jpg  \n",
            "  inflating: train/malignant/837.jpg  \n",
            "  inflating: train/malignant/84.jpg  \n",
            "  inflating: train/malignant/840.jpg  \n",
            "  inflating: train/malignant/841.jpg  \n",
            "  inflating: train/malignant/842.jpg  \n",
            "  inflating: train/malignant/843.jpg  \n",
            "  inflating: train/malignant/844.jpg  \n",
            "  inflating: train/malignant/845.jpg  \n",
            "  inflating: train/malignant/846.jpg  \n",
            "  inflating: train/malignant/847.jpg  \n",
            "  inflating: train/malignant/848.jpg  \n",
            "  inflating: train/malignant/849.jpg  \n",
            "  inflating: train/malignant/850.jpg  \n",
            "  inflating: train/malignant/851.jpg  \n",
            "  inflating: train/malignant/853.jpg  \n",
            "  inflating: train/malignant/854.jpg  \n",
            "  inflating: train/malignant/855.jpg  \n",
            "  inflating: train/malignant/856.jpg  \n",
            "  inflating: train/malignant/857.jpg  \n",
            "  inflating: train/malignant/858.jpg  \n",
            "  inflating: train/malignant/86.jpg  \n",
            "  inflating: train/malignant/860.jpg  \n",
            "  inflating: train/malignant/861.jpg  \n",
            "  inflating: train/malignant/862.jpg  \n",
            "  inflating: train/malignant/863.jpg  \n",
            "  inflating: train/malignant/865.jpg  \n",
            "  inflating: train/malignant/867.jpg  \n",
            "  inflating: train/malignant/869.jpg  \n",
            "  inflating: train/malignant/870.jpg  \n",
            "  inflating: train/malignant/872.jpg  \n",
            "  inflating: train/malignant/873.jpg  \n",
            "  inflating: train/malignant/875.jpg  \n",
            "  inflating: train/malignant/876.jpg  \n",
            "  inflating: train/malignant/877.jpg  \n",
            "  inflating: train/malignant/878.jpg  \n",
            "  inflating: train/malignant/879.jpg  \n",
            "  inflating: train/malignant/88.jpg  \n",
            "  inflating: train/malignant/880.jpg  \n",
            "  inflating: train/malignant/882.jpg  \n",
            "  inflating: train/malignant/883.jpg  \n",
            "  inflating: train/malignant/884.jpg  \n",
            "  inflating: train/malignant/885.jpg  \n",
            "  inflating: train/malignant/886.jpg  \n",
            "  inflating: train/malignant/888.jpg  \n",
            "  inflating: train/malignant/889.jpg  \n",
            "  inflating: train/malignant/89.jpg  \n",
            "  inflating: train/malignant/890.jpg  \n",
            "  inflating: train/malignant/891.jpg  \n",
            "  inflating: train/malignant/892.jpg  \n",
            "  inflating: train/malignant/895.jpg  \n",
            "  inflating: train/malignant/896.jpg  \n",
            "  inflating: train/malignant/897.jpg  \n",
            "  inflating: train/malignant/898.jpg  \n",
            "  inflating: train/malignant/899.jpg  \n",
            "  inflating: train/malignant/9.jpg   \n",
            "  inflating: train/malignant/90.jpg  \n",
            "  inflating: train/malignant/900.jpg  \n",
            "  inflating: train/malignant/901.jpg  \n",
            "  inflating: train/malignant/902.jpg  \n",
            "  inflating: train/malignant/903.jpg  \n",
            "  inflating: train/malignant/904.jpg  \n",
            "  inflating: train/malignant/906.jpg  \n",
            "  inflating: train/malignant/907.jpg  \n",
            "  inflating: train/malignant/908.jpg  \n",
            "  inflating: train/malignant/909.jpg  \n",
            "  inflating: train/malignant/910.jpg  \n",
            "  inflating: train/malignant/911.jpg  \n",
            "  inflating: train/malignant/912.jpg  \n",
            "  inflating: train/malignant/913.jpg  \n",
            "  inflating: train/malignant/914.jpg  \n",
            "  inflating: train/malignant/915.jpg  \n",
            "  inflating: train/malignant/916.jpg  \n",
            "  inflating: train/malignant/917.jpg  \n",
            "  inflating: train/malignant/918.jpg  \n",
            "  inflating: train/malignant/919.jpg  \n",
            "  inflating: train/malignant/920.jpg  \n",
            "  inflating: train/malignant/921.jpg  \n",
            "  inflating: train/malignant/922.jpg  \n",
            "  inflating: train/malignant/923.jpg  \n",
            "  inflating: train/malignant/924.jpg  \n",
            "  inflating: train/malignant/925.jpg  \n",
            "  inflating: train/malignant/926.jpg  \n",
            "  inflating: train/malignant/928.jpg  \n",
            "  inflating: train/malignant/929.jpg  \n",
            "  inflating: train/malignant/930.jpg  \n",
            "  inflating: train/malignant/931.jpg  \n",
            "  inflating: train/malignant/932.jpg  \n",
            "  inflating: train/malignant/933.jpg  \n",
            "  inflating: train/malignant/935.jpg  \n",
            "  inflating: train/malignant/936.jpg  \n",
            "  inflating: train/malignant/938.jpg  \n",
            "  inflating: train/malignant/939.jpg  \n",
            "  inflating: train/malignant/94.jpg  \n",
            "  inflating: train/malignant/941.jpg  \n",
            "  inflating: train/malignant/942.jpg  \n",
            "  inflating: train/malignant/943.jpg  \n",
            "  inflating: train/malignant/944.jpg  \n",
            "  inflating: train/malignant/945.jpg  \n",
            "  inflating: train/malignant/946.jpg  \n",
            "  inflating: train/malignant/95.jpg  \n",
            "  inflating: train/malignant/950.jpg  \n",
            "  inflating: train/malignant/951.jpg  \n",
            "  inflating: train/malignant/952.jpg  \n",
            "  inflating: train/malignant/954.jpg  \n",
            "  inflating: train/malignant/955.jpg  \n",
            "  inflating: train/malignant/956.jpg  \n",
            "  inflating: train/malignant/957.jpg  \n",
            "  inflating: train/malignant/958.jpg  \n",
            "  inflating: train/malignant/959.jpg  \n",
            "  inflating: train/malignant/96.jpg  \n",
            "  inflating: train/malignant/960.jpg  \n",
            "  inflating: train/malignant/961.jpg  \n",
            "  inflating: train/malignant/962.jpg  \n",
            "  inflating: train/malignant/963.jpg  \n",
            "  inflating: train/malignant/964.jpg  \n",
            "  inflating: train/malignant/965.jpg  \n",
            "  inflating: train/malignant/966.jpg  \n",
            "  inflating: train/malignant/967.jpg  \n",
            "  inflating: train/malignant/968.jpg  \n",
            "  inflating: train/malignant/969.jpg  \n",
            "  inflating: train/malignant/97.jpg  \n",
            "  inflating: train/malignant/970.jpg  \n",
            "  inflating: train/malignant/971.jpg  \n",
            "  inflating: train/malignant/972.jpg  \n",
            "  inflating: train/malignant/973.jpg  \n",
            "  inflating: train/malignant/974.jpg  \n",
            "  inflating: train/malignant/975.jpg  \n",
            "  inflating: train/malignant/976.jpg  \n",
            "  inflating: train/malignant/977.jpg  \n",
            "  inflating: train/malignant/978.jpg  \n",
            "  inflating: train/malignant/979.jpg  \n",
            "  inflating: train/malignant/98.jpg  \n",
            "  inflating: train/malignant/980.jpg  \n",
            "  inflating: train/malignant/981.jpg  \n",
            "  inflating: train/malignant/982.jpg  \n",
            "  inflating: train/malignant/983.jpg  \n",
            "  inflating: train/malignant/984.jpg  \n",
            "  inflating: train/malignant/986.jpg  \n",
            "  inflating: train/malignant/987.jpg  \n",
            "  inflating: train/malignant/988.jpg  \n",
            "  inflating: train/malignant/989.jpg  \n",
            "  inflating: train/malignant/99.jpg  \n",
            "  inflating: train/malignant/990.jpg  \n",
            "  inflating: train/malignant/991.jpg  \n",
            "  inflating: train/malignant/993.jpg  \n",
            "  inflating: train/malignant/996.jpg  \n",
            "  inflating: train/malignant/997.jpg  \n",
            "  inflating: train/malignant/998.jpg  \n",
            "  inflating: train/malignant/999.jpg  \n"
          ]
        }
      ],
      "source": [
        "! pip3 install -q kaggle\n",
        "\n",
        "from google.colab import files\n",
        "files.upload()\n",
        "\n",
        "! mkdir ~/.kaggle\n",
        "\n",
        "! cp kaggle.json /root/.kaggle\n",
        "\n",
        "! chmod 600 /root/.kaggle/kaggle.json\n",
        "\n",
        "! kaggle datasets download -d fanconic/skin-cancer-malignant-vs-benign\n",
        "\n",
        "! unzip skin-cancer-malignant-vs-benign"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "fq6agpjYClKH"
      },
      "source": [
        "# Step 1 : importing Essential Libraries"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "5KPbHafxClKJ"
      },
      "outputs": [],
      "source": [
        "import os\n",
        "\n",
        "%matplotlib inline\n",
        "import matplotlib.pyplot as plt\n",
        "import numpy as np\n",
        "import pandas as pd\n",
        "import os\n",
        "from glob import glob\n",
        "import seaborn as sns\n",
        "from PIL import Image\n",
        "np.random.seed(11) # It's my lucky number\n",
        "from sklearn.preprocessing import StandardScaler \n",
        "from sklearn.model_selection import train_test_split, KFold, cross_val_score, GridSearchCV\n",
        "from sklearn.metrics import accuracy_score\n",
        "import itertools\n",
        "\n",
        "import keras\n",
        "from keras.utils.np_utils import to_categorical # used for converting labels to one-hot-encoding\n",
        "from keras.models import Sequential, Model\n",
        "from keras.layers import Dense, Dropout, Flatten, Conv2D, MaxPool2D\n",
        "from keras import backend as K\n",
        "from keras.layers import BatchNormalization\n",
        "from tensorflow.keras.optimizers import Adam, RMSprop\n",
        "from keras.preprocessing.image import ImageDataGenerator\n",
        "from keras.callbacks import ReduceLROnPlateau\n",
        "from keras.wrappers.scikit_learn import KerasClassifier\n",
        "from tensorflow.keras.applications import VGG16 \n",
        "from tensorflow.keras.applications import InceptionV3\n",
        "from keras.applications.mobilenet_v2 import MobileNetV2\n",
        "from keras import backend as K \n",
        "os.environ['TF_CPP_MIN_LOG_LEVEL'] = '3'"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "fcqEOedHClKL"
      },
      "outputs": [],
      "source": [
        "from tensorflow.keras.applications import EfficientNetB2, EfficientNetB6"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "GGvzdIwwClKL"
      },
      "source": [
        "# Step 2 : Loading pictures and making Dictionary of images and labels"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "aEv6cJfaClKM"
      },
      "outputs": [],
      "source": [
        "from glob import glob\n",
        "folder_benign_train = glob('train/benign/*.jpg', recursive = True)\n",
        "folder_malignant_train = glob('train/malignant/*.jpg', recursive = True)\n",
        "\n",
        "folder_benign_test = glob('test/benign/*.jpg', recursive = True)\n",
        "folder_malignant_test = glob('test/malignant/*.jpg', recursive = True)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "VK0i8R-cClKN"
      },
      "outputs": [],
      "source": [
        "import cv2\n",
        "\n",
        "img_size = 75\n",
        "\n",
        "images_benign_train = list()\n",
        "images_malignant_train = list()\n",
        "images_benign_test = list()\n",
        "images_malignant_test = list()\n",
        "\n",
        "for i in folder_benign_train:\n",
        "    if i.endswith('.jpg'):\n",
        "        img = cv2.imread(i)\n",
        "        img_1 = cv2.resize(img, (img_size, img_size))\n",
        "        images_benign_train.append(img_1)\n",
        "        \n",
        "for i in folder_malignant_train:\n",
        "    if i.endswith('.jpg'):\n",
        "        img = cv2.imread(i)\n",
        "        img_1 = cv2.resize(img, (img_size, img_size))\n",
        "        images_malignant_train.append(img_1)\n",
        "        \n",
        "for i in folder_benign_test:\n",
        "    if i.endswith('.jpg'):\n",
        "        img = cv2.imread(i)\n",
        "        img_1 = cv2.resize(img, (img_size, img_size))\n",
        "        images_benign_test.append(img_1)\n",
        "        \n",
        "for i in folder_malignant_test:\n",
        "    if i.endswith('.jpg'):\n",
        "        img = cv2.imread(i)\n",
        "        img_1 = cv2.resize(img, (img_size, img_size))\n",
        "        images_malignant_test.append(img_1)\n",
        "\n",
        "images_train = images_benign_train + images_malignant_train\n",
        "images_test = images_benign_test + images_malignant_test"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "j5LCMhfKClKO"
      },
      "outputs": [],
      "source": [
        "import numpy as np\n",
        "\n",
        "X_train = np.stack(images_train)\n",
        "X_test = np.stack(images_test)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "IYU37rXrClKP"
      },
      "outputs": [],
      "source": [
        "# Create labels\n",
        "y_benign = np.zeros(len(images_benign_train))\n",
        "y_malignant = np.ones(len(images_malignant_train))\n",
        "\n",
        "y_benign_test = np.zeros(len(images_benign_test))\n",
        "y_malignant_test = np.ones(len(images_malignant_test))\n",
        "\n",
        "# Merge labels\n",
        "y_train = np.concatenate((y_benign, y_malignant), axis = 0)\n",
        "y_test = np.concatenate((y_benign_test, y_malignant_test), axis = 0)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "zNq9z0yiClKP"
      },
      "outputs": [],
      "source": [
        "# Shuffle data\n",
        "s = np.arange(X_train.shape[0])\n",
        "np.random.shuffle(s)\n",
        "X_train = X_train[s]\n",
        "y_train = y_train[s]"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "YfgyzsRpClKQ"
      },
      "outputs": [],
      "source": [
        "s = np.arange(X_test.shape[0])\n",
        "np.random.shuffle(s)\n",
        "X_test = X_test[s]\n",
        "y_test = y_test[s]"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "print(X_train.shape)\n",
        "print(y_train.shape)\n",
        "print(X_test.shape)\n",
        "print(y_test.shape)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "nA_LEGDjindw",
        "outputId": "707261c8-1f9a-4406-df21-fa9086eb2886"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "(2637, 75, 75, 3)\n",
            "(2637, 2)\n",
            "(660, 75, 75, 3)\n",
            "(660, 2)\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "ZDVvz8F6ClKR",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 448
        },
        "outputId": "57171b02-f856-498f-80c0-709a0cbfa3ff"
      },
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 864x576 with 15 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ],
      "source": [
        "# Display first 15 images of moles, and how they are classified\n",
        "w=40\n",
        "h=30\n",
        "fig=plt.figure(figsize=(12, 8))\n",
        "columns = 5\n",
        "rows = 3\n",
        "\n",
        "for i in range(1, columns*rows +1):\n",
        "    ax = fig.add_subplot(rows, columns, i)\n",
        "    if y_train[i] == 0:\n",
        "        ax.title.set_text('Benign')\n",
        "    else:\n",
        "        ax.title.set_text('Malignant')\n",
        "    plt.imshow(X_train[i], interpolation='nearest')\n",
        "plt.show()"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "x0FRuoepClKR"
      },
      "source": [
        "# Step 3: Categorical Labels\n",
        "Turn labels into one hot encoding"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "ZXJk8DkpClKR"
      },
      "outputs": [],
      "source": [
        "y_train = to_categorical(y_train, num_classes= 2)\n",
        "y_test = to_categorical(y_test, num_classes= 2)"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "q2cHPLcpClKS"
      },
      "source": [
        "# Step 4 : Normalization"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "GslAKe10ClKS"
      },
      "outputs": [],
      "source": [
        "# With data augmentation to prevent overfitting \n",
        "X_train = X_train/255.\n",
        "X_test = X_test/255."
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "vUy8vnGUClKS"
      },
      "source": [
        "# Step 5: Model Building "
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "hAKPzdiGClKT"
      },
      "outputs": [],
      "source": [
        "# See learning curve and validation curve 5 layers\n",
        "\n",
        "\n",
        "\n",
        "def build(input_shape= (img_size,img_size,3), lr = 1e-3, num_classes= 2,\n",
        "          init= 'normal', activ= 'relu', optim= 'adam'):\n",
        "    model = Sequential()\n",
        "    model.add(Conv2D(128, kernel_size=(3, 3),padding = 'Same',input_shape=input_shape,\n",
        "                     activation= activ, kernel_initializer='glorot_uniform'))\n",
        "    model.add(Conv2D(128, kernel_size=(3, 3),activation= activ, kernel_initializer='glorot_uniform'))\n",
        "    model.add(MaxPool2D(pool_size = (2, 2)))\n",
        "    model.add(Conv2D(128, kernel_size=(3, 3),padding = 'Same',input_shape=input_shape,\n",
        "                     activation= activ, kernel_initializer='glorot_uniform'))\n",
        "    model.add(Conv2D(128, kernel_size=(3, 3),activation= activ, kernel_initializer='glorot_uniform'))\n",
        "    model.add(MaxPool2D(pool_size = (2, 2)))\n",
        "    model.add(Conv2D(128, kernel_size=(3, 3),padding = 'Same',input_shape=input_shape,\n",
        "                     activation= activ, kernel_initializer='glorot_uniform'))\n",
        "    model.add(Conv2D(128, kernel_size=(3, 3),activation= activ, kernel_initializer='glorot_uniform'))\n",
        "    model.add(MaxPool2D(pool_size = (2, 2)))\n",
        "\n",
        "    model.add(Conv2D(64, kernel_size=(3, 3),padding = 'Same', activation= activ, kernel_initializer='glorot_uniform'))\n",
        "    model.add(Conv2D(64, kernel_size=(3, 3),activation= activ, kernel_initializer='glorot_uniform'))\n",
        "    model.add(MaxPool2D(pool_size = (2, 2)))\n",
        "    \n",
        "    model.add(Dropout(0.5))\n",
        "    model.add(Flatten())\n",
        "    model.add(Dense(512, activation='relu', kernel_initializer=init))\n",
        "    model.add(Dropout(0.5))\n",
        "    model.add(Dense(256, activation='relu', kernel_initializer=init))\n",
        "    model.add(Dropout(0.5))\n",
        "    model.add(Dense(32, activation='relu', kernel_initializer=init))\n",
        "    model.add(Dense(num_classes, activation='softmax'))\n",
        "    model.summary()\n",
        "    if optim == 'rmsprop':\n",
        "        optimizer = RMSprop(lr=lr)\n",
        "\n",
        "    else:\n",
        "        optimizer = Adam(lr=lr)\n",
        "\n",
        "    model.compile(optimizer = optimizer ,loss = \"binary_crossentropy\", metrics=[\"accuracy\"])\n",
        "    return model\n",
        "\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "EkL2Kt6TClKT"
      },
      "outputs": [],
      "source": [
        "# Set a learning rate annealer\n",
        "learning_rate_reduction = ReduceLROnPlateau(monitor='val_accuracy', \n",
        "                                            patience=5, \n",
        "                                            verbose=1, \n",
        "                                            factor=0.5, \n",
        "                                            min_lr=1e-7)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "Qw5uIw--ClKT",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "fbdaf3d0-8242-459c-86b3-a6f252970543"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Model: \"sequential_1\"\n",
            "_________________________________________________________________\n",
            " Layer (type)                Output Shape              Param #   \n",
            "=================================================================\n",
            " conv2d_10 (Conv2D)          (None, 75, 75, 128)       3584      \n",
            "                                                                 \n",
            " conv2d_11 (Conv2D)          (None, 73, 73, 128)       147584    \n",
            "                                                                 \n",
            " max_pooling2d_4 (MaxPooling  (None, 36, 36, 128)      0         \n",
            " 2D)                                                             \n",
            "                                                                 \n",
            " conv2d_12 (Conv2D)          (None, 36, 36, 128)       147584    \n",
            "                                                                 \n",
            " conv2d_13 (Conv2D)          (None, 34, 34, 128)       147584    \n",
            "                                                                 \n",
            " max_pooling2d_5 (MaxPooling  (None, 17, 17, 128)      0         \n",
            " 2D)                                                             \n",
            "                                                                 \n",
            " conv2d_14 (Conv2D)          (None, 17, 17, 128)       147584    \n",
            "                                                                 \n",
            " conv2d_15 (Conv2D)          (None, 15, 15, 128)       147584    \n",
            "                                                                 \n",
            " max_pooling2d_6 (MaxPooling  (None, 7, 7, 128)        0         \n",
            " 2D)                                                             \n",
            "                                                                 \n",
            " conv2d_16 (Conv2D)          (None, 7, 7, 64)          73792     \n",
            "                                                                 \n",
            " conv2d_17 (Conv2D)          (None, 5, 5, 64)          36928     \n",
            "                                                                 \n",
            " max_pooling2d_7 (MaxPooling  (None, 2, 2, 64)         0         \n",
            " 2D)                                                             \n",
            "                                                                 \n",
            " dropout (Dropout)           (None, 2, 2, 64)          0         \n",
            "                                                                 \n",
            " flatten (Flatten)           (None, 256)               0         \n",
            "                                                                 \n",
            " dense (Dense)               (None, 512)               131584    \n",
            "                                                                 \n",
            " dropout_1 (Dropout)         (None, 512)               0         \n",
            "                                                                 \n",
            " dense_1 (Dense)             (None, 256)               131328    \n",
            "                                                                 \n",
            " dropout_2 (Dropout)         (None, 256)               0         \n",
            "                                                                 \n",
            " dense_2 (Dense)             (None, 32)                8224      \n",
            "                                                                 \n",
            " dense_3 (Dense)             (None, 2)                 66        \n",
            "                                                                 \n",
            "=================================================================\n",
            "Total params: 1,123,426\n",
            "Trainable params: 1,123,426\n",
            "Non-trainable params: 0\n",
            "_________________________________________________________________\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.7/dist-packages/keras/optimizer_v2/rmsprop.py:130: UserWarning: The `lr` argument is deprecated, use `learning_rate` instead.\n",
            "  super(RMSprop, self).__init__(name, **kwargs)\n"
          ]
        }
      ],
      "source": [
        "input_shape = (img_size,img_size,3)\n",
        "lr = 1e-4\n",
        "init = 'normal'\n",
        "activ = 'relu'\n",
        "optim = 'rmsprop'\n",
        "epochs = 50\n",
        "batch_size = 16\n",
        "\n",
        "model = build(lr=lr, init= init, activ= activ, optim=optim, input_shape= input_shape)\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "H1vybUW6ClKT",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "outputId": "e0d0d7ca-ab4b-4a1c-bb51-ff164d282b9d"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Epoch 1/50\n",
            "116/116 [==============================] - 29s 122ms/step - loss: 0.6658 - accuracy: 0.5442 - val_loss: 0.5959 - val_accuracy: 0.5391 - lr: 1.0000e-04\n",
            "Epoch 2/50\n",
            "116/116 [==============================] - 12s 103ms/step - loss: 0.5772 - accuracy: 0.7014 - val_loss: 0.5390 - val_accuracy: 0.5758 - lr: 1.0000e-04\n",
            "Epoch 3/50\n",
            "116/116 [==============================] - 12s 105ms/step - loss: 0.5482 - accuracy: 0.7404 - val_loss: 0.5542 - val_accuracy: 0.7588 - lr: 1.0000e-04\n",
            "Epoch 4/50\n",
            "116/116 [==============================] - 11s 96ms/step - loss: 0.5273 - accuracy: 0.7566 - val_loss: 0.4942 - val_accuracy: 0.7778 - lr: 1.0000e-04\n",
            "Epoch 5/50\n",
            "116/116 [==============================] - 11s 98ms/step - loss: 0.5145 - accuracy: 0.7599 - val_loss: 0.5029 - val_accuracy: 0.7677 - lr: 1.0000e-04\n",
            "Epoch 6/50\n",
            "116/116 [==============================] - 11s 99ms/step - loss: 0.4898 - accuracy: 0.7669 - val_loss: 0.4450 - val_accuracy: 0.7942 - lr: 1.0000e-04\n",
            "Epoch 7/50\n",
            "116/116 [==============================] - 11s 97ms/step - loss: 0.4622 - accuracy: 0.7686 - val_loss: 0.6871 - val_accuracy: 0.7576 - lr: 1.0000e-04\n",
            "Epoch 8/50\n",
            "116/116 [==============================] - 11s 98ms/step - loss: 0.4537 - accuracy: 0.7756 - val_loss: 0.4120 - val_accuracy: 0.8018 - lr: 1.0000e-04\n",
            "Epoch 9/50\n",
            "116/116 [==============================] - 11s 97ms/step - loss: 0.4332 - accuracy: 0.7837 - val_loss: 0.3966 - val_accuracy: 0.8030 - lr: 1.0000e-04\n",
            "Epoch 10/50\n",
            "116/116 [==============================] - 11s 98ms/step - loss: 0.4352 - accuracy: 0.7864 - val_loss: 0.3761 - val_accuracy: 0.8295 - lr: 1.0000e-04\n",
            "Epoch 11/50\n",
            "116/116 [==============================] - 12s 100ms/step - loss: 0.4192 - accuracy: 0.8033 - val_loss: 0.4362 - val_accuracy: 0.8258 - lr: 1.0000e-04\n",
            "Epoch 12/50\n",
            "116/116 [==============================] - 12s 102ms/step - loss: 0.4213 - accuracy: 0.8049 - val_loss: 0.4069 - val_accuracy: 0.7828 - lr: 1.0000e-04\n",
            "Epoch 13/50\n",
            "116/116 [==============================] - 12s 100ms/step - loss: 0.4088 - accuracy: 0.8098 - val_loss: 0.3602 - val_accuracy: 0.8232 - lr: 1.0000e-04\n",
            "Epoch 14/50\n",
            "116/116 [==============================] - 11s 99ms/step - loss: 0.4072 - accuracy: 0.8195 - val_loss: 0.3705 - val_accuracy: 0.8308 - lr: 1.0000e-04\n",
            "Epoch 15/50\n",
            "116/116 [==============================] - 11s 97ms/step - loss: 0.3929 - accuracy: 0.8217 - val_loss: 0.3769 - val_accuracy: 0.8270 - lr: 1.0000e-04\n",
            "Epoch 16/50\n",
            "116/116 [==============================] - 12s 107ms/step - loss: 0.3909 - accuracy: 0.8206 - val_loss: 0.3674 - val_accuracy: 0.8220 - lr: 1.0000e-04\n",
            "Epoch 17/50\n",
            "116/116 [==============================] - 11s 96ms/step - loss: 0.3805 - accuracy: 0.8260 - val_loss: 0.4331 - val_accuracy: 0.8081 - lr: 1.0000e-04\n",
            "Epoch 18/50\n",
            "116/116 [==============================] - 12s 101ms/step - loss: 0.3829 - accuracy: 0.8168 - val_loss: 0.3680 - val_accuracy: 0.8270 - lr: 1.0000e-04\n",
            "Epoch 19/50\n",
            "116/116 [==============================] - 11s 97ms/step - loss: 0.3798 - accuracy: 0.8228 - val_loss: 0.3657 - val_accuracy: 0.8321 - lr: 1.0000e-04\n",
            "Epoch 20/50\n",
            "116/116 [==============================] - 11s 97ms/step - loss: 0.3750 - accuracy: 0.8271 - val_loss: 0.3816 - val_accuracy: 0.8144 - lr: 1.0000e-04\n",
            "Epoch 21/50\n",
            "116/116 [==============================] - 11s 97ms/step - loss: 0.3652 - accuracy: 0.8304 - val_loss: 0.3484 - val_accuracy: 0.8270 - lr: 1.0000e-04\n",
            "Epoch 22/50\n",
            "116/116 [==============================] - 11s 97ms/step - loss: 0.3599 - accuracy: 0.8401 - val_loss: 0.3705 - val_accuracy: 0.8220 - lr: 1.0000e-04\n",
            "Epoch 23/50\n",
            "116/116 [==============================] - 12s 104ms/step - loss: 0.3506 - accuracy: 0.8390 - val_loss: 0.3575 - val_accuracy: 0.8434 - lr: 1.0000e-04\n",
            "Epoch 24/50\n",
            "116/116 [==============================] - 12s 103ms/step - loss: 0.3380 - accuracy: 0.8526 - val_loss: 0.4080 - val_accuracy: 0.8447 - lr: 1.0000e-04\n",
            "Epoch 25/50\n",
            "116/116 [==============================] - 12s 101ms/step - loss: 0.3336 - accuracy: 0.8553 - val_loss: 0.3532 - val_accuracy: 0.8548 - lr: 1.0000e-04\n",
            "Epoch 26/50\n",
            "116/116 [==============================] - 12s 101ms/step - loss: 0.3313 - accuracy: 0.8607 - val_loss: 0.3787 - val_accuracy: 0.8131 - lr: 1.0000e-04\n",
            "Epoch 27/50\n",
            "116/116 [==============================] - 12s 102ms/step - loss: 0.3292 - accuracy: 0.8580 - val_loss: 0.3532 - val_accuracy: 0.8308 - lr: 1.0000e-04\n",
            "Epoch 28/50\n",
            "116/116 [==============================] - 11s 97ms/step - loss: 0.3088 - accuracy: 0.8591 - val_loss: 0.5454 - val_accuracy: 0.8119 - lr: 1.0000e-04\n",
            "Epoch 29/50\n",
            "116/116 [==============================] - 11s 96ms/step - loss: 0.3171 - accuracy: 0.8656 - val_loss: 0.5667 - val_accuracy: 0.7235 - lr: 1.0000e-04\n",
            "Epoch 30/50\n",
            "116/116 [==============================] - ETA: 0s - loss: 0.3068 - accuracy: 0.8569\n",
            "Epoch 30: ReduceLROnPlateau reducing learning rate to 4.999999873689376e-05.\n",
            "116/116 [==============================] - 11s 97ms/step - loss: 0.3068 - accuracy: 0.8569 - val_loss: 0.4246 - val_accuracy: 0.8169 - lr: 1.0000e-04\n",
            "Epoch 31/50\n",
            "116/116 [==============================] - 13s 110ms/step - loss: 0.2644 - accuracy: 0.8840 - val_loss: 0.3510 - val_accuracy: 0.8598 - lr: 5.0000e-05\n",
            "Epoch 32/50\n",
            "116/116 [==============================] - 11s 97ms/step - loss: 0.2510 - accuracy: 0.8938 - val_loss: 0.4034 - val_accuracy: 0.8434 - lr: 5.0000e-05\n",
            "Epoch 33/50\n",
            "116/116 [==============================] - 11s 98ms/step - loss: 0.2419 - accuracy: 0.9008 - val_loss: 0.3453 - val_accuracy: 0.8611 - lr: 5.0000e-05\n",
            "Epoch 34/50\n",
            "116/116 [==============================] - 12s 103ms/step - loss: 0.2409 - accuracy: 0.9003 - val_loss: 0.4281 - val_accuracy: 0.8270 - lr: 5.0000e-05\n",
            "Epoch 35/50\n",
            "116/116 [==============================] - 11s 99ms/step - loss: 0.2259 - accuracy: 0.9160 - val_loss: 0.3721 - val_accuracy: 0.8485 - lr: 5.0000e-05\n",
            "Epoch 36/50\n",
            "116/116 [==============================] - 11s 96ms/step - loss: 0.2233 - accuracy: 0.9068 - val_loss: 0.3794 - val_accuracy: 0.8598 - lr: 5.0000e-05\n",
            "Epoch 37/50\n",
            "116/116 [==============================] - 11s 97ms/step - loss: 0.2153 - accuracy: 0.9100 - val_loss: 0.3488 - val_accuracy: 0.8561 - lr: 5.0000e-05\n",
            "Epoch 38/50\n",
            "116/116 [==============================] - ETA: 0s - loss: 0.2083 - accuracy: 0.9214\n",
            "Epoch 38: ReduceLROnPlateau reducing learning rate to 2.499999936844688e-05.\n",
            "116/116 [==============================] - 11s 97ms/step - loss: 0.2083 - accuracy: 0.9214 - val_loss: 0.3751 - val_accuracy: 0.8535 - lr: 5.0000e-05\n",
            "Epoch 39/50\n",
            "116/116 [==============================] - 11s 97ms/step - loss: 0.1846 - accuracy: 0.9257 - val_loss: 0.3679 - val_accuracy: 0.8561 - lr: 2.5000e-05\n",
            "Epoch 40/50\n",
            "116/116 [==============================] - 11s 97ms/step - loss: 0.1778 - accuracy: 0.9339 - val_loss: 0.3976 - val_accuracy: 0.8598 - lr: 2.5000e-05\n",
            "Epoch 41/50\n",
            "116/116 [==============================] - 11s 97ms/step - loss: 0.1751 - accuracy: 0.9344 - val_loss: 0.3736 - val_accuracy: 0.8535 - lr: 2.5000e-05\n",
            "Epoch 42/50\n",
            "116/116 [==============================] - 11s 97ms/step - loss: 0.1676 - accuracy: 0.9360 - val_loss: 0.3791 - val_accuracy: 0.8523 - lr: 2.5000e-05\n",
            "Epoch 43/50\n",
            "116/116 [==============================] - 11s 97ms/step - loss: 0.1598 - accuracy: 0.9393 - val_loss: 0.4323 - val_accuracy: 0.8649 - lr: 2.5000e-05\n",
            "Epoch 44/50\n",
            "116/116 [==============================] - 11s 96ms/step - loss: 0.1684 - accuracy: 0.9350 - val_loss: 0.4360 - val_accuracy: 0.8535 - lr: 2.5000e-05\n",
            "Epoch 45/50\n",
            "116/116 [==============================] - 11s 98ms/step - loss: 0.1510 - accuracy: 0.9436 - val_loss: 0.4135 - val_accuracy: 0.8636 - lr: 2.5000e-05\n",
            "Epoch 46/50\n",
            "116/116 [==============================] - 11s 97ms/step - loss: 0.1483 - accuracy: 0.9425 - val_loss: 0.4416 - val_accuracy: 0.8687 - lr: 2.5000e-05\n",
            "Epoch 47/50\n",
            "116/116 [==============================] - 11s 99ms/step - loss: 0.1543 - accuracy: 0.9463 - val_loss: 0.4314 - val_accuracy: 0.8674 - lr: 2.5000e-05\n",
            "Epoch 48/50\n",
            "116/116 [==============================] - 11s 97ms/step - loss: 0.1444 - accuracy: 0.9496 - val_loss: 0.4177 - val_accuracy: 0.8674 - lr: 2.5000e-05\n",
            "Epoch 49/50\n",
            "116/116 [==============================] - 11s 97ms/step - loss: 0.1406 - accuracy: 0.9474 - val_loss: 0.4414 - val_accuracy: 0.8662 - lr: 2.5000e-05\n",
            "Epoch 50/50\n",
            "116/116 [==============================] - 11s 97ms/step - loss: 0.1419 - accuracy: 0.9469 - val_loss: 0.4500 - val_accuracy: 0.8573 - lr: 2.5000e-05\n",
            "dict_keys(['loss', 'accuracy', 'val_loss', 'val_accuracy', 'lr'])\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "iVBORw0KGgoAAAANSUhEUgAAAYIAAAEWCAYAAABrDZDcAAAABHNCSVQICAgIfAhkiAAAAAlwSFlzAAALEgAACxIB0t1+/AAAADh0RVh0U29mdHdhcmUAbWF0cGxvdGxpYiB2ZXJzaW9uMy4yLjIsIGh0dHA6Ly9tYXRwbG90bGliLm9yZy+WH4yJAAAgAElEQVR4nOzdd3hUVfrA8e876QkhQAg1QOi9CVJFQQVpghXBvmsvP9vqqmvZXde1rK7dVRF7AREbKkoREFApoYhA6DWhJJQA6e38/jgzZBLSmcmEzPt5Hp7J3Htn5lwyue897T1ijEEppZT/cvi6AEoppXxLA4FSSvk5DQRKKeXnNBAopZSf00CglFJ+TgOBUkr5OQ0ESlWQiLwvIk9W8NidInL+qb6PUtVBA4FSSvk5DQRKKeXnNBCoWsXZJPOAiKwVkXQReUdEGovIDyJyXETmiUh9t+PHich6EUkVkYUi0tltX28RWeV83WdAaLHPGisia5yv/VVEelSxzDeJyFYROSwiM0WkmXO7iMiLIpIsIsdE5A8R6ebcN1pENjjLliQi91fpP0wpNBCo2ulSYDjQAbgQ+AH4GxCD/c7fBSAiHYCpwD3OfbOAb0UkWESCga+Bj4AGwOfO98X52t7Au8AtQDTwFjBTREIqU1ARORd4GpgANAV2AdOcu0cAZzvPI8p5zCHnvneAW4wxkUA3YH5lPlcpdxoIVG30qjHmgDEmCVgMLDPGrDbGZAFfAb2dx10BfG+MmWuMyQWeB8KAQcAAIAh4yRiTa4yZAaxw+4ybgbeMMcuMMfnGmA+AbOfrKuMq4F1jzCpjTDbwMDBQROKAXCAS6ASIMSbBGLPP+bpcoIuI1DXGHDHGrKrk5yp1ggYCVRsdcPs5s4TndZw/N8PegQNgjCkA9gDNnfuSTNGsjLvcfm4F/MXZLJQqIqlAC+frKqN4GdKwd/3NjTHzgdeA14FkEZksInWdh14KjAZ2icjPIjKwkp+r1AkaCJQ/24u9oAO2TR57MU8C9gHNndtcWrr9vAf4tzGmntu/cGPM1FMsQwS2qSkJwBjzijGmD9AF20T0gHP7CmPMeKARtglreiU/V6kTNBAofzYdGCMi54lIEPAXbPPOr8BvQB5wl4gEicglQD+3174N3Coi/Z2duhEiMkZEIitZhqnAn0Skl7N/4SlsU9ZOETnT+f5BQDqQBRQ4+zCuEpEoZ5PWMaDgFP4flJ/TQKD8ljFmE3A18CpwENuxfKExJscYkwNcAlwPHMb2J3zp9tp44CZs080RYKvz2MqWYR7wGPAFthbSFpjo3F0XG3COYJuPDgHPOfddA+wUkWPArdi+BqWqRHRhGqWU8m9aI1BKKT+ngUAppfycBgKllPJzGgiUUsrPBfq6AJXVsGFDExcX5+tiKKXUaWXlypUHjTExJe077QJBXFwc8fHxvi6GUkqdVkRkV2n7vNo0JCIjRWSTM7PiQyXsf9GZvXGNiGx2TtNXSilVjbxWIxCRAGyOlOFAIrBCRGYaYza4jjHG3Ot2/P9RmAxMKaVUNfFmjaAfsNUYs905S3MaML6M4ydhp9srpZSqRt7sI2iOTczlkgj0L+lAEWkFtKaKOdVzc3NJTEwkKyurKi8/bYSGhhIbG0tQUJCvi6KUqkVqSmfxRGCGMSa/pJ0icjM2/zstW7Y8aX9iYiKRkZHExcVRNFlk7WGM4dChQyQmJtK6dWtfF0cpVYt4s2koCZvS1yXWua0kEymjWcgYM9kY09cY0zcm5uTRT1lZWURHR9faIAAgIkRHR9f6Wo9Sqvp5MxCsANqLSGvnsn8TgZnFDxKRTkB9bNrfKqvNQcDFH85RKVX9vBYIjDF5wJ3AbCABmG6MWS8iT4jIOLdDJwLTjD+mQTUGMg5BgaaSV0r5jlfnERhjZhljOhhj2hpj/u3c9rgxZqbbMf8wxpw0x+B0kpqayv/+979Kv270qJGk7loP2ce8UCqllKoYzTXkAaUFgry8vDJfN+vrz6kXFQkFZR+nlFLepIHAAx566CG2bdtGr169OPPMMxkyZAjjxo2jS5cuAFx00UX06dOHrl27Mnny5BOvi+vYjYOHj7Bz5w46d+7MTTfdRNeuXRkxYgSZmZm+Oh2llJ+pKcNHPeaf365nw17PNrV0aVaXv1/YtdT9zzzzDOvWrWPNmjUsXLiQMWPGsG7duhPDPN99910aNGhAZmYmZ555JpdeeinR0dGFb1BQwJYtW5g6dSpvv/02EyZM4IsvvuDqq6/26HkopVRJal0gqAn69etXZKz/K6+8wldffQXAnj172LJlizMQOPvHTT6tW7emV69eAPTp04edO3dWc6mVUv6q1gWCsu7cq0tERMSJnxcuXMi8efP47bffCA8PZ+jQoYVzAVzjpEwBISEhJ14TEBCgTUNKqWqjfQQeEBkZyfHjx0vcd/ToUerXr094eDgbN25k6dKlbnudkaCgxAnVSilVLWpdjaA0h9NzSDmeTYfGdTw+MSs6OprBgwfTrVs3wsLCaNy48Yl9I0eO5M0336Rz58507NiRAQMGnPwGGgiUUj7kN4FAgOy8fLLzCggNCvD4+3/66aclbg8JCeGHH34ocd/OlT9BbgYNA0NZt27die3333+/x8unlFKl8ZumobBge/HPzK1Bd9+umoDWCJRSPuQ3gSAk0IFDhMycGnTRdU0kKznpqlJKVQu/CQQiQmhQQM2pERhTGABMgf2nlFI+4DeBACAsyEFWTj41Ir+dKwgEBNtHTTynlPIRvwoEocEB5BtDTn4NuOgWFAsERvMNKaV8w68CQZhztFBWTegncPUPBDonkmmHsVLKR/wqEIQGBSCIx/sJqpSG2nnhf+nN98nIzNRAoJTyGb8KBA4RQoIcZOZ6tmmoaoHA1gheemMKGZlZOnJIKeUzfjOhzCUsKIDjWXkYYzw2w9g9DfXw4cNp1KgR06dPJzs7m4svvph//vOfpKenM2HCBBITE8nPz+exB+7mwO4t7N23n2GX30LDmMYsWLTEI+VRSqnKqH2B4IeHYP8fpe5ukl9A/bwCTHBAxQNBk+4w6plSd7unoZ4zZw4zZsxg+fLlGGMYN24cixYtIiUlhWbNmvH9998DcDRxM1GOvrzwznQWfP4WDeN8nyxPKeWf/KppCMDhsBf/Ai8NIZ0zZw5z5syhd+/enHHGGWzcuJEtW7bQvXt35s6dy4MPPsjixYuJigwHcfvv1z4CpZSP1L4aQRl37gAUGLbvPUrjuqE0rhvq8Y83xvDwww9zyy23nLRv1apVzJo1i0cffZTzBvXh8XtucO4J0ECglPIZv6sRBDiEkMAAj6aacE9DfcEFF/Duu++SlpYGQFJSEsnJyezdu5fw8HCuvvpqHnjgAVb9/gdIgH1thnYWK6V8p/bVCCogLCiAjBzPTeByT0M9atQorrzySgYOHAhAnTp1+Pjjj9m6dSsPPPAADoeDoKAg3njqIXAEcPPNNzPyyltp1qQxC5YsLeeTlFLK86RGpFuohL59+5r4+Pgi2xISEujcuXOF3yPleBb7jmbRpWldAgN8VCk6sAGCwqBBazi4xeYeiulQ7ssqe65KKQUgIiuNMX1L2ud3TUNQOMPYpwnoTD44nOsiOAK0aUgp5TN+GQhCfR0IjLETyhzOljmHdhYrpXyn1gSCyjRxBQY4CA5w+C7nkCvltKtGIIEVqhGcbs14SqnTQ60IBKGhoRw6dKhSF8qw4ACPp5qoMFfCOfcaQTlrEhhjOHToEKGhnh/yqpTyb7Vi1FBsbCyJiYmkpKRU+DXHsnI5lplH3uFQHB5ezL5c+TlwPBkOGghKhuzjkHkEjmworCWUIDQ0lNjY2GosqFLKH3g1EIjISOBlIACYYow5abaXiEwA/gEY4HdjzJWV/ZygoCBat25dqdfM33iAmz6L5/NbB3JmXIPKfuSp2TYfZkyAP/0Arc6A36fB7Fvg/1ZBdNvqLYtSyu95rWlIRAKA14FRQBdgkoh0KXZMe+BhYLAxpitwj7fKU1y3ZlEArEs6Wl0fWSjziH0Mq28fQ21ZyPJBWZRSfs+bfQT9gK3GmO3GmBxgGjC+2DE3Aa8bY44AGGOSvVieIhrVDSUmMoR1Sceq6yMLaSBQStUg3gwEzYE9bs8TndvcdQA6iMgvIrLU2ZR0EhG5WUTiRSS+Mv0ARexZAfP+UWRT12Z1Wb9XawRKKf/m61FDgUB7YCgwCXhbROoVP8gYM9kY09cY0zcmJqZqn7RvDSx50c7iderWLIotyWlkVfd8gsxUCIooXKZSA4FSyoe8GQiSgBZuz2Od29wlAjONMbnGmB3AZmxg8LwOzsrGph9ObOrarC75BYbNB4575SNLlXmksDYAGgiUUj7lzUCwAmgvIq1FJBiYCMwsdszX2NoAItIQ21S03SulqdcCGneHzT+e2NStuavDuJr7CTIOFw0EwXXs2gQaCJRSPuC1QGCMyQPuBGYDCcB0Y8x6EXlCRMY5D5sNHBKRDcAC4AFjzCFvlYmOI2H3b/ZCDMTWD6NuaCDrqrufIPMIhLm1gInYWoEGAqWUD3i1j8AYM8sY08EY09YY82/ntseNMTOdPxtjzH3GmC7GmO7GmGneLA8dR9nZu1vmAiAidG0Wxfq91VwjKN40BBoIlFI+4+vO4urVtDfUaQybC/sJujWvy8Z9x8jLr8Z0E5lHILzYJDYNBEopH/GvQOBwQIcLYMs8yMsBoGuzKLLzCti4v5o6jI3RGoFSqkbxr0AA0GEU5ByHXb8AMKhdNOHBAbzy05ZyXughOelQkKuBQClVY/hfIGgzFAJDT4weahQZyh3D2jFnwwEWba7iZLXKyLQd1ScFghANBEop3/C/QBAcboPBph9sMw1w45DWxEWH849v15OT5+W+guKzil20RqCU8hH/CwRgJ5el7oLkBABCAgP4+4Vd2Z6Szvu/7vDuZ5cVCHLTIT/Xu5+vTi+LnoN3S8y8opTH+G8ggCKjh4Z1asR5nRrx8rwtJB/L8t5nnwgEJYwaAsjyQRI8VTOt/wrmP2nnvmhtUXmRfwaCuk2hWW/Y9GORzY+N7UJuvuHpHzZ677PLqhEAZOsfvAL2r4Ovb4eQuvZ56p6yj1fqFPhnIAA7eihxBaQVdhDHNYzgprNb89XqJOJ3HvbO554IBMVy62m+IeWScRimXWm/Exe/abcd1UCgvMd/A0HHkYCBLbOLbL5jWDuaRoXy+NfryN802/NNNZlHIDAMgsKKbtdAoADy8+Dz6+H4PrjiY2je127XGoHyIv8NBE16QN3mRbKRAoQHB/LoqPZcc/AFAqZOgEX/8eznZpQwmQw0EChr7uOw42cY+xLE9oWIGAgIgaO7fV0yVYv5byAQsZ3G2xZArlvncHYao9f/hUmBC0ilDvmb5nj2c0uaVQwaCJRdu3rp69D/Vuh9ld3mcEBUczia6NuyqVrNfwMB2CR0uemwc7F9npYM749Bts5j/9nP8FrexQQc2kTB4V2e+8yS8gyBBgJ/l7QKZt4FcUNgxJNF90W10KYh5VX+HQjihtiVwjb9AAe3wpTzIWUTTPyUJufeRuchlwDw03efeO4zi6egdtE1CfzbT0/YG4TL34eAoKL76rXQzmLlVf4dCIJCoe0w2PANvDMcctLg+u9tTQG4ZPhQDgc1hS3z+Pb3vZ75zNKahhwOO1RQA4F/OpoILfpDRMOT90W1hLQDRZswlfIg/w4EYPsJMg7appkb5kJsnxO7xOEgqsdohgSu5+HP4/kj8RQv0qVlHnXRNBP+Kz3ZdgyXpJ5zxddjxVd6VcozNBB0vxxG/NsGgei2J+0O6DCCUJPFeWHbuOnD+FObdZybAfnZGghUUXk59vdep1HJ+6OcgSBVRw4p79BAEBQKg+6EOqXcjbUeAgHBPNYpiaOZudz80UqycvOr9lmlzSp20UDgn9KdkxrLqxFoP4HyEg0E5QmOgFaDabhvES9e0ZM1e1L525d/YJyZSyultDxDLhoI/FN6sn0srUZQt7kdSKAjh5SXaCCoiPYj4OAmRjbP4d7zO/Dl6iSen7OJgoJKBoNyawT1NBD4I1eak4hSAkFAEEQ21RqB8hoNBBXRfrh93DqXu85rx2V9Ynl9wTb+9P4KDqVlV/x9tGlIleREjaCUpiHQuQTKqzQQVER0O6jXCrbMQ0R47rIePHlRN37bfojRryxm2fZDFXufigSCnDSbb0b5jzRnICitRgDOuQTaWay8QwNBRYjYWsGOnyE3CxHh6gGt+Or2QYQHBzLp7aW8Nn9L+U1FFQkEANm6JoFfSU+xEwqDw0s/JqoFHNsLBVUcqKBUGTQQVFT7EXb45+5fT2zq2iyKb//vLMb2aMbzczZz3XvLOVhWU1HGYZtArHjmUZcTaSZSPVhwVeOlJZc8kcxdvRZQkGezkirlYRoIKipuiL2Ib5lXZHOdkEBentiLpy/pzvIdh7nkf79yPKuU5SZdeYZESt6v+Yb8U3pK2c1CYGcXg/YTKK/QQFBRweEQNxi2zj1pl4gwqV9LPrqhP4lHMnji2w0lv0dZs4pBA4G/Sk8pfeioi84lUF6kgaAy2o+Ag5vhyM4Sd/dr3YA7hrXj85WJ/Lhu/8kHZKZqIFAnSysjvYRLVKx91NnFygu8GghEZKSIbBKRrSLyUAn7rxeRFBFZ4/x3ozfLc8raOYeRbjm5VuBy13nt6d48ir999QfJx4ulo9AagSouPw8yDpVfIwiOgPBoXZdAeYXXAoGIBACvA6OALsAkEelSwqGfGWN6Of9N8VZ5PCK6LdSPg63zTt6Xsglm3EDQzNt58YqepGfn8dAXxWYgl5aC2kUDgf/JOASY8msEYEcOadOQ8gJv1gj6AVuNMduNMTnANGC8Fz/P+0RsrWD7z4UpgQ9uhS9uhNf7w7oZ8PtU2oUc5eFRnZi/MZlPl7tV5TMPl10j0DUJ/E956SXcRcVqZ7HyCm8GguaA+7c20bmtuEtFZK2IzBCRFiW9kYjcLCLxIhKfkpLijbJWXPsRkJcJaz6Br26D18+Ejd/D4LvgT871jzfP5tqBcQxp35Anv0tgx8F0yM2EvKzS8wyBrkngjyoymcylXktbI6hKniulyuDrzuJvgThjTA9gLvBBSQcZYyYbY/oaY/rGxFSgCu1NcWfZYaTf3wfrv4QBt8Pdv8PwJ6DlQNt0tHk2Dofw3GU9CQ50cO9na8hLc84+LqtGAJpmwt+kH7SPFW0ays2w81GU8iBvBoIkwP0OP9a57QRjzCFjjGsG1hSgDzVdcDgMexgG3GEDwAX/LqzWi9iFbnb8DDkZNIkK5cmLurFmTyqfLf7DHqOBQLmrSJ4hlxNDSHXkkPIsbwaCFUB7EWktIsHARGCm+wEi0tTt6TggwYvl8Zyz7oWRT0Fkk5P3dbjANgHtWATAhT2bMb5XM75btt7u10Cg3KUl2xpmSN3yjz2xQI32EyjP8logMMbkAXcCs7EX+OnGmPUi8oSIjHMedpeIrBeR34G7gOu9VZ5q02qw7fTd/OOJTf8c15XmIbZzuSC0jFFDoIHA37gmk5U229xdPefsYh05pDws0JtvboyZBcwqtu1xt58fBh72ZhmqXWAItB0GW+bYTj0R6oUHM6l7JPwOX2/K5JJmZbxe1yTwLxWZTOYSVh+CIrRGoDzO153FtVOHkXah8QPrTmw6I8aO9Hjm5wMnTzRzpzUC/5KeXLGho2BrDfV0LoHyPA0E3uCagezWPCSZRzCOYFJzg/jXd2V0heiaBP4lLaXiNQJwLlCjncXKszQQeENkY2h2BmyeXbgt8wgSXp/bh7Xj29/3smhzKfMhdE0C/1FQULGEc+60RqC8QAOBt3QYCYnxhevROvMM3Ta0LW0aRvDo1+vIyi1hkRFdk8B/ZKWCya98jSDzCGSnea9cyu9oIPCWDhcApjBttTMQhAQG8OTF3dh9OINX5285+XWab8h/nJhVXIlAoCOHlBdoIPCWpj0hsmlhP4FbCupBbRtyyRnNmbxoO1sOHC/6Og0E/qMyeYZcdC6B8gINBN4iYvMSbVsAeTnOhHOFeYYeGd2ZiJBAHvlqXdG1jjUQ+I/K5Bly0dnFygs0EHhTh5G203f3byeloI6uE8LfRnVm+c7DXPrmryzclGxTVmsg8B/pzv6jytQI6jQBR5CuS6A8yqsTyvxem3Ns+oAN39hkYcXSS1zeN5Z8Y3ht/lauf28FvVrU474hTTgbNBD4g7RkcATaSYQV5XBAVHNtGlIepTUCbwqOgNZn2yylcFIgcK11vOD+oTx1cXdSjmdz3acbKEDYkbi36KI2qvZJd84qdlTyz1AXqFEepoHA2zpcYJuFoNSEc8GBDq7sbwPC05f0JJ1wfl67lb99tU6DQW1W2clkLvVaao1AeZQGAm9rP6Lw53IyjwYHOpjYryV16kXTp7GDqct3886SHV4uoPKZ9CoGgqhYOL7PDkJQ/mHnEnh/LOz8xStvr4HA2+q3gkbOpZrDy1idzI2ERtGtgWFUtyb8e1YCPyUc8GIBlc9UdlaxS1QLwNh8Vqp2cwWA98fAwS2FrQsepoGgOnS4wD6WtxaBS2g9JPsY/53Qk67N6nLX1NUk7NOUE7WKMZXLPOruxBBSbR6qtXb+4hYANsPIZ+HuNdB5rFc+TgNBdRhwB4z6T+FkoPI4M5CGBwcy5dozqRMayI0fxJNyPLv816rTQ/YxyM8+hRoB2k9QUxgDPz0By98+9WSRx/fDBxfC+6OdAeAZuxLigFshKMwz5S2BBoLqUCcG+t9SscVHoEgq6iZRoUy59kwOpWdz80fxJecnUqcfVw6qykwmc4mKtY9aI6gZ/pgBi/8Ls+6HyefArl+r9j4F+fDFjTZH2QVPOwPAbV4NAC4aCGqiYmsSdI+N4qUrerF6dyp/nbH2xEgiYwwH07L5I/Eos9fvZ+WuEhY1P7QNPr9eFzyvaSqzVnFxgSF2YpnWCDwr/SBs+hHmPwkz74KsCjTHZh2F2X+z2YYvf9+mknlvFHxxExzbV7nPX/IC7FwMo5+HgbdXSwBw0QllNZH7mgQB9lc0sltTHrigI8/N3sS2lDSOZ+Wx/2gWOfkFRV766JjO3DikTeGG1R/D+q8gvCGMeb46z6J0BQWw6D/QYwI0aFP+8bVRVdJLuKvXQtNMnKqsY7DmU0iKh8QVcGSn3S4BYArsRf7y98uuyc9/EjIOwlXToVlvO0pwyYvwy8uwaRac8yD0vxUCg8suy57lsOBp6HYZ9LrSU2dYYRoIaiL3NQncRhrdPrQt6dl5LNtxmNYNIxjZrQlNo0JpGhVG06hQJi/azpPfJ5CakctfRnRARAqzn8a/A32uhybdqv98itu3BhY+bf8QRz7l69L4hiu9RFU6i8H2E+xd7bny+KNZD8DaaTY5ZGxf6PtnaN4XmvWy7f3z/g7LJ9tm3ZLsXQ0rpsCZN9ogAHYS6bmPQs9J8OPDMPcx+GM6XPEx1I8r+X0yU2HGDbbJb+wLFW9C9qAKBQIRuRt4DzgOTAF6Aw8ZY+Z4sWz+y31NArdAICL8dWSnUl/2yqTeRIYG8tqCrRzNzOWfw6Jx7P8DBt8Nqz6CHx6E67/zyRetiB0/28ftC31aDJ9KTwEEwqOr9vp6LWDjd7Z2VdmZyRW1cwnEvweXTAZHgHc+w1fysu0de6+r4KL/nbx/0F2weynMfgSa97GBwl1BPnx3n61pn/voya+PbmtrCQnfwtd3wOShcNl7dj1zd8bAd/fC8b3w59mFf/vVrKLfoD8bY44BI4D6wDXAM14rlb+rYuK5AIfw9CXdueXsNny0dBfTpr5nd3S/HM57DHYtsc1EvrbdGQiS1xc2kfibtGQbBAKqWCmPagH5OZDmxTkmv0+FdTNss0lts32hrXF3uajk/Q4HXPwG1G0K0687uY9t5fuwdxVc8FTZF+/OF8LNC2yfzseXwC+v2Iu/y+qPbQqaYX87OdhUo4oGAtct5GjgI2PMerdtytNOIQOpiPDw6M48OLITdZMWciQgmsz6neGM66BJd8ycx9iXcogVOw8ze/1+0rOreW3kvGx7p9Wiv32+Y1H1fn5NUdXJZC7Rbe1j8gbPlKckSc6mp02zvPcZvpIwE0Lq2sSQpQmrDxM+tB37X95sa19gg/hP/7R5xLpfVv5nRbeFG+fZoDD3MZjxZ8hJh5TN8MNf7fsMvscz51VFFQ0EK0VkDjYQzBaRSKCgnNeoqvJAKurbhrRiRMgG5uR05+I3fmXilOXccWQiciyR6S/fz+Vv/sYtH61k7KtL+COxGjOdJq6AvEwY9H/2PP21eaiqk8lcmvcFccCeZZ4rk7ucdEhJsD9vrGWBID/PnlOHC+wIrLI06w0jn7Z9bUv+a7fNeQxyMmD0fyvezBpSBy7/AM7/B2z4GqYMhxl/gsBQuNj3TW8VDQQ3AA8BZxpjMoAg4E9eK5W/OxEITmE2ceIKgvOO027QReQVGHLzDYGtB7MhegR3Bn/HtMub8Pa1fcnKzeeSN35hyuLt1ZPgbvvP9gLW+myIG2Kf+2NivfTkU6sRhNaFxl3tWhfesG+tHTnT7nw4tMWmN6gtdi2xC0V1Hlex4/veYJtXFzwFC5+1HcyD74aYDpX7XBE46164aoZND3JgHVzkbH7ysYo2UA4E1hhj0kXkauAM4GXvFcvPeWJxmq1zQQLoM/Ri5o1yy3d/9CV4rS8Dtr4IV3xM31b1+esXa3ny+wR+2XqQ5y7vScM65dwlnYodP9sx16FR0Gao7fA8ssP/hpGmpVR96KhLy4Gw+hPIz4WAIM+UyyVppX0c9ghsnWebhxre7dnP8JWEbyEwzAa5ihCBsS/Z4LjwKZv9dchfqv757c6DW5fYmcPtzqv6+3hQRWsEbwAZItIT+AuwDfjQa6Xyd8GRdsGSnYvtH3lVbJlr2+HDii16EtUchtxn/xi2LaB+RDCTr+nDv8Z35Zdthxj18mKWbDl46udQkuzj9gLjapdtM9Q+ujqP/UVOOuSmV20ymbuWA+z77P/DM+Vyt3cV1I2F5mdAkx61p3mooAASvoP250NweMVfF1LH9hc07gYXvlK515akXosaEwSg4oEgz9h2g/HAa8aY14FI7xXLzzkc9k5s80rnpOIAACAASURBVI8wdZK9cFTG8f2wf639spdk4P9BvVbw40OQn4uIcM3AOGbeOZiosCCueXcZ41//hZs+jOfhL//ghbmb+ei3nfy4bh/7jmZW/bx2/QoFebZZCCC6HUQ2q/n9BPvXeXa01anOIXBpMcA+7l56au9TkqRV0Nw5Nr7jaNsXke6lG4TqlLgc0vZD5/GVf22jTnDbLycPAa0FKhoIjovIw9hho9+LiAPbT1AmERkpIptEZKuIPFTGcZeKiBER342fqmmG3AcXvgzbfrJZCCvzR7h1nn1sN7zk/UGhdthbykZYO/3E5k5N6vLtnWdx6zltqRsayJ7DGczdsJ9X52/hsW/Wc+vHqxj+wiLmb6zikMXtP9ulO10jhkRsrWDHosIRGTXR7IdtDpjMVM+836nkGXIX1RyiWnq+nyDjsG2ua3aGfd5pNGDsjcnpbsNMCAguzAisgIoHgiuAbOx8gv1ALPBcWS8QkQDgdWAU0AWYJCJdSjguErgb8NLwh9NYn+vhik/sEMF3RsDhCi5Ss2WuHbfcpHvpx3QaAw3a2in2bsKCA3hwZCc+uqE/P95zNvGPDmfLk6NY/sh5fHX7IOIahnPDB/G8vagKncs7foaW/YvmUGlzju24O+CF5g1PSEu2E6sK8uz/qyecSp6h4loOsHfrFfldfHWrnVhYHteM5ebOQNCkh20m2vRD1ctZExhjm0TbDLOd7eqECgUC58X/EyBKRMYCWcaY8voI+gFbjTHbjTE5wDRs01Jx/wKeBbIqXmw/0mk0XDsTMg7ZYLDv97KPz8+D7QtsR1hZQ9tE7DT4XUvgyK4y3zIwwEGjyFB6t6zP9FsGnlgw568z1pKdV8FsqOkH7SiJ1sXGbbue19R+gg3f2NEzQRG2Y9sTTjXPkLuWA+yksiPl3CQc3GIniC17s/z33LvKPjbtZR9FoOMo2DYfck+hadDX9q2x+Zk6X+jrktQ4FQoEIjIBWA5cDkwAlolIeTMpmgPu6RETndvc3/cMoIUx5vtyPv9mEYkXkfiUlJSKFLl2adkfbphjq7TvjSn7opm4wo42Kq1/wF3PK+yjW/NQecKDA3lt0hncdV57Pl+ZyNVTlnEwrQLrJLgmjrUZWnR73abQsGPN7SdY9yXEdIYel9smt1wP3K94qo8A7MghKL+fYMM39vHAuvKzliattv037gMNOo2G3Azf/56O77cTslI2Vf61G2bahHKdxni+XKe5ijYNPYKdQ3CdMeZa7N3+Y6fywc5+hhewo5DKZIyZbIzpa4zpGxPjgT+e01FMR7hxrh1tMO1KOLC+5OOcw0ZpU4EOrXot7Vj+36dWaiy/wyHcN7wDr07qzdrEo4x/7RfWJR0tu6lox892JqfrLtNdm6G2nTuvhi28c2yvLVe3S6DTWJsR1hMzodOSIbRe+RkpKyKmkx2KW14/wYZvoK7zPmzL7LKP3buqsH/ApdVZ9vfn61nGcx+HdV/A53+qXFA2xs4mjjurwkvG+pOKBgKHMcY9KcyhCrw2CXBfkivWuc0lEugGLBSRncAAYKZ2GJehbjO4+gsIrgOfTizsdHS3ZS606HfysNHS9JwIh7dVKZ/MhT2b8fmtA8krKGDsq0vo/PiPnPvfhVzzzjIe/nItr83fwndr95KTV2BrMa0Gl5xbp8059m6zpuW0Wf81YKDrJXakU3CkZ5qHTnUymTuHw3a+7y6ji+3wdjuKrP+tNgPm5jJyRR7bC8f3FfYPuAQG2+bGTT/6rmN/z3JY+5m9yUleD/P+UfHXpmyEQ1u1WagUFQ0EP4rIbBG5XkSuB74Hyrs1WAG0F5HWIhIMTARmunYaY44aYxoaY+KMMXHAUmCcMSa+0mfhT+o2g0lT7cXks6uL3kUfP2D/4Cs6UQbs7MrAMFsrqIIesfX49v/O4h8XduHq/q3o2DiSo5m5zFl/gOfnbObOT1dz/Utf2Dbs0vK6xJ1lZxvXtH6C9V/aDveG7WwqgvbD7R1xwSmuEueJyWTuWg6Ag5sg/VDJ+zc4/+y6jIcOI23tLCej5GOTnP0DzfucvK/jaPu9c002q04FBTZ7bmRTm9K5/62w7A3YMq9ir98wExANBKWoaGfxA8BkoIfz32RjzIPlvCYPuBOYDSQA040x60XkCRGp4NxuVaLmZ9ip6XuWwrf3FDbruIaNti9l2GhJQuvaBbHXfVHlpplGkaFcP7g1j47twhtX92HmnWex8rHhJDwxkrev7Uv3HDsK5amNjThwrITqfGiUbYrwdfuzu9TdtobS9ZLCbZ3G2Pb9U625pKdARMNTew93rn6C0vIObfjG5syp38oOm8zLKr2Ja+8qO5mxpBFn7c+3+zaV2aXnHb9PtWU7/592ctf5/4RGXeHr20quGReXMNPWnCKbeL+sp6EKJzI3xnxhjLnP+a9Cs2uMMbOMMR2MMW2NMf92bnvcGDOzhGOHam2gErpdAkMfht8/hV9fsdu2zoU6je1wv8roOcl2MHt4nHhYcADDuzTmr+0PkB7UgPe3hnHu8wuZsng7uW4rq2Xl5nO48SAKklbywYK1TF2+mzV7UsnM8eH6zK4JZF0vLtzWfjg4gk69eciTTUNgL/KOoJL7CVJ32wtoF+eAvVaD7Qio0n7XSaugUeeSl0kMqw+tBlX/MNKsY7YZKPZMm/MH7FyYS6fY7+03t5fdx3Vom+0k76L3n6UpM9eQiBwHSvofFsAYY3Qwri+d86Bt+5z7d5urZ9t826lZ2YVn2gy18w5+n1Z4wfAUYwjYtZiIjucyd9g5/GPmep78PoFpK/bQuG4IOw9msPdoJgMkkqnB+fw89xvmF9j2aYdAXMMIOjetS5emdekRG8WZcQ0IDQo48d7M/5cd2XPjPM/eZa/70tZSGrQu3BYaZfsKEr6D4f+q2gI/edn24uXJpqGgMBsMSqoRuDcLgW3iajsMtsyx/3/u52CMnUNQ1neg4xj48UF7cXWlwnZ3bK/9LnlysZzF/7XBc9K0ou/buAuMeBJ+eMCuKNb/5pJfn/Ctfew01nNlqmXKDATGGE0jUZOJwPj/2bVWp18HJr9y/QMujgC7fvDS/9nx/pW9oB7bZ8eyN+158sUxZZPd1+YcWkVH8O71ZzJ3wwFe/mkLadn5nBlXn1bRsbSt35mCH/7L/wYeI3nQMDbsO0aC89/axFS+X2sXAg8NctC/dTTntG/Apfv+S9QG54S4JS/CBf+u/LmX5NA2O+Z8xJMn7+s81q4olbLR3jmXJGUzfPFn+/o2Q4vucw0d9cRkMnctB8DSN+w4f/e7+Q3f2Bqie1K/DiNtrebAuqJNQIe321XxincUu+s4ygaCTbNsKnGw+bASvrXLNu76Bc5+oORVu6ri0Db7vex5JcSW0G/R7ybbJDrnUdvX1Ng5ZzXrqO3YTphp97uaxlSJdM3i011wOEycCm8Ps8MSq5oHpeck28S07ovS12h1l5tl24rXfGprIqbAXvRGPFn04uJaltKZX0hEGNG1CSO6ltBWu2EgoXuW0DI6nJbR4YzsVnjM8axc4ncdYdHmFH7dtJdGcx4lKmAZ7wVcRq+oNHotn4IMvNMzKX1LahZy6TjaBoKN35UcCPLz4OtbbSK4r26D238rOoLLk5PJ3LUcaH9/e1fb5huAo0k2t865xUZ6tx9hHzf/WPR35ZpRXHzoqLv6rWzitU0/2Gaale/b5SzT9tv8Vc372lW4zrjWDk8uz+bZdub2GddCw/Yn75/zmJ0/c/7fS369CIx/Hd4YBF/cAANus7Wg7QuhINd2Lp9xrd2uSuWlxU5Vtarb1M4+vvw9245bFY272DvHskYPGWOH8H17DzzfwU7sSd4IZ91nA8C+3+HNIXaN1mP2Dp7tP9sLRGkLd7trM9Sm0zh+ci6jyNAghnVsxN9HtGJ2o9cZG7CMVZ3uZ1nc7dyfPIq8vFx+n/oYWbke6FdY/5XtWIyKPXlfZBPbVp1QSj/Br6/YUTWD77E1oR+Lpdg6USPwcCBw5W9y7ydwNYkUX44xsrG92BcfRpq0yi6UUlpNx6XjaJtA8MWusPBpaNINrpwOd62GCR/Yi/NPT5Rf5qNJdtH2X1+B1/rChxfBxu8LR2Vtm29vNs6+v+xO3joxdvBE8gaY+X92BFX/W+CGuXDvBhj9nP+lOa8krRHUFjEdKr9QRnE9J9kEa8kbbaZFd0kr4fv7bcdjYJjteOt1JcSdXdhu2/tq25677C079HLQ/9m7va4V7HdwDS/d8bNtqiou4zB8OsGWZfzrnNH7at4E9hzuzNL359F/75dMfO48rh9zDhf2aIqU1IZ/NAk+HGebEUY+c3KnaMom22Qy8tnSy9lpjO28PJpYNFgc2GAvjJ3H2ZWoAoJh0X/s806j7TEnagQebhqKiIaGHYrOMN7wjR1Z07Ddycd3uAAWPlO0KTBppb0ZKG9tgx5X2CDT9lw484aifQVRsfb3vug5O8SztHV4XYu2F+TBDfPs7zz+XTtZMqol9P2TnTNQvzUMuL38829/Plz7jZ2oV1ITpSqT1ghUoe6X21nJ7rWCjMPw7d3w9nl2VaWxL8L9m+GSyfYO3r3zLqy+rRncsdxeaH5+FrKPnpxfqDRNekBYA/jqFnipO3wwDmbeZdv//5gB74+xtY4JH9qg49SiQThDbniWwIAAbuEL7pq6msvf/I21icWyheblwOfX2xQLK9+Hd4bbNmh3674EpOwOU1eno3uO/vxc2yQUUtf+H4nYtvLG3e3/n2vx83QvBQIoTEBXUGBTMez+rfTz6HABYAoT6eXn2f/bsvoHXBq2gzuWwsinSu4wHnyPHb02+2+lj+b543M7w/m8x6HFmfau/+61MOEjaBBn1wRO2Wj7fcpbTtKlzVBo1kuDQBVoIFCF6sTYIZJrp9sL28r34dUzbMbKAbfDnfHQ98/lZ25s0Bouf99WzQffbZsSKsIRABM/sas/xfaz6zBs/M7efX9xg02Od9XnJU8KimqOo9+NjMidz+sXRLLzUDrjXvuFsa8u5qV5m1m/9yhmziO2zfySt2xTRuoeeOucwjw8xtiaTKvBZfc1NGxv777dh5EufsFeSMe+UHiHHRgMF78BmUfge2cmlfSDdmb4qS5sUpKWA20nacpGZ7OQKT0QNOlpR/e4hpGmbLRrSZc0kayyQurYzuI9y+z6vMWlJdtF22P7Fe2PCgi0Nc3rvoXbl9mAX9Hvjjol2jSkiuo50V4cXu9nR5G0HARjnrfr41ZWi372X2W0GlTY2emSdcyOjKrTqOy24rPuRVa+z5hDH3D2/W8ydflu5qy3I5S2z/+AV4In81ujK8gPHsKANg0IvHWxzVkz/Vrof5ttjjq4uWKd5Z3Gwi8v24t86h7bBNTtspMvvE2622G+C560F7lTXbS+LO79BBu+scn8ijfxuTgc0GGETaORn1uYcbSsjuLK6HWVbSKc+3foMMqO+3eZ9YAN8uNfK33R9kadSi+78jitEaiiOoyC8IaQnQYXT4Y/zapaEPCk0LrQtEf5s0LrNLIX8XVfEHl0Mzef3ZYZtw1i1S2xvBD2DptDunHTvgu5+p1ljHx5MXP3hmD+NMsGgWVvwAcX2lQXFVm9qtNYO1w34Ts7uzU82nZKluSse+3wxe//Yu+8Pd1R7NKgjR2NtPE7O4yzvDkh7S+A7GM2cCStgpAoz3WqOgJsM2HqLlj+VuH2hG9tLeGcv9pEiqpG0ECgigoKhdt+tSNAel5x+rW3DroLQiJhwVP2edYx6n/7ZwJDI+lwxwxWPDaaVyb1pqDAcNOH8UyYspKVXR6Eyz8AxK7qVpEx/s1626GJPzxoO5fHvlR6VsuAQLjoTRtcD6zzXo1AxPYTuIbzlhcI2gy1HdqbZzszjvby7ESwtsPsnIVFz9smMVcTWZPuth9B1RgaCNTJIhvbdt7TUXgDGHiHvStOWgUz77Qru13+HtRtSlhwAON6NmP2vWfz5EXd2HEwg0vf+JVbVsWy45qlcNk7Ffsch8O2X+em29FWncppy27UCc59xP7srRoBFOYdatC2/JpcSB2bhjzhW5vWvCIdxZU1/F+2GWjh0zD7ERsQxr9e/sgkVa20j0DVPgNutytxfTrBjtsf/i87XNRNUICDqwe04uLezXlnyQ7e+nkb5yckc/2gOP46siMhgaW0Xbs78wa7ctzIpytWroF32v4Eb2bAbOlc0L7L+IrV5jqMtCkawHP9A+5iOtj/pxVTbC3lrPvs8E5Vo0il1531sb59+5r4eM1Np8qx5CWY93d70Z3wUbkXxYNp2bwwdzOfLttN12Z1eXVSb9rEnIa1ImPsRbfrJXZuQXmO7ISXnRfme9eXPInuVKUfgld625rmLYuLdhyraiMiK40xJU7s0ECgaqe8bDtWvct422dQQXM3HOCBGb+Tk1fAv8Z349I+Xrgw1jSv97fzHO7f7L0+oUPbbNI+TyYGVJWigUCpSth3NJO7p61h+Y7DXNK7OU9c1I06IbW4FXXbfDv/oKTcSqrWKCsQaGexUsU0jQpj6k0DuOf89ny9JokLX11C/M7DFBScXjdNFdb2XA0Cfq4W3+YoVXUBDuGe8zswoE0090xbw2Vv/kZ0RDAD2kQzoG00A9tE0zYmouR8RkqdZjQQKFWGAW2imX3P2czZsJ/fth3it+2H+P4Pm1m1UWQIZ7ZuQNuGEbSMjqBVdDitGoQTExmiAUKdVrSPQKlKMMaw61AGv20/xG/bDrFq9xH2pmbi3moUFhRAywbhxNYPI7Z+GM3rh9G8XuHz6DoVTKKmlAeV1UegNQKlKkFEiGsYQVzDCCb1swuv5OQVkJSaya5D6ew+nMGuQxnsOpRO4pFMlu88zPGsvCLvcd3AVvxjXFetNagaQwOBUqcoONBB64YRtG4YUeL+o5m5JB3JJCk1k3kbDvDBb7toGR3BDWe1LvF4paqbBgKlvCwqLIiosCC6NKvLeZ0acTQzlye/30BcdDjndW7s6+IppcNHlapODofwwhU96dYsirumriZh3zFfF0kpDQRKVbfw4ECmXNeXyNAgbvwgnuTjWSUel5WbzyfLdvHc7I0cTMuu5lIqf6KBQCkfaFw3lCnX9eVweg43f7iSrNz8E/sycvKYsng7Z/9nAY98tY7XF2zj3OcX8uFvO8mvrZPalE9pIFDKR7o1j+LFK3qxZk8qD8xYy9HMXF6bv4Wznl3Ak98n0DamDp/c2J95951Dj9h6PP7Nesa9toSVu474uuiqltF5BEr52BsLt/HsjxsJDnSQk1fAuZ0accewdvRpVf/EMcYYZv2xn399t4H9x7K4vE8sD47qREOdk6AqyGfzCERkJPAyEABMMcY8U2z/rcAdQD6QBtxsjNngzTIpVdPcek4bUjNy2Hc0i5vPbkO35lEnHSMijOnRlKEdY3h1/lamLN7O3IQD/HD3EJpGhfmg1Ko28VqNQEQCgM3AcCARWAFMcr/Qi0hdY8wx58/jgNuNMSPLel+tESgF6/ceZeyrS7hzWDv+MkLX/lXl81X20X7AVmPMdmNMDjANKLKIqisIOEUAp1c7lVI+0rVZFMM6NuKzFXvIzS/wdXHUac6bgaA5sMfteaJzWxEicoeIbAP+A9xV0huJyM0iEi8i8SkpKV4prFKnmyv7tST5eDY/JRzwdVHUac7no4aMMa8bY9oCDwKPlnLMZGNMX2NM35iYmOotoFI11LBOjWgWFcony3b7uijqNOfNQJAEtHB7HuvcVpppwEVeLI9StUqAQ5jYryWLtxxk58F0XxdHnca8GQhWAO1FpLWIBAMTgZnuB4hIe7enY4AtXiyPUrXOFWe2IMAhTF2htQJVdV4LBMaYPOBOYDaQAEw3xqwXkSecI4QA7hSR9SKyBrgPuM5b5VGqNmpcN5TzOzfi8/hEsvPyy3+BUiXw6jwCY8wsYFaxbY+7/Xy3Nz9fKX9wVf9WzF5/gB/X7Wd8r5PGYyhVLp93FiulTs1Z7RrSskE4n2qnsaoiDQRKneYcDmFSv5Ys23GYrcnHfV0cdRrSQKBULXB531iCAkSHkqoq0UCgVC3QsE4II7s15YuViUVSWitVERoIlKolruzXkmNZeXy3dp+vi6JOMxoIlKolBrRpQJuYCD5ZtsvXRVGnGQ0EStUSIsJV/Vuxencq8TsP+7o46jSigUCpWuSyM2JpXDeEa95Zztery8roolQhDQRK1SJR4UF8e+dZdG8exT2freHxb9aRk6dpqlXZNBAoVcs0qhvKJzf15+az2/Dhb7uY8NZv7E3N9HWxVA2mgUCpWigowMHfRnfmjavOYGtyGmNfXcIvWw/6uliqhtJAoFQtNqp7U765czDREcFc884ynpqVwNGMXF8XS9UwGgiUquXaxtTh6zsGc3mfFry9eDtD/jOfNxZuIzNHJ54pSwOBUn4gIiSQZy/rway7htA3rgHP/riRoc8v4NNlu3XNY4UYc3qtF9+3b18THx/v62IodVpbvuMwz/64kZW7jtCmYQQTzmxB/fAg6oQEUSc0kDohgUSGBtK4bihRYUG+Lq7yABFZaYzpW+I+DQRK+SdjDD8lJPPc7E1sOlBy1tLQIAevTOzNiK5Nqrl0ytPKCgReXZhGKVVziQjnd2nMeZ0bcSwrj/TsPNKy8zie5XrM5e3FO7jl45X8c1xXrh0Y5+siKy/RQKCUnxMRosKCSmwCOrdTI+6auobHv1lP0pFMHhzZCYdDfFBK5U3aWayUKlV4cCBvXdOHawa04q1F27lr2mpNc10LaY1AKVWmAIfwxPiuNK8fxjM/bCT5eDaTr+lDvfBgXxdNeYgGAqVUuUSEW89pS9OoUB74fC0X/+9XRnZrQuuGEbRpGEGbmDrUDw9CRJuNTkcaCJRSFTa+V3Ma1w3lHzPXM2XxdnLzC0cdRoUF0SYmgjHdmzKpX0siQvTycrrQ4aNKqSrJyy8g8UgmOw6ms/1gOjsOprEu6Rhr9qQSFRbEdQNbcd2gOKLrhPi6qAqdR6CUqkardx/hzZ+3MWfDAUICHVzRtwU3DmlDiwbhvi6aX9NAoJSqdluT05i8aBtfrU6iwMDIrk24qn9LBraN1r4EH9BAoJTymf1Hs3j3lx1Mj99DakYubRpGMKlfSy7tE0uDCB15VF00ECilfC4rN58f1u3jk6W7id91hOAAB6O6N+GmIW3o1jzK18Wr9coKBF6dUCYiI0Vkk4hsFZGHSth/n4hsEJG1IvKTiLTyZnmUUr4TGhTAxb1jmXHbIGbfczZX9m/J/I3JXP7mb2xLSfN18fya1wKBiAQArwOjgC7AJBHpUuyw1UBfY0wPYAbwH2+VRylVc3RsEsk/xnVl7r3nEBrk4K6pq8nO0xnLvuLNGkE/YKsxZrsxJgeYBox3P8AYs8AYk+F8uhSI9WJ5lFI1TJOoUJ69tAfr9x7j+dmbfF0cv+XNQNAc2OP2PNG5rTQ3AD+UtENEbhaReBGJT0lJ8WARlVK+NqJrE64Z0Iq3F+/g58369+0LNSLpnIhcDfQFnitpvzFmsjGmrzGmb0xMTPUWTinldY+M6UzHxpH8ZfrvHEzL9nVx/I43A0ES0MLteaxzWxEicj7wCDDOGKPfAKX8UGhQAK9M6s3xrFzu//x3CgpOr9GMpztvBoIVQHsRaS0iwcBEYKb7ASLSG3gLGwSSvVgWpVQN17FJJI+O6czCTSm89+tOXxfHr3gtEBhj8oA7gdlAAjDdGLNeRJ4QkXHOw54D6gCfi8gaEZlZytsppfzA1QNaMbxLY579YSPrko76ujh+QyeUKaVqlMPpOYx6eRGhQQH89YJODO/SmODAGtGdeVrz2YQypZSqrAYRwbx+5Rnk5Rvu+HQVA5/+iadmJeikMy/SGoFSqkbKLzAs3pLCtOV7mJdwgLwCQ7/WDbiibwvOaFWfFvXDCAzQe9mK0lxDSqnTWvLxLGasTOSzFXvYdcjOQQ0KEFpFR9A2JoK2MXVoG1OHszvEEBOp6x+URAOBUqpWKCgwrNt7lM0H0tiWksa2ZPu461AGeQWG4AAH43o148+DW9OlWV1fF7dGKSsQ6FpySqnThsMh9IitR4/YekW25+YXsOVAGlOX72bGykRmrExkYJtobjirNed2aoTDoesflEVrBEqpWiU1I4dpK/bwwa872Xc0i7jocP58Vmsu6xNLeHDZ975H0nOYsmQ7v247xH8u7UH7xpHVVGrv06YhpZTfyc0v4Md1+3lnyQ7W7EmlXngQV/dvxbWDWtEoMrTIsYfTc3h78XY+/HUnGbn5RAQHEhoUwLSbB9CuUR0fnYFnaSBQSvktYwwrdx3h7cXbmbPhAEEOBxf1bsaNQ9oQHRHM5MXb+ei3XWTm5jO2RzP+79x2OAQmTl6KiDDt5gG0jTn9g4EGAqWUAnYcTOedJduZsTKRrNwCggMd5OYXcKEzALg3BW0+cJxJk5cS4BA+u2UgrRtG+LDkp04DgVJKuTmcnsMnS3eRfDyb6wbFldr8s2n/cSa9vZTgAAfTbh5A3GkcDDQQKKVUFSXsO8aVby890WfQKrr8YJCbX8CSLQf5bu0+IkICuPPcdif1S1Q3DQRKKXUKNuw9xpVTlhIeFMA1A+No36gO7RrVoUWDcAKcQ1MLCgzxu44w8/ckvl+7jyMZudQNDSQzN5/gAAd3nNuOPw9uTWhQgE/OQQOBUkqdonVJR7nj01UnZjYDBAc6aNMwgrjoCNYmprL3aBZhQQGc36Ux43s24+wOMSSlZvLv7xOYl3CAFg3CeGR0Zy7o2gSR6p3boIFAKaU85GhmLttS0tiaXPhvx8F04qLDuah3c87v3JiIkJPnKyzeksK/vtvA5gNpDGjTgAdHdqJnbL1qm+ymgUAppWqAvPwCpi7fzX/nbiY1I5fIkEB6taxH75b16d2yHr1b1KNeeDBgm5qOZ+VxJCOHIxk5pGbk0r5xHWLrh1fpszUQKKVUDXI0I5e5CQdYLqFvcQAABiFJREFUtfsIq3ensmn/MVyrczavF0Zmbj6pGTkUX7HzXxd145oBrar0mZprSCmlapCo8CAu6xPLZX1iAUjLzmNtYiqrd6ey5cBxIkICqR8eTL3wIOqHB1M/Ioh64cHEVWDEUlVoIFBKKR+rExLIoLYNGdS2oU8+X1d1UEopP6eBQCml/JwGAqWU8nMaCJRSys9pIFBKKT+ngUAppfycBgKllPJzGgiUUsrPnXYpJkQkBdhVxZc3BA56sDinC389b/Dfc9fz9i8VOe9WxpiYknacdoHgVIhIfGm5Nmozfz1v8N9z1/P2L6d63to0pJRSfk4DgVJK+Tl/CwSTfV0AH/HX8wb/PXc9b/9ySuftV30ESimlTuZvNQKllFLFaCBQSik/5zeBQERGisgmEdkqIg/5ujzeIiLvikiyiKxz29ZAROaKyBbnY31fltEbRKSFiCwQkQ0isl5E7nZur9XnLiKhIrJcRH53nvc/ndtbi8gy5/f9MxEJ9nVZvUFEAkRktYh853xe689bRHaKyB8iskZE4p3bTul77heBQEQCgNeBUUAXYJKIdPFtqbzmfWBksW0PAT8ZY9oDPzmf1zZ5wF+MMV2AAcAdzt9xbT/3bOBcY0xPoBcwUkQGAM8CLxpj2gFHgBt8WEZvuhtIcHvuL+c9zBjTy23uwCl9z/0iEAD9gK3GmO3GmBxgGjDex2XyCmPMIuBwsc3jgQ+cP38AXFSthaoGxph9xphVzp+PYy8Ozanl526sNOfTIOc/A5wLzHBur3XnDSAiscAYYIrzueAH512KU/qe+0sgaA7scXue6NzmLxobY/Y5f94PNPZlYbxNROKA3sAy/ODcnc0ja4BkYC6wDUg1xuQ5D6mt3/eXgL8CBc7n0fjHeRtgjoisFJGbndtO6Xuui9f7GWOMEZFaO2ZYROoAXwD3GGOO2ZtEq7aeuzEmH+glIvWAr4BOPi6S14nIWCDZGLNSRIb6ujzV7CxjTJKINALmishG951V+Z77S40gCWjh9jzWuc1fHBCRpgDOx2Qfl8crRCQIGwQ+McZ86dzsF+cOYIxJBRYAA4F6IuK60auN3/fBwDgR2Ylt6j0XeJnaf94YY5Kcj8nYwN+PU/ye+0sgWAG0d44oCAYmAjN9XKbqNBO4zvnzdcA3PiyLVzjbh98BEowxL7jtqtXnLiIxzpoAIhIGDMf2jywALnMeVuvO2xjzsDEm1hgTh/17nm+MuYpaft4iEiEika6fgRHAOk7xe+43M4tFZDS2TTEAeNcY828fF8krRGQqMBSblvYA8Hfga2A60BKbwnuCMaZ4h/JpTUTOAhYDf1DYZvw3bD9BrT13EemB7RwMwN7YTTfGPCEibbB3yg2A1cDVxphs35XUe5xNQ/cbY8bW9vN2nt9XzqeBwKfGmH+LSDSn8D33m0CglFKqZP7SNKSUUqoUGgiUUsrPaSBQSik/p4FAKaX8nAYCpZTycxoIlKpGIjLUlSlTqZpCA4FSSvk5DQRKlUBErnbm+V8jIm85E7uliciLzrz/P4lIjPPYXiKyVETWishXrlzwItJOROY51wpYJSJtnW9fR0RmiMhGEflE3BMiKeUDGgiUKkZEOgNXAIONMb2AfOAqIAKIN8Z0BX7GztoG+BB40BjTAzuz2bX9E+B151oBgwBXdsjewD3YtTHaYPPmKOUzmn1UqZOdB/QBVjhv1sOwSbwKgM+cx3wMfCkiUUA9Y8zPzu0fAJ8788E0N8Z8Bf/f3h2jNBBEcRj//jaCeAc9hZ13sNBGSGHtCQRtPIWWHsRCSGVlZWmVykYEBUHkWewENLEIokkx36/bmWXYV8y+nVl4A1X1BtDGu62qSbu+A7aB8f+HJf3MRCDNC3BVVSffGpOzmft+W5/la+2bD5yHWjG3hqR518B+q/c+PQ92i2G+TCtbHgLjqnoGnpLstvYRcNNOSZsk2WtjrCfZWGoU0oL8EpFmVNV9klOGU6DWgHfgGHgFdlrfI8N/BBjK/l60F/0DcNTaR8BlkvM2xsESw5AWZvVRaUFJXqpqc9XPIf01t4YkqXOuCCSpc64IJKlzJgJJ6pyJQJI6ZyKQpM6ZCCSpc589+yQ7gsbE5wAAAABJRU5ErkJggg==\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ],
      "source": [
        "history = model.fit(X_train, y_train, validation_split=0.3,\n",
        "                    epochs= epochs, batch_size= batch_size, verbose=1, \n",
        "                    callbacks=[learning_rate_reduction]\n",
        "                   )\n",
        "                   \n",
        "# list all data in history\n",
        "print(history.history.keys())\n",
        "# summarize history for accuracy\n",
        "plt.plot(history.history['accuracy'])\n",
        "plt.plot(history.history['val_accuracy'])\n",
        "plt.title('model accuracy')\n",
        "plt.ylabel('accuracy')\n",
        "plt.xlabel('epoch')\n",
        "plt.legend(['train', 'test'], loc='upper left')\n",
        "plt.show()\n",
        "# summarize history for loss\n",
        "plt.plot(history.history['loss'])\n",
        "plt.plot(history.history['val_loss'])\n",
        "plt.title('model loss')\n",
        "plt.ylabel('loss')\n",
        "plt.xlabel('epoch')\n",
        "plt.legend(['train', 'test'], loc='upper left')\n",
        "plt.show()"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "Ez7b7tY6ClKU"
      },
      "source": [
        "# Step 6: Testing the model"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "ygQ2NMSXClKU",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "6457e36d-a499-4a5a-ed38-c418794afe31"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "0.8515151515151516\n"
          ]
        }
      ],
      "source": [
        "y_pred =( model.predict(X_test)>0.5 ).astype(\"int32\")\n",
        "Sqeu_model=accuracy_score(np.argmax(y_test, axis=1),np.argmax(y_pred, axis=1))\n",
        "print(Sqeu_model)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "qSt31P8gClKU",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "053ae09f-175c-4961-fbef-516c35b7c484"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Saved model to disk\n"
          ]
        }
      ],
      "source": [
        "# save model\n",
        "# serialize model to JSON\n",
        "model_json = model.to_json()\n",
        "\n",
        "with open(\"model.json\", \"w\") as json_file:\n",
        "    json_file.write(model_json)\n",
        "    \n",
        "# serialize weights to HDF5\n",
        "model.save_weights(\"model.h5\")\n",
        "print(\"Saved model to disk\")\n",
        "\n",
        "# Clear memory, because of memory overload\n",
        "del model\n",
        "K.clear_session()"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "YFPsG5hWClKV"
      },
      "source": [
        " # Step 7: VGG16\n"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "learning_rate_reduction = ReduceLROnPlateau(monitor='accuracy', \n",
        "                                            patience=5, \n",
        "                                            verbose=1, \n",
        "                                            factor=0.5, \n",
        "                                            min_lr=1e-7)"
      ],
      "metadata": {
        "id": "4aoj1PxsMUq-"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "M5sH-V2TClKV",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "outputId": "456c5f63-999d-45f7-b8ed-6af9060ba2e3"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Epoch 1/50\n",
            "66/66 [==============================] - 17s 234ms/step - loss: 0.6872 - accuracy: 0.5405 - val_loss: 0.7036 - val_accuracy: 0.5360 - lr: 1.0000e-05\n",
            "Epoch 2/50\n",
            "66/66 [==============================] - 15s 228ms/step - loss: 0.6729 - accuracy: 0.5486 - val_loss: 0.6234 - val_accuracy: 0.5360 - lr: 1.0000e-05\n",
            "Epoch 3/50\n",
            "66/66 [==============================] - 15s 228ms/step - loss: 0.5410 - accuracy: 0.7018 - val_loss: 0.4694 - val_accuracy: 0.7708 - lr: 1.0000e-05\n",
            "Epoch 4/50\n",
            "66/66 [==============================] - 15s 229ms/step - loss: 0.4932 - accuracy: 0.7686 - val_loss: 0.4394 - val_accuracy: 0.7898 - lr: 1.0000e-05\n",
            "Epoch 5/50\n",
            "66/66 [==============================] - 15s 228ms/step - loss: 0.4569 - accuracy: 0.7828 - val_loss: 0.5037 - val_accuracy: 0.7652 - lr: 1.0000e-05\n",
            "Epoch 6/50\n",
            "66/66 [==============================] - 15s 228ms/step - loss: 0.4709 - accuracy: 0.7776 - val_loss: 0.4093 - val_accuracy: 0.8087 - lr: 1.0000e-05\n",
            "Epoch 7/50\n",
            "66/66 [==============================] - 15s 228ms/step - loss: 0.4425 - accuracy: 0.7852 - val_loss: 0.4110 - val_accuracy: 0.8068 - lr: 1.0000e-05\n",
            "Epoch 8/50\n",
            "66/66 [==============================] - 15s 228ms/step - loss: 0.4231 - accuracy: 0.7862 - val_loss: 0.4568 - val_accuracy: 0.7670 - lr: 1.0000e-05\n",
            "Epoch 9/50\n",
            "66/66 [==============================] - 15s 228ms/step - loss: 0.4176 - accuracy: 0.7975 - val_loss: 0.3841 - val_accuracy: 0.8220 - lr: 1.0000e-05\n",
            "Epoch 10/50\n",
            "66/66 [==============================] - 15s 228ms/step - loss: 0.3999 - accuracy: 0.8080 - val_loss: 0.3794 - val_accuracy: 0.8220 - lr: 1.0000e-05\n",
            "Epoch 11/50\n",
            "66/66 [==============================] - 15s 228ms/step - loss: 0.4192 - accuracy: 0.7985 - val_loss: 0.3623 - val_accuracy: 0.8182 - lr: 1.0000e-05\n",
            "Epoch 12/50\n",
            "66/66 [==============================] - 15s 228ms/step - loss: 0.3924 - accuracy: 0.8151 - val_loss: 0.3524 - val_accuracy: 0.8333 - lr: 1.0000e-05\n",
            "Epoch 13/50\n",
            "66/66 [==============================] - 15s 228ms/step - loss: 0.3970 - accuracy: 0.8094 - val_loss: 0.3651 - val_accuracy: 0.8390 - lr: 1.0000e-05\n",
            "Epoch 14/50\n",
            "66/66 [==============================] - 15s 228ms/step - loss: 0.3884 - accuracy: 0.8170 - val_loss: 0.3520 - val_accuracy: 0.8371 - lr: 1.0000e-05\n",
            "Epoch 15/50\n",
            "66/66 [==============================] - 15s 228ms/step - loss: 0.3780 - accuracy: 0.8212 - val_loss: 0.3465 - val_accuracy: 0.8333 - lr: 1.0000e-05\n",
            "Epoch 16/50\n",
            "66/66 [==============================] - 15s 228ms/step - loss: 0.3684 - accuracy: 0.8298 - val_loss: 0.3760 - val_accuracy: 0.8277 - lr: 1.0000e-05\n",
            "Epoch 17/50\n",
            "66/66 [==============================] - 15s 228ms/step - loss: 0.3730 - accuracy: 0.8255 - val_loss: 0.3446 - val_accuracy: 0.8409 - lr: 1.0000e-05\n",
            "Epoch 18/50\n",
            "66/66 [==============================] - 15s 228ms/step - loss: 0.3668 - accuracy: 0.8217 - val_loss: 0.3500 - val_accuracy: 0.8409 - lr: 1.0000e-05\n",
            "Epoch 19/50\n",
            "66/66 [==============================] - 15s 228ms/step - loss: 0.3671 - accuracy: 0.8222 - val_loss: 0.3579 - val_accuracy: 0.8295 - lr: 1.0000e-05\n",
            "Epoch 20/50\n",
            "66/66 [==============================] - 15s 228ms/step - loss: 0.3638 - accuracy: 0.8298 - val_loss: 0.3394 - val_accuracy: 0.8258 - lr: 1.0000e-05\n",
            "Epoch 21/50\n",
            "66/66 [==============================] - 15s 228ms/step - loss: 0.3509 - accuracy: 0.8331 - val_loss: 0.3356 - val_accuracy: 0.8352 - lr: 1.0000e-05\n",
            "Epoch 22/50\n",
            "66/66 [==============================] - 15s 228ms/step - loss: 0.3481 - accuracy: 0.8317 - val_loss: 0.3675 - val_accuracy: 0.8295 - lr: 1.0000e-05\n",
            "Epoch 23/50\n",
            "66/66 [==============================] - 15s 228ms/step - loss: 0.3442 - accuracy: 0.8459 - val_loss: 0.3394 - val_accuracy: 0.8409 - lr: 1.0000e-05\n",
            "Epoch 24/50\n",
            "66/66 [==============================] - 15s 228ms/step - loss: 0.3459 - accuracy: 0.8279 - val_loss: 0.3339 - val_accuracy: 0.8485 - lr: 1.0000e-05\n",
            "Epoch 25/50\n",
            "66/66 [==============================] - 15s 228ms/step - loss: 0.3277 - accuracy: 0.8445 - val_loss: 0.3271 - val_accuracy: 0.8409 - lr: 1.0000e-05\n",
            "Epoch 26/50\n",
            "66/66 [==============================] - 15s 228ms/step - loss: 0.3229 - accuracy: 0.8402 - val_loss: 0.3292 - val_accuracy: 0.8447 - lr: 1.0000e-05\n",
            "Epoch 27/50\n",
            "66/66 [==============================] - 15s 228ms/step - loss: 0.3339 - accuracy: 0.8483 - val_loss: 0.3388 - val_accuracy: 0.8333 - lr: 1.0000e-05\n",
            "Epoch 28/50\n",
            "66/66 [==============================] - 15s 228ms/step - loss: 0.3191 - accuracy: 0.8521 - val_loss: 0.3672 - val_accuracy: 0.8258 - lr: 1.0000e-05\n",
            "Epoch 29/50\n",
            "66/66 [==============================] - 15s 228ms/step - loss: 0.3107 - accuracy: 0.8516 - val_loss: 0.3455 - val_accuracy: 0.8220 - lr: 1.0000e-05\n",
            "Epoch 30/50\n",
            "66/66 [==============================] - 15s 228ms/step - loss: 0.3171 - accuracy: 0.8502 - val_loss: 0.3199 - val_accuracy: 0.8390 - lr: 1.0000e-05\n",
            "Epoch 31/50\n",
            "66/66 [==============================] - 15s 229ms/step - loss: 0.3029 - accuracy: 0.8587 - val_loss: 0.3277 - val_accuracy: 0.8485 - lr: 1.0000e-05\n",
            "Epoch 32/50\n",
            "66/66 [==============================] - 15s 228ms/step - loss: 0.2985 - accuracy: 0.8663 - val_loss: 0.3254 - val_accuracy: 0.8333 - lr: 1.0000e-05\n",
            "Epoch 33/50\n",
            "66/66 [==============================] - 15s 228ms/step - loss: 0.2953 - accuracy: 0.8606 - val_loss: 0.3009 - val_accuracy: 0.8636 - lr: 1.0000e-05\n",
            "Epoch 34/50\n",
            "66/66 [==============================] - 15s 228ms/step - loss: 0.3048 - accuracy: 0.8573 - val_loss: 0.3205 - val_accuracy: 0.8371 - lr: 1.0000e-05\n",
            "Epoch 35/50\n",
            "66/66 [==============================] - 15s 228ms/step - loss: 0.2858 - accuracy: 0.8706 - val_loss: 0.3325 - val_accuracy: 0.8428 - lr: 1.0000e-05\n",
            "Epoch 36/50\n",
            "66/66 [==============================] - 15s 228ms/step - loss: 0.2762 - accuracy: 0.8677 - val_loss: 0.3354 - val_accuracy: 0.8428 - lr: 1.0000e-05\n",
            "Epoch 37/50\n",
            "66/66 [==============================] - 15s 228ms/step - loss: 0.2816 - accuracy: 0.8701 - val_loss: 0.3392 - val_accuracy: 0.8485 - lr: 1.0000e-05\n",
            "Epoch 38/50\n",
            "66/66 [==============================] - 15s 228ms/step - loss: 0.2648 - accuracy: 0.8829 - val_loss: 0.3020 - val_accuracy: 0.8712 - lr: 1.0000e-05\n",
            "Epoch 39/50\n",
            "66/66 [==============================] - 15s 228ms/step - loss: 0.2450 - accuracy: 0.8985 - val_loss: 0.3103 - val_accuracy: 0.8617 - lr: 1.0000e-05\n",
            "Epoch 40/50\n",
            "66/66 [==============================] - 15s 228ms/step - loss: 0.2477 - accuracy: 0.8952 - val_loss: 0.3003 - val_accuracy: 0.8580 - lr: 1.0000e-05\n",
            "Epoch 41/50\n",
            "66/66 [==============================] - 15s 228ms/step - loss: 0.2458 - accuracy: 0.8957 - val_loss: 0.3355 - val_accuracy: 0.8409 - lr: 1.0000e-05\n",
            "Epoch 42/50\n",
            "66/66 [==============================] - 15s 228ms/step - loss: 0.2377 - accuracy: 0.8957 - val_loss: 0.3292 - val_accuracy: 0.8598 - lr: 1.0000e-05\n",
            "Epoch 43/50\n",
            "66/66 [==============================] - 15s 228ms/step - loss: 0.2283 - accuracy: 0.9028 - val_loss: 0.3225 - val_accuracy: 0.8542 - lr: 1.0000e-05\n",
            "Epoch 44/50\n",
            "66/66 [==============================] - 15s 229ms/step - loss: 0.2156 - accuracy: 0.9090 - val_loss: 0.3321 - val_accuracy: 0.8561 - lr: 1.0000e-05\n",
            "Epoch 45/50\n",
            "66/66 [==============================] - 15s 229ms/step - loss: 0.2263 - accuracy: 0.9071 - val_loss: 0.3039 - val_accuracy: 0.8636 - lr: 1.0000e-05\n",
            "Epoch 46/50\n",
            "66/66 [==============================] - 15s 228ms/step - loss: 0.2281 - accuracy: 0.9052 - val_loss: 0.3152 - val_accuracy: 0.8636 - lr: 1.0000e-05\n",
            "Epoch 47/50\n",
            "66/66 [==============================] - 15s 231ms/step - loss: 0.2065 - accuracy: 0.9137 - val_loss: 0.3720 - val_accuracy: 0.8617 - lr: 1.0000e-05\n",
            "Epoch 48/50\n",
            "66/66 [==============================] - 15s 229ms/step - loss: 0.1790 - accuracy: 0.9246 - val_loss: 0.3096 - val_accuracy: 0.8655 - lr: 1.0000e-05\n",
            "Epoch 49/50\n",
            "66/66 [==============================] - 15s 229ms/step - loss: 0.1937 - accuracy: 0.9203 - val_loss: 0.3340 - val_accuracy: 0.8674 - lr: 1.0000e-05\n",
            "Epoch 50/50\n",
            "66/66 [==============================] - 15s 228ms/step - loss: 0.1775 - accuracy: 0.9241 - val_loss: 0.3690 - val_accuracy: 0.8523 - lr: 1.0000e-05\n",
            "dict_keys(['loss', 'accuracy', 'val_loss', 'val_accuracy', 'lr'])\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ],
      "source": [
        "input_shape = (img_size,img_size,3)\n",
        "lr = 1e-5\n",
        "epochs = 50\n",
        "batch_size = 32\n",
        "\n",
        "model = VGG16(include_top=True,\n",
        "                 weights= None,\n",
        "                 input_tensor=None,\n",
        "                 input_shape=input_shape,\n",
        "                 pooling=None,\n",
        "                 classes=2)\n",
        "\n",
        "model.compile(optimizer = Adam(lr) ,\n",
        "              loss = \"binary_crossentropy\", \n",
        "              metrics=[\"accuracy\"])\n",
        "\n",
        "history = model.fit(X_train, y_train, validation_split=0.2,\n",
        "                    epochs= epochs, batch_size= batch_size, verbose=1, \n",
        "                    callbacks=[learning_rate_reduction]\n",
        "                   )\n",
        "\n",
        "# list all data in history\n",
        "print(history.history.keys())\n",
        "# summarize history for accuracy\n",
        "plt.plot(history.history['accuracy'])\n",
        "plt.plot(history.history['val_accuracy'])\n",
        "plt.title('model accuracy')\n",
        "plt.ylabel('accuracy')\n",
        "plt.xlabel('epoch')\n",
        "plt.legend(['train', 'test'], loc='upper left')\n",
        "plt.show()\n",
        "# summarize history for loss\n",
        "plt.plot(history.history['loss'])\n",
        "plt.plot(history.history['val_loss'])\n",
        "plt.title('model loss')\n",
        "plt.ylabel('loss')\n",
        "plt.xlabel('epoch')\n",
        "plt.legend(['train', 'test'], loc='upper left')\n",
        "plt.show()\n",
        "\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "4Td6NFt6ClKV",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "799b2ef5-a6eb-4941-c6d0-5a740d2b7936"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "0.8606060606060606\n",
            "Saved model to disk\n"
          ]
        }
      ],
      "source": [
        "# Testing model on test data to evaluate\n",
        "y_pred = model.predict(X_test)\n",
        "vgg16=accuracy_score(np.argmax(y_test, axis=1), np.argmax(y_pred, axis=1))\n",
        "print(vgg16)\n",
        "\n",
        "# save model\n",
        "# serialize model to JSON\n",
        "VGG16_json = model.to_json()\n",
        "\n",
        "with open(\"VGG16.json\", \"w\") as json_file:\n",
        "    json_file.write(VGG16_json)\n",
        "    \n",
        "# serialize weights to HDF5\n",
        "model.save_weights(\"VGG16.h5\")\n",
        "print(\"Saved model to disk\")"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "tvWl4W4rClKV"
      },
      "source": [
        "# Step-8: InceptionV3"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "mDckVH8QClKW",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "outputId": "2eb2f70b-b6f9-4353-a03f-461ac43915bf"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Epoch 1/50\n",
            "66/66 [==============================] - 31s 294ms/step - loss: 0.6854 - accuracy: 0.6164 - val_loss: 0.6947 - val_accuracy: 0.5360 - lr: 1.0000e-05\n",
            "Epoch 2/50\n",
            "66/66 [==============================] - 14s 212ms/step - loss: 0.6100 - accuracy: 0.7013 - val_loss: 0.7173 - val_accuracy: 0.5360 - lr: 1.0000e-05\n",
            "Epoch 3/50\n",
            "66/66 [==============================] - 14s 211ms/step - loss: 0.5701 - accuracy: 0.7307 - val_loss: 0.8091 - val_accuracy: 0.5360 - lr: 1.0000e-05\n",
            "Epoch 4/50\n",
            "66/66 [==============================] - 14s 217ms/step - loss: 0.5346 - accuracy: 0.7473 - val_loss: 0.8842 - val_accuracy: 0.5360 - lr: 1.0000e-05\n",
            "Epoch 5/50\n",
            "66/66 [==============================] - 14s 212ms/step - loss: 0.4974 - accuracy: 0.7587 - val_loss: 0.9909 - val_accuracy: 0.5360 - lr: 1.0000e-05\n",
            "Epoch 6/50\n",
            "66/66 [==============================] - 14s 212ms/step - loss: 0.4824 - accuracy: 0.7672 - val_loss: 1.0239 - val_accuracy: 0.5379 - lr: 1.0000e-05\n",
            "Epoch 7/50\n",
            "66/66 [==============================] - 14s 212ms/step - loss: 0.4581 - accuracy: 0.7923 - val_loss: 0.8463 - val_accuracy: 0.5625 - lr: 1.0000e-05\n",
            "Epoch 8/50\n",
            "66/66 [==============================] - 14s 213ms/step - loss: 0.4597 - accuracy: 0.7914 - val_loss: 0.6454 - val_accuracy: 0.6761 - lr: 1.0000e-05\n",
            "Epoch 9/50\n",
            "66/66 [==============================] - 14s 212ms/step - loss: 0.4343 - accuracy: 0.8075 - val_loss: 0.5341 - val_accuracy: 0.7235 - lr: 1.0000e-05\n",
            "Epoch 10/50\n",
            "66/66 [==============================] - 14s 211ms/step - loss: 0.4352 - accuracy: 0.8042 - val_loss: 0.4379 - val_accuracy: 0.7898 - lr: 1.0000e-05\n",
            "Epoch 11/50\n",
            "66/66 [==============================] - 14s 212ms/step - loss: 0.4212 - accuracy: 0.8013 - val_loss: 0.4195 - val_accuracy: 0.8011 - lr: 1.0000e-05\n",
            "Epoch 12/50\n",
            "66/66 [==============================] - 14s 211ms/step - loss: 0.4157 - accuracy: 0.8089 - val_loss: 0.4239 - val_accuracy: 0.7879 - lr: 1.0000e-05\n",
            "Epoch 13/50\n",
            "66/66 [==============================] - 14s 211ms/step - loss: 0.3991 - accuracy: 0.8222 - val_loss: 0.4100 - val_accuracy: 0.8068 - lr: 1.0000e-05\n",
            "Epoch 14/50\n",
            "66/66 [==============================] - 14s 212ms/step - loss: 0.4003 - accuracy: 0.8208 - val_loss: 0.4042 - val_accuracy: 0.7992 - lr: 1.0000e-05\n",
            "Epoch 15/50\n",
            "66/66 [==============================] - 14s 211ms/step - loss: 0.3988 - accuracy: 0.8179 - val_loss: 0.4036 - val_accuracy: 0.8030 - lr: 1.0000e-05\n",
            "Epoch 16/50\n",
            "66/66 [==============================] - 14s 211ms/step - loss: 0.3999 - accuracy: 0.8146 - val_loss: 0.4139 - val_accuracy: 0.8125 - lr: 1.0000e-05\n",
            "Epoch 17/50\n",
            "66/66 [==============================] - 14s 212ms/step - loss: 0.3823 - accuracy: 0.8269 - val_loss: 0.4230 - val_accuracy: 0.8068 - lr: 1.0000e-05\n",
            "Epoch 18/50\n",
            "66/66 [==============================] - 14s 212ms/step - loss: 0.3759 - accuracy: 0.8364 - val_loss: 0.4320 - val_accuracy: 0.8125 - lr: 1.0000e-05\n",
            "Epoch 19/50\n",
            "66/66 [==============================] - 14s 211ms/step - loss: 0.3850 - accuracy: 0.8241 - val_loss: 0.4103 - val_accuracy: 0.8220 - lr: 1.0000e-05\n",
            "Epoch 20/50\n",
            "66/66 [==============================] - 14s 216ms/step - loss: 0.3826 - accuracy: 0.8331 - val_loss: 0.4306 - val_accuracy: 0.8106 - lr: 1.0000e-05\n",
            "Epoch 21/50\n",
            "66/66 [==============================] - 14s 212ms/step - loss: 0.3710 - accuracy: 0.8345 - val_loss: 0.4915 - val_accuracy: 0.7860 - lr: 1.0000e-05\n",
            "Epoch 22/50\n",
            "66/66 [==============================] - 14s 212ms/step - loss: 0.3530 - accuracy: 0.8468 - val_loss: 0.4248 - val_accuracy: 0.8220 - lr: 1.0000e-05\n",
            "Epoch 23/50\n",
            "66/66 [==============================] - 14s 212ms/step - loss: 0.3668 - accuracy: 0.8250 - val_loss: 0.4297 - val_accuracy: 0.8049 - lr: 1.0000e-05\n",
            "Epoch 24/50\n",
            "66/66 [==============================] - 14s 212ms/step - loss: 0.3591 - accuracy: 0.8459 - val_loss: 0.4309 - val_accuracy: 0.7879 - lr: 1.0000e-05\n",
            "Epoch 25/50\n",
            "66/66 [==============================] - 14s 211ms/step - loss: 0.3436 - accuracy: 0.8468 - val_loss: 0.4139 - val_accuracy: 0.8163 - lr: 1.0000e-05\n",
            "Epoch 26/50\n",
            "66/66 [==============================] - 14s 212ms/step - loss: 0.3497 - accuracy: 0.8431 - val_loss: 0.4179 - val_accuracy: 0.8011 - lr: 1.0000e-05\n",
            "Epoch 27/50\n",
            "66/66 [==============================] - ETA: 0s - loss: 0.3506 - accuracy: 0.8468\n",
            "Epoch 27: ReduceLROnPlateau reducing learning rate to 4.999999873689376e-06.\n",
            "66/66 [==============================] - 14s 212ms/step - loss: 0.3506 - accuracy: 0.8468 - val_loss: 0.4417 - val_accuracy: 0.7765 - lr: 1.0000e-05\n",
            "Epoch 28/50\n",
            "66/66 [==============================] - 14s 211ms/step - loss: 0.3316 - accuracy: 0.8483 - val_loss: 0.4171 - val_accuracy: 0.7973 - lr: 5.0000e-06\n",
            "Epoch 29/50\n",
            "66/66 [==============================] - 14s 213ms/step - loss: 0.3317 - accuracy: 0.8568 - val_loss: 0.4189 - val_accuracy: 0.7860 - lr: 5.0000e-06\n",
            "Epoch 30/50\n",
            "66/66 [==============================] - 14s 213ms/step - loss: 0.3225 - accuracy: 0.8563 - val_loss: 0.4139 - val_accuracy: 0.7992 - lr: 5.0000e-06\n",
            "Epoch 31/50\n",
            "66/66 [==============================] - 14s 212ms/step - loss: 0.3198 - accuracy: 0.8592 - val_loss: 0.4312 - val_accuracy: 0.7879 - lr: 5.0000e-06\n",
            "Epoch 32/50\n",
            "66/66 [==============================] - 14s 212ms/step - loss: 0.3136 - accuracy: 0.8715 - val_loss: 0.4341 - val_accuracy: 0.7860 - lr: 5.0000e-06\n",
            "Epoch 33/50\n",
            "66/66 [==============================] - 14s 212ms/step - loss: 0.3079 - accuracy: 0.8672 - val_loss: 0.4230 - val_accuracy: 0.8068 - lr: 5.0000e-06\n",
            "Epoch 34/50\n",
            "66/66 [==============================] - 14s 213ms/step - loss: 0.3107 - accuracy: 0.8687 - val_loss: 0.4194 - val_accuracy: 0.8106 - lr: 5.0000e-06\n",
            "Epoch 35/50\n",
            "66/66 [==============================] - 14s 213ms/step - loss: 0.3221 - accuracy: 0.8596 - val_loss: 0.4196 - val_accuracy: 0.8011 - lr: 5.0000e-06\n",
            "Epoch 36/50\n",
            "66/66 [==============================] - 14s 213ms/step - loss: 0.3045 - accuracy: 0.8687 - val_loss: 0.4338 - val_accuracy: 0.7803 - lr: 5.0000e-06\n",
            "Epoch 37/50\n",
            "66/66 [==============================] - ETA: 0s - loss: 0.3064 - accuracy: 0.8668\n",
            "Epoch 37: ReduceLROnPlateau reducing learning rate to 2.499999936844688e-06.\n",
            "66/66 [==============================] - 14s 212ms/step - loss: 0.3064 - accuracy: 0.8668 - val_loss: 0.4142 - val_accuracy: 0.7936 - lr: 5.0000e-06\n",
            "Epoch 38/50\n",
            "66/66 [==============================] - 14s 213ms/step - loss: 0.3169 - accuracy: 0.8568 - val_loss: 0.4139 - val_accuracy: 0.7841 - lr: 2.5000e-06\n",
            "Epoch 39/50\n",
            "66/66 [==============================] - 14s 212ms/step - loss: 0.3015 - accuracy: 0.8706 - val_loss: 0.4182 - val_accuracy: 0.7898 - lr: 2.5000e-06\n",
            "Epoch 40/50\n",
            "66/66 [==============================] - 14s 217ms/step - loss: 0.3071 - accuracy: 0.8682 - val_loss: 0.4061 - val_accuracy: 0.7992 - lr: 2.5000e-06\n",
            "Epoch 41/50\n",
            "66/66 [==============================] - 14s 213ms/step - loss: 0.3141 - accuracy: 0.8620 - val_loss: 0.4250 - val_accuracy: 0.7955 - lr: 2.5000e-06\n",
            "Epoch 42/50\n",
            "66/66 [==============================] - ETA: 0s - loss: 0.3033 - accuracy: 0.8653\n",
            "Epoch 42: ReduceLROnPlateau reducing learning rate to 1.249999968422344e-06.\n",
            "66/66 [==============================] - 14s 213ms/step - loss: 0.3033 - accuracy: 0.8653 - val_loss: 0.4162 - val_accuracy: 0.8087 - lr: 2.5000e-06\n",
            "Epoch 43/50\n",
            "66/66 [==============================] - 14s 212ms/step - loss: 0.3066 - accuracy: 0.8682 - val_loss: 0.4228 - val_accuracy: 0.7973 - lr: 1.2500e-06\n",
            "Epoch 44/50\n",
            "66/66 [==============================] - 14s 212ms/step - loss: 0.2905 - accuracy: 0.8819 - val_loss: 0.4193 - val_accuracy: 0.7992 - lr: 1.2500e-06\n",
            "Epoch 45/50\n",
            "66/66 [==============================] - 14s 213ms/step - loss: 0.2893 - accuracy: 0.8777 - val_loss: 0.4269 - val_accuracy: 0.7955 - lr: 1.2500e-06\n",
            "Epoch 46/50\n",
            "66/66 [==============================] - 14s 213ms/step - loss: 0.2842 - accuracy: 0.8758 - val_loss: 0.4262 - val_accuracy: 0.7973 - lr: 1.2500e-06\n",
            "Epoch 47/50\n",
            "66/66 [==============================] - 14s 213ms/step - loss: 0.2994 - accuracy: 0.8687 - val_loss: 0.4259 - val_accuracy: 0.7936 - lr: 1.2500e-06\n",
            "Epoch 48/50\n",
            "66/66 [==============================] - 14s 213ms/step - loss: 0.3124 - accuracy: 0.8658 - val_loss: 0.4202 - val_accuracy: 0.8011 - lr: 1.2500e-06\n",
            "Epoch 49/50\n",
            "66/66 [==============================] - ETA: 0s - loss: 0.3060 - accuracy: 0.8606\n",
            "Epoch 49: ReduceLROnPlateau reducing learning rate to 6.24999984211172e-07.\n",
            "66/66 [==============================] - 14s 213ms/step - loss: 0.3060 - accuracy: 0.8606 - val_loss: 0.4259 - val_accuracy: 0.7860 - lr: 1.2500e-06\n",
            "Epoch 50/50\n",
            "66/66 [==============================] - 14s 216ms/step - loss: 0.2994 - accuracy: 0.8592 - val_loss: 0.4273 - val_accuracy: 0.7973 - lr: 6.2500e-07\n",
            "dict_keys(['loss', 'accuracy', 'val_loss', 'val_accuracy', 'lr'])\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ],
      "source": [
        "input_shape = (img_size,img_size,3)\n",
        "lr = 1e-5\n",
        "epochs = 50\n",
        "batch_size = 32\n",
        "\n",
        "model = InceptionV3(include_top=True,\n",
        "                 weights= None,\n",
        "                 input_tensor=None,\n",
        "                 input_shape=input_shape,\n",
        "                 pooling=None,\n",
        "                 classes=2)\n",
        "\n",
        "model.compile(optimizer = Adam(lr) ,\n",
        "              loss = \"binary_crossentropy\", \n",
        "              metrics=[\"accuracy\"])\n",
        "\n",
        "history = model.fit(X_train, y_train, validation_split=0.2,\n",
        "                    epochs= epochs, batch_size= batch_size, verbose=1, \n",
        "                    callbacks=[learning_rate_reduction]\n",
        "                   )\n",
        "\n",
        "# list all data in history\n",
        "print(history.history.keys())\n",
        "# summarize history for accuracy\n",
        "plt.plot(history.history['accuracy'])\n",
        "plt.plot(history.history['val_accuracy'])\n",
        "plt.title('model accuracy')\n",
        "plt.ylabel('accuracy')\n",
        "plt.xlabel('epoch')\n",
        "plt.legend(['train', 'test'], loc='upper left')\n",
        "plt.show()\n",
        "# summarize history for loss\n",
        "plt.plot(history.history['loss'])\n",
        "plt.plot(history.history['val_loss'])\n",
        "plt.title('model loss')\n",
        "plt.ylabel('loss')\n",
        "plt.xlabel('epoch')\n",
        "plt.legend(['train', 'test'], loc='upper left')\n",
        "plt.show()\n",
        "\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "ncuWaYMhClKW",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "a5546915-9536-4508-bf13-08d4d0dac8d7"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "0.8287878787878787\n",
            "Saved model to disk\n"
          ]
        }
      ],
      "source": [
        "# Testing model on test data to evaluate\n",
        "y_pred = model.predict(X_test)\n",
        "inceptionv3=accuracy_score(np.argmax(y_test, axis=1), np.argmax(y_pred, axis=1))\n",
        "print(inceptionv3)\n",
        "\n",
        "# save model\n",
        "# serialize model to JSON\n",
        "inceptionV3_json = model.to_json()\n",
        "\n",
        "with open(\"inceptionV3.json\", \"w\") as json_file:\n",
        "    json_file.write(inceptionV3_json)\n",
        "    \n",
        "# serialize weights to HDF5\n",
        "model.save_weights(\"inceptionV3.h5\")\n",
        "print(\"Saved model to disk\")"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "kEkhlrOOClKW"
      },
      "source": [
        "# Step-9: MobileNetV2"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "ueAGYUASClKW",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "outputId": "09d073ac-3d82-4a65-ac80-66522ecbcd47"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Epoch 1/50\n",
            "429/429 [==============================] - 29s 52ms/step - loss: 0.6848 - accuracy: 0.5712 - val_loss: 0.6894 - val_accuracy: 0.5515 - lr: 1.0000e-05\n",
            "Epoch 2/50\n",
            "429/429 [==============================] - 18s 42ms/step - loss: 0.6355 - accuracy: 0.6482 - val_loss: 0.6883 - val_accuracy: 0.5515 - lr: 1.0000e-05\n",
            "Epoch 3/50\n",
            "429/429 [==============================] - 19s 44ms/step - loss: 0.6150 - accuracy: 0.6622 - val_loss: 0.6920 - val_accuracy: 0.5515 - lr: 1.0000e-05\n",
            "Epoch 4/50\n",
            "429/429 [==============================] - 18s 42ms/step - loss: 0.5987 - accuracy: 0.6750 - val_loss: 0.6960 - val_accuracy: 0.5515 - lr: 1.0000e-05\n",
            "Epoch 5/50\n",
            "429/429 [==============================] - 18s 43ms/step - loss: 0.5715 - accuracy: 0.6873 - val_loss: 0.7001 - val_accuracy: 0.5515 - lr: 1.0000e-05\n",
            "Epoch 6/50\n",
            "429/429 [==============================] - 18s 43ms/step - loss: 0.5640 - accuracy: 0.7007 - val_loss: 0.7142 - val_accuracy: 0.5515 - lr: 1.0000e-05\n",
            "Epoch 7/50\n",
            "429/429 [==============================] - 18s 42ms/step - loss: 0.5454 - accuracy: 0.7077 - val_loss: 0.7289 - val_accuracy: 0.5515 - lr: 1.0000e-05\n",
            "Epoch 8/50\n",
            "429/429 [==============================] - 18s 42ms/step - loss: 0.5543 - accuracy: 0.7095 - val_loss: 0.7386 - val_accuracy: 0.5515 - lr: 1.0000e-05\n",
            "Epoch 9/50\n",
            "429/429 [==============================] - 18s 42ms/step - loss: 0.5530 - accuracy: 0.7170 - val_loss: 0.7369 - val_accuracy: 0.5515 - lr: 1.0000e-05\n",
            "Epoch 10/50\n",
            "429/429 [==============================] - 18s 41ms/step - loss: 0.5464 - accuracy: 0.7188 - val_loss: 0.7442 - val_accuracy: 0.5515 - lr: 1.0000e-05\n",
            "Epoch 11/50\n",
            "429/429 [==============================] - 18s 42ms/step - loss: 0.5456 - accuracy: 0.7106 - val_loss: 0.7430 - val_accuracy: 0.5515 - lr: 1.0000e-05\n",
            "Epoch 12/50\n",
            "429/429 [==============================] - 18s 41ms/step - loss: 0.5426 - accuracy: 0.7229 - val_loss: 0.7765 - val_accuracy: 0.5515 - lr: 1.0000e-05\n",
            "Epoch 13/50\n",
            "429/429 [==============================] - 18s 42ms/step - loss: 0.5419 - accuracy: 0.7223 - val_loss: 0.8007 - val_accuracy: 0.5515 - lr: 1.0000e-05\n",
            "Epoch 14/50\n",
            "429/429 [==============================] - 18s 42ms/step - loss: 0.5551 - accuracy: 0.7013 - val_loss: 0.8411 - val_accuracy: 0.5515 - lr: 1.0000e-05\n",
            "Epoch 15/50\n",
            "429/429 [==============================] - 18s 41ms/step - loss: 0.5365 - accuracy: 0.7270 - val_loss: 0.8772 - val_accuracy: 0.5515 - lr: 1.0000e-05\n",
            "Epoch 16/50\n",
            "429/429 [==============================] - 18s 42ms/step - loss: 0.5248 - accuracy: 0.7340 - val_loss: 0.8828 - val_accuracy: 0.5515 - lr: 1.0000e-05\n",
            "Epoch 17/50\n",
            "429/429 [==============================] - 18s 41ms/step - loss: 0.5185 - accuracy: 0.7322 - val_loss: 0.8267 - val_accuracy: 0.5666 - lr: 1.0000e-05\n",
            "Epoch 18/50\n",
            "429/429 [==============================] - 18s 42ms/step - loss: 0.5226 - accuracy: 0.7450 - val_loss: 0.6808 - val_accuracy: 0.6111 - lr: 1.0000e-05\n",
            "Epoch 19/50\n",
            "429/429 [==============================] - 18s 41ms/step - loss: 0.5153 - accuracy: 0.7334 - val_loss: 0.6035 - val_accuracy: 0.6652 - lr: 1.0000e-05\n",
            "Epoch 20/50\n",
            "429/429 [==============================] - 18s 41ms/step - loss: 0.5221 - accuracy: 0.7246 - val_loss: 0.5254 - val_accuracy: 0.6977 - lr: 1.0000e-05\n",
            "Epoch 21/50\n",
            "429/429 [==============================] - 18s 42ms/step - loss: 0.5080 - accuracy: 0.7427 - val_loss: 0.4756 - val_accuracy: 0.7400 - lr: 1.0000e-05\n",
            "Epoch 22/50\n",
            "429/429 [==============================] - 18s 42ms/step - loss: 0.5236 - accuracy: 0.7380 - val_loss: 0.4626 - val_accuracy: 0.7541 - lr: 1.0000e-05\n",
            "Epoch 23/50\n",
            "429/429 [==============================] - ETA: 0s - loss: 0.5228 - accuracy: 0.7340\n",
            "Epoch 23: ReduceLROnPlateau reducing learning rate to 4.999999873689376e-06.\n",
            "429/429 [==============================] - 18s 41ms/step - loss: 0.5228 - accuracy: 0.7340 - val_loss: 0.4577 - val_accuracy: 0.7541 - lr: 1.0000e-05\n",
            "Epoch 24/50\n",
            "429/429 [==============================] - 18s 42ms/step - loss: 0.5167 - accuracy: 0.7305 - val_loss: 0.4549 - val_accuracy: 0.7595 - lr: 5.0000e-06\n",
            "Epoch 25/50\n",
            "429/429 [==============================] - 18s 41ms/step - loss: 0.4912 - accuracy: 0.7561 - val_loss: 0.4564 - val_accuracy: 0.7703 - lr: 5.0000e-06\n",
            "Epoch 26/50\n",
            "429/429 [==============================] - 18s 42ms/step - loss: 0.5161 - accuracy: 0.7392 - val_loss: 0.4465 - val_accuracy: 0.7833 - lr: 5.0000e-06\n",
            "Epoch 27/50\n",
            "429/429 [==============================] - 18s 42ms/step - loss: 0.4961 - accuracy: 0.7474 - val_loss: 0.4414 - val_accuracy: 0.7725 - lr: 5.0000e-06\n",
            "Epoch 28/50\n",
            "429/429 [==============================] - 19s 43ms/step - loss: 0.4879 - accuracy: 0.7509 - val_loss: 0.4402 - val_accuracy: 0.7790 - lr: 5.0000e-06\n",
            "Epoch 29/50\n",
            "429/429 [==============================] - 18s 42ms/step - loss: 0.5027 - accuracy: 0.7468 - val_loss: 0.4340 - val_accuracy: 0.7790 - lr: 5.0000e-06\n",
            "Epoch 30/50\n",
            "429/429 [==============================] - ETA: 0s - loss: 0.5065 - accuracy: 0.7369\n",
            "Epoch 30: ReduceLROnPlateau reducing learning rate to 2.499999936844688e-06.\n",
            "429/429 [==============================] - 18s 42ms/step - loss: 0.5065 - accuracy: 0.7369 - val_loss: 0.4425 - val_accuracy: 0.7692 - lr: 5.0000e-06\n",
            "Epoch 31/50\n",
            "429/429 [==============================] - 18s 42ms/step - loss: 0.5223 - accuracy: 0.7334 - val_loss: 0.4367 - val_accuracy: 0.7736 - lr: 2.5000e-06\n",
            "Epoch 32/50\n",
            "429/429 [==============================] - 18s 42ms/step - loss: 0.5040 - accuracy: 0.7375 - val_loss: 0.4318 - val_accuracy: 0.7768 - lr: 2.5000e-06\n",
            "Epoch 33/50\n",
            "429/429 [==============================] - 18s 42ms/step - loss: 0.4796 - accuracy: 0.7620 - val_loss: 0.4456 - val_accuracy: 0.7746 - lr: 2.5000e-06\n",
            "Epoch 34/50\n",
            "429/429 [==============================] - 18s 43ms/step - loss: 0.5160 - accuracy: 0.7328 - val_loss: 0.4409 - val_accuracy: 0.7790 - lr: 2.5000e-06\n",
            "Epoch 35/50\n",
            "429/429 [==============================] - 18s 42ms/step - loss: 0.5007 - accuracy: 0.7550 - val_loss: 0.4417 - val_accuracy: 0.7746 - lr: 2.5000e-06\n",
            "Epoch 36/50\n",
            "429/429 [==============================] - 18s 41ms/step - loss: 0.4770 - accuracy: 0.7765 - val_loss: 0.4455 - val_accuracy: 0.7757 - lr: 2.5000e-06\n",
            "Epoch 37/50\n",
            "429/429 [==============================] - 18s 42ms/step - loss: 0.4939 - accuracy: 0.7474 - val_loss: 0.4356 - val_accuracy: 0.7801 - lr: 2.5000e-06\n",
            "Epoch 38/50\n",
            "429/429 [==============================] - 18s 42ms/step - loss: 0.4964 - accuracy: 0.7375 - val_loss: 0.4375 - val_accuracy: 0.7692 - lr: 2.5000e-06\n",
            "Epoch 39/50\n",
            "429/429 [==============================] - 18s 42ms/step - loss: 0.4738 - accuracy: 0.7707 - val_loss: 0.4432 - val_accuracy: 0.7692 - lr: 2.5000e-06\n",
            "Epoch 40/50\n",
            "429/429 [==============================] - 18s 42ms/step - loss: 0.4950 - accuracy: 0.7608 - val_loss: 0.4347 - val_accuracy: 0.7833 - lr: 2.5000e-06\n",
            "Epoch 41/50\n",
            "429/429 [==============================] - ETA: 0s - loss: 0.5033 - accuracy: 0.7456\n",
            "Epoch 41: ReduceLROnPlateau reducing learning rate to 1.249999968422344e-06.\n",
            "429/429 [==============================] - 18s 42ms/step - loss: 0.5033 - accuracy: 0.7456 - val_loss: 0.4292 - val_accuracy: 0.7876 - lr: 2.5000e-06\n",
            "Epoch 42/50\n",
            "429/429 [==============================] - 18s 42ms/step - loss: 0.4903 - accuracy: 0.7526 - val_loss: 0.4297 - val_accuracy: 0.7844 - lr: 1.2500e-06\n",
            "Epoch 43/50\n",
            "429/429 [==============================] - 18s 42ms/step - loss: 0.4965 - accuracy: 0.7555 - val_loss: 0.4324 - val_accuracy: 0.7811 - lr: 1.2500e-06\n",
            "Epoch 44/50\n",
            "429/429 [==============================] - 18s 42ms/step - loss: 0.4767 - accuracy: 0.7690 - val_loss: 0.4335 - val_accuracy: 0.7746 - lr: 1.2500e-06\n",
            "Epoch 45/50\n",
            "429/429 [==============================] - 18s 42ms/step - loss: 0.4981 - accuracy: 0.7532 - val_loss: 0.4346 - val_accuracy: 0.7692 - lr: 1.2500e-06\n",
            "Epoch 46/50\n",
            "429/429 [==============================] - ETA: 0s - loss: 0.4887 - accuracy: 0.7509\n",
            "Epoch 46: ReduceLROnPlateau reducing learning rate to 6.24999984211172e-07.\n",
            "429/429 [==============================] - 18s 43ms/step - loss: 0.4887 - accuracy: 0.7509 - val_loss: 0.4353 - val_accuracy: 0.7681 - lr: 1.2500e-06\n",
            "Epoch 47/50\n",
            "429/429 [==============================] - 20s 47ms/step - loss: 0.5108 - accuracy: 0.7445 - val_loss: 0.4361 - val_accuracy: 0.7616 - lr: 6.2500e-07\n",
            "Epoch 48/50\n",
            "429/429 [==============================] - 24s 56ms/step - loss: 0.4958 - accuracy: 0.7520 - val_loss: 0.4367 - val_accuracy: 0.7681 - lr: 6.2500e-07\n",
            "Epoch 49/50\n",
            "429/429 [==============================] - 18s 42ms/step - loss: 0.4922 - accuracy: 0.7608 - val_loss: 0.4358 - val_accuracy: 0.7768 - lr: 6.2500e-07\n",
            "Epoch 50/50\n",
            "429/429 [==============================] - 22s 51ms/step - loss: 0.4863 - accuracy: 0.7544 - val_loss: 0.4351 - val_accuracy: 0.7833 - lr: 6.2500e-07\n",
            "dict_keys(['loss', 'accuracy', 'val_loss', 'val_accuracy', 'lr'])\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "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\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ],
      "source": [
        "input_shape = (img_size,img_size,3)\n",
        "lr = 1e-5\n",
        "epochs = 50\n",
        "batch_size = 4\n",
        "\n",
        "model = MobileNetV2(include_top=True,\n",
        "                 weights= None,\n",
        "                 input_tensor=None,\n",
        "                 input_shape=input_shape,\n",
        "                 pooling=None,\n",
        "                 classes=2)\n",
        "\n",
        "model.compile(optimizer = Adam(lr) ,\n",
        "              loss = \"binary_crossentropy\", \n",
        "              metrics=[\"accuracy\"])\n",
        "\n",
        "history = model.fit(X_train, y_train, validation_split=0.35,\n",
        "                    epochs= epochs, batch_size= batch_size, verbose=1, \n",
        "                    callbacks=[learning_rate_reduction]\n",
        "                   )\n",
        "\n",
        "# list all data in history\n",
        "print(history.history.keys())\n",
        "# summarize history for accuracy\n",
        "plt.plot(history.history['accuracy'])\n",
        "plt.plot(history.history['val_accuracy'])\n",
        "plt.title('model accuracy')\n",
        "plt.ylabel('accuracy')\n",
        "plt.xlabel('epoch')\n",
        "plt.legend(['train', 'test'], loc='upper left')\n",
        "plt.show()\n",
        "# summarize history for loss\n",
        "plt.plot(history.history['loss'])\n",
        "plt.plot(history.history['val_loss'])\n",
        "plt.title('model loss')\n",
        "plt.ylabel('loss')\n",
        "plt.xlabel('epoch')\n",
        "plt.legend(['train', 'test'], loc='upper left')\n",
        "plt.show()\n",
        "\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "3A47nMJFClKX",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "3502b55b-93a5-4539-d460-3e36382e4fbf"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "0.7621212121212121\n",
            "Saved model to disk\n"
          ]
        }
      ],
      "source": [
        "# Testing model on test data to evaluate\n",
        "y_pred = model.predict(X_test)\n",
        "mobilenetv2=accuracy_score(np.argmax(y_test, axis=1), np.argmax(y_pred, axis=1))\n",
        "print(mobilenetv2)\n",
        "\n",
        "# save model\n",
        "# serialize model to JSON\n",
        "# mobileNetV2_json = model.to_json()\n",
        "\n",
        "# with open(\"mobileNetV2.json\", \"w\") as json_file:\n",
        "#     json_file.write(mobileNetV2_json)\n",
        "    \n",
        "# serialize weights to HDF5\n",
        "model.save_weights(\"mobileNetV2.h5\")\n",
        "print(\"Saved model to disk\")"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "l = {'Sqeu_model':Sqeu_model*100,'vgg16':vgg16*100,'inceptionv3':inceptionv3*100,'mobilenetv2':mobilenetv2*100}"
      ],
      "metadata": {
        "id": "hLq79ye7d5xM"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "f76HpDeNClKY"
      },
      "outputs": [],
      "source": [
        "import seaborn as sns\n",
        "import matplotlib.pyplot as plt\n",
        "%matplotlib inline"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "transferLearningMethods = list(l.keys())\n",
        "accuracies = list(l.values())\n",
        "\n",
        "plt.bar(transferLearningMethods, accuracies, color = \"red\", width = 0.4)\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 266
        },
        "id": "evFzVHWbdnij",
        "outputId": "adc6d42a-ced4-4b27-98dc-f78f754d0e1e"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "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\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "img="
      ],
      "metadata": {
        "id": "a8Lq7PIxgjmE"
      },
      "execution_count": null,
      "outputs": []
    }
  ],
  "metadata": {
    "accelerator": "GPU",
    "colab": {
      "name": "cnn- skincancer.ipynb",
      "provenance": [],
      "collapsed_sections": []
    },
    "kernelspec": {
      "display_name": "Python 3",
      "language": "python",
      "name": "python3"
    },
    "language_info": {
      "codemirror_mode": {
        "name": "ipython",
        "version": 3
      },
      "file_extension": ".py",
      "mimetype": "text/x-python",
      "name": "python",
      "nbconvert_exporter": "python",
      "pygments_lexer": "ipython3",
      "version": "3.7.12"
    }
  },
  "nbformat": 4,
  "nbformat_minor": 0
}